{
    "docs": [
        {
            "location": "/", 
            "text": "Citrix Provisioning Services 7.12\n\n\n\nPowerShell with Objects Programmer\u2019s Guide\n\n\n\nIntroduction\n\n\nUse Provisioning Services\u2019 programming interfaces to manageyour implementation from a command line or from scripts. Only users withcorrect administrative privileges can use programming commands.Non-administrators, that do not have elevated privileges and attempt to use thesecommands, will receive the \u2018Invalid access\u2019 message.\n\n\n\nFour different programming interfaces exist:\n\n\n\n\u00b7\nManagement Command Line Interface (MCLI)\n\n\n\n\u00b7\nSimple Object Access Protocol (SOAP) Server Programmer Interface\n\n\n\n\u00b7\nPowerShell Programmer Interface with Objects\n\n\n\n\u00b7\nPowerShell Programmer Interface (Deprecated)\n\n\n\nThis document provides the information needed to use thisinterface.\n\n\n\nUsing the PowerShell Programmer Interface withObjects\n\n\nUse the information that follows to manage a ProvisioningService\u2019s implementation from the PowerShell Interface with Objects.\n\n\n\nInstallation of PowerShell Snap-In\n\n\nThe PowerShell snap-in (Citrix.PVS.SnapIn.dll) can beinstalled using the Provisioning Server Console install.\n\n\n\nRegistration of McliPSSnapIn.dll usingImport-Module\n\n\nIf the snap-in later needs to be registered in PowerShell,this can be manually done by running one of the following command inPowerShell. The path where the Citrix.PVS.SnapIn.dll is installed needs to beused.\n\n\n\nImport-Module \u201cpath\\Citrix.PVS.SnapIn.dll\u201d\n\n\n\nRegistration of Citrix.PVS.SnapIn.dll usingAdd-PSSnapin\n\n\nIf the snap-in later needs to be registered in PowerShell,this can be manually done by running one of the following commands at the DOScommand prompt. After the command is run and PowerShell is started, the snap-inneeds to be added using the command \u201cAdd-PSSnapin -Name Citrix.PVS.SnapIn\u201d.\n\n\n\n64-bit Registration\n\n\n%systemroot%\\Microsoft.NET\\Framework64\\v4.0.30319\\installutil.exeCitrix.PVS.SnapIn.dll\n\n\n\n32-bit Registration\n\n\n%systemroot%\\Microsoft.NET\\Framework\\v4.0.30319\\installutil.exeCitrix.PVS.SnapIn.dll\n\n\n\nAlternative Registration of Citrix.PVS.SnapIn.dllin PowerShell\n\n\nAnother way to register is by running one of the followingcommands at the PowerShell command prompt:\n\n\n\n64-bit Registration in PowerShell\n\n\n$installutil= $env:systemroot + '\\Microsoft.NET\\Framework64\\v4.0.30319\\installutil.exe'\n\n\n\n;$installutilCitrix.PVS.SnapIn.dll\n\n\n\nAdd-PSSnapin-Name Citrix.PVS.SnapIn\n\n\n\n32-bit Registration in PowerShell\n\n\n$installutil= $env:systemroot + '\\Microsoft.NET\\Framework32\\v4.0.30319\\installutil.exe'\n\n\n\n;$installutilCitrix.PVS.SnapIn.dll\n\n\n\nAdd-PSSnapin-Name Citrix.PVS.SnapIn\n\n\n\nUninstall of PowerShell Snap-In\n\n\nThe PowerShell snap-in (Citrix.PVS.SnapIn.dll) can beuninstalled using the Provisioning Server Console install.\n\n\n\nUnregister of Citrix.PVS.SnapIn.dll\n\n\nThe snap-in needs to be unregistered from PowerShell, thiscan be manually done by running one of the following commands at the DOScommand prompt:\n\n\n\n64-bit Unregister\n\n\n%systemroot%\\Microsoft.NET\\Framework64\\v4.0.30319\\installutil.exe-u Citrix.PVS.SnapIn.dll\n\n\n\n32-bit Unregister\n\n\n%systemroot%\\Microsoft.NET\\Framework\\v4.0.30319\\installutil.exe-u Citrix.PVS.SnapIn.dll\n\n\n\nAlternative Unregister of Citrix.PVS.SnapIn.dll inPowerShell\n\n\nAnother way to unregister is by running one of the followingcommands at the PowerShell command prompt:\n\n\n\n64-bit Unregister in PowerShell\n\n\n$installutil= $env:systemroot + '\\Microsoft.NET\\Framework64\\v4.0.30319\\installutil.exe'\n\n\n\n;$installutil-u Citrix.PVS.SnapIn.dll\n\n\n\n32-bit Unregister in PowerShell\n\n\n$installutil= $env:systemroot + '\\Microsoft.NET\\Framework32\\v4.0.30319\\installutil.exe'\n\n\n\n;$installutil-u Citrix.PVS.SnapIn.dll\n\n\n\nSetup of the SOAP Server Communication\n\n\nUnless the defaults are fine, use this command to set thevalues for the SOAP Server connection:\n\n\n\nSet-PvsConnection\n\n\nSet the SoapServer connection, and if -Persist isspecified the connection settings are saved in the registry. A PvsConnectionobject can be used as the parameter.\n\n\n\nRequired\n\n\n\nPvsConnection Connection: PvsConnection object withchanged property value(s) to be set. The object can come from a pileline.\n\n\n\nThese values are in the PvsConnection object, andonly will be set if the value has changed.\n\n\n\nstring Name or Server: Name or IP of the Server toconnect to. Default=localhost\n\n\n\nstring Port: The Port to use to connect.Default=54321\n\n\n\nstring User: User name to use for Authentication. Ifit has a value, it will be *****. Default=\"\"\n\n\n\nstring Domain: Domain name to use forAuthentication. If it has a value, it will be *****. Default=\"\"\n\n\n\nstring Password: Password to use for Authentication.If it has a value, it will be *****. Default=\"\"\n\n\n\nstring Persist: True when the connection settingsshould be, for Set, or have been, for Get, saved to the registry.\n\n\n\nPvsConnection can be created or modified usingmethods below:\n\n\n\nNew-Object Citrix.PVS.SnapIn.PvsConnection: Createsdefault Server=localhost, Port=54321, and no authentication.\n\n\n\nNew-ObjectCitrix.PVS.SnapIn.PvsConnection(Citrix.PVS.SnapIn copyFrom): Creates withsettings of the copyFrom Citrix.PVS.SnapIn.\n\n\n\nSetServerToLocalHostDefaultSettings:Server=localhost, Port=54321, and no authentication.\n\n\n\nCopy(Citrix.PVS.SnapIn copyFrom): Modifies thesettings to match the copyFrom Citrix.PVS.SnapIn.\n\n\n\nEquals(Citrix.PVS.SnapIn compareTo): Returns truewhen the settings match what is in the compareTo.\n\n\n\n\n\n\nWhen Connection is not passed, the parameters beloware used:\n\n\n\nOptional field values to set:\n\n\n\nstring Name or Server: Name or IP of the Server toconnect to. Default=localhost\n\n\n\nstring Port: The Port to use to connect.Default=54321\n\n\n\nstring User: User name to use for Authentication. Ifit has a value, it will be *****. Default=\"\"\n\n\n\nstring Domain: Domain name to use forAuthentication. If it has a value, it will be *****. Default=\"\"\n\n\n\nstring Password: Password to use for Authentication.If it has a value, it will be *****. Default=\"\"\n\n\n\nstring Persist: True when the connection settingsshould be, for Set, or have been, for Get, saved to the registry.\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsConnection object is returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsConnection for Individual Fields\n\n\nGet the PvsConnection into a $o variable. Change the$o field values and then Set the PvsConnection with the result.\n\n\n\n$o = Get-PvsConnection -Fields Port\n\n\n\n$o.Port = 54322\n\n\n\nSet-PvsConnection $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsConnection for a Field Using Pipe\n\n\nGet the PvsConnection into a $o variable for thefield that has the wrong value. Change the $o field to the correct value and thenSet the PvsConnection with the result.\n\n\n\nGet-PvsConnection -Fields Port | Where-Object{$_.Port -ne 54322} | foreach { $o = $_; $o.Port = 54322; $o } |Set-PvsConnection\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nEXAMPLE 3: Set PvsConnection Port with Parameter\n\n\nSet the PvsConnection Port using the Port parameterinstead of a PvsConnection object.\n\n\n\nSet-PvsConnection -Port 54322\n\n\n\nThis is the only Set command that has fieldparameters.\n\n\n\nCommand Specific Help\n\n\nAll of the documentation for specific commands is includedin the command-line help by calling Get-Help and the name of the command, forexample \u201cGet-Help Get-PvsDevice\u201d. The documentation for the specific commandincludes information about the object that is may get or set. The documentationof all of the objects is included in the \u201cObjects, in the Citrix.PVS.SnapInNamespace\u201d section.\n\n\n\nError Handling\n\n\nFor the Citrix.PVS.SnapIn, if an error occurs, aPvsException will be in the Exception member of the $error. The \u201cError codes\u201dinformation is included in this document.\n\n\n\nThe members of a PvsException are:\n\n\n\nInnerException:The exception that occured. This exception maybe an EAException or otherstandard Exception.\n\n\n\nToString():Has the formatted full Message of the InnerException.\n\n\n\nIf theInnerException GetType().Name equals \"EAException\", then The membersof it are:\n\n\n\n returnCode: The number, as shown below in the Error codes. The name of theerror, for example \"NotImplemented\", is not included in theEAException.\n\n\n\n Message: The message, as shown below in the Error codes. The [v1], [v2], [v3],[v4], and [v5] will be replaced with values as required.\n\n\n\n Details: Has the Details for the EAException if there are any. OtherException,ManagementInterfaceError and PvsStatusException will have Details.\n\n\n\n ToString(): Has the Message as shown below in the Error codes. If there isDetails, it will be returned or included, and if partialReturn, they will beincluded.\n\n\n\n partialReturn: Might have a list of EAException objects if any of the itemsprocessed during the command had any issues.\n\n\n\n Severity: Can have the values Critical, Error, Warning or Duplicate.\n\n\n\n Source: Has the value that is displayed in the Console as a Title or Type forthe error.\n\n\n\n\n\n\nShort cmdlet list\n\n\nAdd-PvsDeviceToDomain\n\n\n\nAdd-PvsDeviceToView\n\n\n\nAdd-PvsDiskLocatorToDevice\n\n\n\nAdd-PvsDiskToUpdateTask\n\n\n\nAdd-PvsDiskVersion\n\n\n\nClear-PvsConnection\n\n\n\nClear-PvsTask\n\n\n\nCopy-PvsDeviceProperties\n\n\n\nCopy-PvsDiskProperties\n\n\n\nCopy-PvsServerProperties\n\n\n\nDisable-PvsDeviceDiskLocator\n\n\n\nDismount-PvsDisk\n\n\n\nEnable-PvsDeviceDiskLocator\n\n\n\nExport-PvsAuditTrail\n\n\n\nExport-PvsDisk\n\n\n\nExport-PvsOemLicenses\n\n\n\nGet-PvsADAccount\n\n\n\nGet-PvsAuditActionParameter\n\n\n\nGet-PvsAuditActionProperty\n\n\n\nGet-PvsAuditActionSibling\n\n\n\nGet-PvsAuditTrail\n\n\n\nGet-PvsAuthGroup\n\n\n\nGet-PvsAuthGroupUsage\n\n\n\nGet-PvsCeipData\n\n\n\nGet-PvsCisData\n\n\n\nGet-PvsCollection\n\n\n\nGet-PvsConnection\n\n\n\nGet-PvsCreateDiskStatus\n\n\n\nGet-PvsDevice\n\n\n\nGet-PvsDeviceBootstrap\n\n\n\nGet-PvsDeviceCount\n\n\n\nGet-PvsDeviceDiskLocatorEnabled\n\n\n\nGet-PvsDeviceDiskTempVersion\n\n\n\nGet-PvsDeviceInfo\n\n\n\nGet-PvsDevicePersonality\n\n\n\nGet-PvsDeviceStatus\n\n\n\nGet-PvsDirectory\n\n\n\nGet-PvsDisk\n\n\n\nGet-PvsDiskInfo\n\n\n\nGet-PvsDiskInventory\n\n\n\nGet-PvsDiskLocator\n\n\n\nGet-PvsDiskLocatorCount\n\n\n\nGet-PvsDiskLocatorLock\n\n\n\nGet-PvsDiskUpdateDevice\n\n\n\nGet-PvsDiskUpdateStatus\n\n\n\nGet-PvsDiskVersion\n\n\n\nGet-PvsExists\n\n\n\nGet-PvsFarm\n\n\n\nGet-PvsFarmView\n\n\n\nGet-PvsGroup\n\n\n\nGet-PvsLocalServer\n\n\n\nGet-PvsMaintenanceVersionExists\n\n\n\nGet-PvsMinimumLastAutoAddDeviceNumber\n\n\n\nGet-PvsMountedDisk\n\n\n\nGet-PvsMountedDriveLetter\n\n\n\nGet-PvsNewDiskVersion\n\n\n\nGet-PvsServer\n\n\n\nGet-PvsServerBiosBootstrap\n\n\n\nGet-PvsServerBootstrap\n\n\n\nGet-PvsServerBootstrapName\n\n\n\nGet-PvsServerCount\n\n\n\nGet-PvsServerInfo\n\n\n\nGet-PvsServerName\n\n\n\nGet-PvsServerStatus\n\n\n\nGet-PvsServerStore\n\n\n\nGet-PvsServerStoreActiveDeviceCount\n\n\n\nGet-PvsSite\n\n\n\nGet-PvsSiteView\n\n\n\nGet-PvsStore\n\n\n\nGet-PvsStoreFreeSpace\n\n\n\nGet-PvsStoreSharedOrServerPath\n\n\n\nGet-PvsTask\n\n\n\nGet-PvsTaskStatus\n\n\n\nGet-PvsUndefinedDisk\n\n\n\nGet-PvsUpdateTask\n\n\n\nGet-PvsUploadCeip\n\n\n\nGet-PvsVersion\n\n\n\nGet-PvsVirtualHostingPool\n\n\n\nGet-PvsXDSite\n\n\n\nGrant-PvsAuthGroup\n\n\n\nImport-PvsDevices\n\n\n\nImport-PvsDisk\n\n\n\nImport-PvsOemLicenses\n\n\n\nInvoke-PvsActivateDeviceMAK\n\n\n\nInvoke-PvsMarkDown\n\n\n\nInvoke-PvsPromoteDiskVersion\n\n\n\nInvoke-PvsRebalanceDevices\n\n\n\nInvoke-PvsRevertDiskVersion\n\n\n\nMerge-PvsDisk\n\n\n\nMount-PvsDisk\n\n\n\nMove-PvsDeviceToCollection\n\n\n\nMove-PvsServerToSite\n\n\n\nNew-PvsAuthGroup\n\n\n\nNew-PvsCeipData\n\n\n\nNew-PvsCisData\n\n\n\nNew-PvsCollection\n\n\n\nNew-PvsDevice\n\n\n\nNew-PvsDeviceWithPersonalvDisk\n\n\n\nNew-PvsDirectory\n\n\n\nNew-PvsDiskLocator\n\n\n\nNew-PvsDiskMaintenanceVersion\n\n\n\nNew-PvsDiskUpdateDevice\n\n\n\nNew-PvsFarmView\n\n\n\nNew-PvsServer\n\n\n\nNew-PvsSite\n\n\n\nNew-PvsSiteView\n\n\n\nNew-PvsStore\n\n\n\nNew-PvsUpdateTask\n\n\n\nNew-PvsVirtualHostingPool\n\n\n\nRemove-PvsAuthGroup\n\n\n\nRemove-PvsCollection\n\n\n\nRemove-PvsDevice\n\n\n\nRemove-PvsDeviceDiskCacheFile\n\n\n\nRemove-PvsDeviceFromDomain\n\n\n\nRemove-PvsDeviceFromView\n\n\n\nRemove-PvsDirectory\n\n\n\nRemove-PvsDiskFromUpdateTask\n\n\n\nRemove-PvsDiskLocator\n\n\n\nRemove-PvsDiskLocatorFromDevice\n\n\n\nRemove-PvsDiskUpdateDevice\n\n\n\nRemove-PvsDiskVersion\n\n\n\nRemove-PvsFarmView\n\n\n\nRemove-PvsServer\n\n\n\nRemove-PvsServerStore\n\n\n\nRemove-PvsSite\n\n\n\nRemove-PvsSiteView\n\n\n\nRemove-PvsStore\n\n\n\nRemove-PvsUpdateTask\n\n\n\nRemove-PvsVirtualHostingPool\n\n\n\nReset-PvsDatabase\n\n\n\nReset-PvsDeviceForDomain\n\n\n\nRestart-PvsStreamService\n\n\n\nRevoke-PvsAuthGroup\n\n\n\nSet-PvsAuthGroup\n\n\n\nSet-PvsCeipData\n\n\n\nSet-PvsCisData\n\n\n\nSet-PvsCollection\n\n\n\nSet-PvsConnection\n\n\n\nSet-PvsDevice\n\n\n\nSet-PvsDeviceBootstrap\n\n\n\nSet-PvsDevicePersonality\n\n\n\nSet-PvsDisk\n\n\n\nSet-PvsDiskLocator\n\n\n\nSet-PvsDiskUpdateDevice\n\n\n\nSet-PvsDiskVersion\n\n\n\nSet-PvsFarm\n\n\n\nSet-PvsFarmView\n\n\n\nSet-PvsOverrideVersion\n\n\n\nSet-PvsServer\n\n\n\nSet-PvsServerBiosBootstrap\n\n\n\nSet-PvsServerBootstrap\n\n\n\nSet-PvsServerStore\n\n\n\nSet-PvsSite\n\n\n\nSet-PvsSiteView\n\n\n\nSet-PvsStore\n\n\n\nSet-PvsUpdateTask\n\n\n\nSet-PvsVirtualHostingPool\n\n\n\nSet-PvsXDSite\n\n\n\nStart-PvsAutoUpdate\n\n\n\nStart-PvsCreateDisk\n\n\n\nStart-PvsDeviceBoot\n\n\n\nStart-PvsDeviceDiskTempVersionMode\n\n\n\nStart-PvsDeviceReboot\n\n\n\nStart-PvsDeviceShutdown\n\n\n\nStart-PvsDeviceUpdateBdm\n\n\n\nStart-PvsDisplayMessage\n\n\n\nStart-PvsReportBug\n\n\n\nStart-PvsStreamService\n\n\n\nStart-PvsUpdateTask\n\n\n\nStop-PvsCreateDisk\n\n\n\nStop-PvsDeviceDiskTempVersionMode\n\n\n\nStop-PvsStreamService\n\n\n\nStop-PvsTask\n\n\n\nStop-PvsUpdateTask\n\n\n\nTest-PvsDirectory\n\n\n\nUnlock-PvsAllDisk\n\n\n\nUnlock-PvsDisk\n\n\n\nUpdate-PvsInventory\n\n\n\nCmdlet by Object Type\n\n\nMany\n\n\nClear-PvsConnection\n\n\n\nGet-PvsAuditActionParameter\n\n\n\nGet-PvsAuditActionProperty\n\n\n\nGet-PvsAuditActionSibling\n\n\n\nGet-PvsAuditTrail\n\n\n\nGet-PvsConnection\n\n\n\nGet-PvsExists\n\n\n\nReset-PvsDatabase\n\n\n\nSet-PvsConnection\n\n\n\nAuthGroup\n\n\nGet-PvsAuthGroup\n\n\n\nGet-PvsAuthGroupUsage\n\n\n\nGrant-PvsAuthGroup\n\n\n\nNew-PvsAuthGroup\n\n\n\nRemove-PvsAuthGroup\n\n\n\nRevoke-PvsAuthGroup\n\n\n\nSet-PvsAuthGroup\n\n\n\nCeipData\n\n\nGet-PvsCeipData\n\n\n\nGet-PvsUploadCeip\n\n\n\nNew-PvsCeipData\n\n\n\nSet-PvsCeipData\n\n\n\nCisData\n\n\nGet-PvsCisData\n\n\n\nNew-PvsCisData\n\n\n\nSet-PvsCisData\n\n\n\nCollection\n\n\nGet-PvsCollection\n\n\n\nGet-PvsMinimumLastAutoAddDeviceNumber\n\n\n\nNew-PvsCollection\n\n\n\nRemove-PvsCollection\n\n\n\nSet-PvsCollection\n\n\n\nDevice\n\n\nAdd-PvsDeviceToDomain\n\n\n\nAdd-PvsDeviceToView\n\n\n\nCopy-PvsDeviceProperties\n\n\n\nDisable-PvsDeviceDiskLocator\n\n\n\nEnable-PvsDeviceDiskLocator\n\n\n\nExport-PvsOemLicenses\n\n\n\nGet-PvsDevice\n\n\n\nGet-PvsDeviceBootstrap\n\n\n\nGet-PvsDeviceCount\n\n\n\nGet-PvsDeviceDiskLocatorEnabled\n\n\n\nGet-PvsDeviceDiskTempVersion\n\n\n\nGet-PvsDeviceInfo\n\n\n\nGet-PvsDevicePersonality\n\n\n\nGet-PvsDeviceStatus\n\n\n\nImport-PvsDevices\n\n\n\nImport-PvsOemLicenses\n\n\n\nInvoke-PvsActivateDeviceMAK\n\n\n\nInvoke-PvsMarkDown\n\n\n\nMove-PvsDeviceToCollection\n\n\n\nNew-PvsDevice\n\n\n\nNew-PvsDeviceWithPersonalvDisk\n\n\n\nRemove-PvsDevice\n\n\n\nRemove-PvsDeviceDiskCacheFile\n\n\n\nRemove-PvsDeviceFromDomain\n\n\n\nRemove-PvsDeviceFromView\n\n\n\nReset-PvsDeviceForDomain\n\n\n\nSet-PvsDevice\n\n\n\nSet-PvsDeviceBootstrap\n\n\n\nSet-PvsDevicePersonality\n\n\n\nStart-PvsDeviceBoot\n\n\n\nStart-PvsDeviceDiskTempVersionMode\n\n\n\nStart-PvsDeviceReboot\n\n\n\nStart-PvsDeviceShutdown\n\n\n\nStart-PvsDeviceUpdateBdm\n\n\n\nStart-PvsDisplayMessage\n\n\n\nStop-PvsDeviceDiskTempVersionMode\n\n\n\nDisk\n\n\nAdd-PvsDiskToUpdateTask\n\n\n\nAdd-PvsDiskVersion\n\n\n\nCopy-PvsDiskProperties\n\n\n\nDismount-PvsDisk\n\n\n\nExport-PvsDisk\n\n\n\nGet-PvsCreateDiskStatus\n\n\n\nGet-PvsDisk\n\n\n\nGet-PvsDiskInfo\n\n\n\nGet-PvsDiskInventory\n\n\n\nGet-PvsDiskUpdateDevice\n\n\n\nGet-PvsDiskUpdateStatus\n\n\n\nGet-PvsDiskVersion\n\n\n\nGet-PvsMaintenanceVersionExists\n\n\n\nGet-PvsMountedDisk\n\n\n\nGet-PvsMountedDriveLetter\n\n\n\nGet-PvsNewDiskVersion\n\n\n\nGet-PvsUndefinedDisk\n\n\n\nGet-PvsVirtualHostingPool\n\n\n\nImport-PvsDisk\n\n\n\nInvoke-PvsPromoteDiskVersion\n\n\n\nInvoke-PvsRevertDiskVersion\n\n\n\nMerge-PvsDisk\n\n\n\nMount-PvsDisk\n\n\n\nNew-PvsDiskMaintenanceVersion\n\n\n\nNew-PvsDiskUpdateDevice\n\n\n\nNew-PvsVirtualHostingPool\n\n\n\nRemove-PvsDiskFromUpdateTask\n\n\n\nRemove-PvsDiskUpdateDevice\n\n\n\nRemove-PvsDiskVersion\n\n\n\nRemove-PvsVirtualHostingPool\n\n\n\nSet-PvsDisk\n\n\n\nSet-PvsDiskUpdateDevice\n\n\n\nSet-PvsDiskVersion\n\n\n\nSet-PvsOverrideVersion\n\n\n\nSet-PvsVirtualHostingPool\n\n\n\nStart-PvsCreateDisk\n\n\n\nStop-PvsCreateDisk\n\n\n\nUnlock-PvsAllDisk\n\n\n\nUnlock-PvsDisk\n\n\n\nUpdate-PvsInventory\n\n\n\nDiskLocator\n\n\nAdd-PvsDiskLocatorToDevice\n\n\n\nGet-PvsDiskLocator\n\n\n\nGet-PvsDiskLocatorCount\n\n\n\nGet-PvsDiskLocatorLock\n\n\n\nNew-PvsDiskLocator\n\n\n\nRemove-PvsDiskLocator\n\n\n\nRemove-PvsDiskLocatorFromDevice\n\n\n\nSet-PvsDiskLocator\n\n\n\nFarm\n\n\nExport-PvsAuditTrail\n\n\n\nGet-PvsFarm\n\n\n\nGet-PvsXDSite\n\n\n\nSet-PvsFarm\n\n\n\nSet-PvsXDSite\n\n\n\nFarmView\n\n\nGet-PvsFarmView\n\n\n\nNew-PvsFarmView\n\n\n\nRemove-PvsFarmView\n\n\n\nSet-PvsFarmView\n\n\n\nServer\n\n\nCopy-PvsServerProperties\n\n\n\nGet-PvsDirectory\n\n\n\nGet-PvsServer\n\n\n\nGet-PvsServerBiosBootstrap\n\n\n\nGet-PvsServerBootstrap\n\n\n\nGet-PvsServerBootstrapName\n\n\n\nGet-PvsServerCount\n\n\n\nGet-PvsServerInfo\n\n\n\nGet-PvsServerName\n\n\n\nGet-PvsServerStatus\n\n\n\nGet-PvsServerStore\n\n\n\nGet-PvsServerStoreActiveDeviceCount\n\n\n\nInvoke-PvsRebalanceDevices\n\n\n\nMove-PvsServerToSite\n\n\n\nNew-PvsDirectory\n\n\n\nNew-PvsServer\n\n\n\nRemove-PvsDirectory\n\n\n\nRemove-PvsServer\n\n\n\nRemove-PvsServerStore\n\n\n\nRestart-PvsStreamService\n\n\n\nSet-PvsServer\n\n\n\nSet-PvsServerBiosBootstrap\n\n\n\nSet-PvsServerBootstrap\n\n\n\nSet-PvsServerStore\n\n\n\nStart-PvsAutoUpdate\n\n\n\nStart-PvsReportBug\n\n\n\nStart-PvsStreamService\n\n\n\nStop-PvsStreamService\n\n\n\nTest-PvsDirectory\n\n\n\nSite\n\n\nGet-PvsSite\n\n\n\nGet-PvsStoreSharedOrServerPath\n\n\n\nNew-PvsSite\n\n\n\nRemove-PvsSite\n\n\n\nSet-PvsSite\n\n\n\nSiteView\n\n\nGet-PvsSiteView\n\n\n\nNew-PvsSiteView\n\n\n\nRemove-PvsSiteView\n\n\n\nSet-PvsSiteView\n\n\n\nStore\n\n\nGet-PvsStore\n\n\n\nGet-PvsStoreFreeSpace\n\n\n\nNew-PvsStore\n\n\n\nRemove-PvsStore\n\n\n\nSet-PvsStore\n\n\n\nSystem\n\n\nGet-PvsADAccount\n\n\n\nGet-PvsGroup\n\n\n\nGet-PvsLocalServer\n\n\n\nGet-PvsVersion\n\n\n\nTask\n\n\nClear-PvsTask\n\n\n\nGet-PvsTask\n\n\n\nGet-PvsTaskStatus\n\n\n\nStop-PvsTask\n\n\n\nUpdateTask\n\n\nGet-PvsUpdateTask\n\n\n\nNew-PvsUpdateTask\n\n\n\nRemove-PvsUpdateTask\n\n\n\nSet-PvsUpdateTask\n\n\n\nStart-PvsUpdateTask\n\n\n\nStop-PvsUpdateTask\n\n\n\nError codes\n\n\nFor the Citrix.PVS.SnapIn, if an error occurs, aPvsException will be in the Exception member of the $error.\n\n\n\nThe members of a PvsException are:\n\n\n\nInnerException: The exception that occured. Thisexception maybe an EAException or other standard Exception.\n\n\n\nToString(): Has the formatted full Message of theInnerException.\n\n\n\nIf the InnerException GetType().Name equals\"EAException\", then The members of it are:\n\n\n\nreturnCode: The number, as shown below in the Errorcodes. The name of the error, for example \"NotImplemented\", is notincluded in the EAException.\n\n\n\nMessage: The message, as shown below in the Errorcodes. The [v1], [v2], [v3], [v4], and [v5] will be replaced with values asrequired.\n\n\n\nDetails: Has the Details for the EAException ifthere are any. OtherException, ManagementInterfaceError and PvsStatusExceptionwill have Details.\n\n\n\nToString(): Has the Message as shown below in theError codes. If there is Details, it will be returned or included, and ifpartialReturn, they will be included.\n\n\n\npartialReturn: Might have a list of EAExceptionobjects if any of the items processed during the command had any issues.\n\n\n\nSeverity: Can have the values Critical, Error, Warningor Duplicate.\n\n\n\nSource: Has the value that is displayed in theConsole as a Title or Type for the error.\n\n\n\n\n\n\n0 Success: The command succeeded.\n\n\n\n1 NotImplemented: The [v1] feature has not beenimplemented.\n\n\n\n2 InvalidCommand: The [v1] command does not exist.\n\n\n\n3 InvalidField: The [v1] field does not exist.\n\n\n\n4 InvalidFieldFormat: The [v1] field is notformatted properly, the correct format is [v2].\n\n\n\n5 InvalidParameter: The [v1] parameter is not valid.\n\n\n\n6 InvalidParameterFormat: The [v1] parameter is notformatted property, the correct format is [v2].\n\n\n\n7 ReadOnlyField: Unable to change the [v1] fieldbecause it is read-only.\n\n\n\n8 RequiredFieldMissing: The required [v1] field ismissing.\n\n\n\n9 RequiredFieldsMissing: The required [v1] or [v2]field is missing.\n\n\n\n10 RequiredParameterMissing: The required [v1]parameter is missing.\n\n\n\n11 RequiredParametersMissing: The required [v1] or[v2] parameter is missing.\n\n\n\n12 InternalIdAndNameFieldsMustBeDefined: An internalerror occurred. The [v1] field is not the next FieldSettings object after theID.\n\n\n\n13 NoFarmAccess: The domain/user does not haveaccess to the Farm.\n\n\n\n14 InvalidForeignKeyValue: The [v1] field with value[v2] is an invalid foreign key.\n\n\n\n15 SetupError: The system was not configuredcorrectly.\n\n\n\n16 Executing: The [v1] command can only be calledone at a time. Wait for the command to finish before running again.\n\n\n\n17 NoDiskMapped: A vDisk has not yet been mapped.\n\n\n\n18 DatabaseError: A database error occurred.\n\n\n\n19 DuplicateKey: To avoid creating a duplicate key,the Add or Set command was cancelled.\n\n\n\n20 DatabaseErrorMissed: An internal error occurred.An uncaught database error occurred.\n\n\n\n21 AddCommandFailed: No objects were added duringthe last 'Add' command.\n\n\n\n22 InsufficientPrivileges: Access denied. Theappropriate privileges are not assigned to perform this task.\n\n\n\n23 ZeroObjectsAffected: No object was added,updated, or deleted in the last operation.\n\n\n\n24 OtherException: An unexpected MAPI erroroccurred.\n\n\n\n25 InvalidFieldLength: The [v1] field value is toolong, maximum length is [v2].\n\n\n\n26 InvalidFieldValueMinMax: The [v1] field value isinvalid, the minimum is [v2] and the maximum is [v3].\n\n\n\n27 InvalidFieldValue: The [v1] field can only havevalues [v2] or [v3].\n\n\n\n28 TooManyParameters: More parameters were specifiedthan permitted.\n\n\n\n29 TooFewParameters: Not enough identifyingparameters specified.\n\n\n\n30 FollowingParametersMissing: To use the [v1]parameter, [v2] or [v3] must also be used.\n\n\n\n31 InconsistentData: The action is canceled becausethe Store directory date/times does not match. Update the Store directories tomatch.\n\n\n\n32 DatabaseOpenFailed: Unable to contact thedatabase server. Ensure Provisioning Services is configured correctly.\n\n\n\n33 DatabaseVersionWrong: The wrong database versionis being used.  Found version number: [v1] Expected version number:[v2]\n\n\n\n34 DatabaseVersionNotFound: The database versionnumber does not exist or was not found. Ensure Provisioning Services isconfigured correctly.\n\n\n\n35 SomeRequiredParametersMissing: Requiredparameters are missing.\n\n\n\n36 PartialError: The following items failed:\n\n\n\nitem1 Error message...\n\n\n\nitem2 Error message...\n\n\n\n37 NoItemsToProcess: There are no items to process.\n\n\n\n38 NoDefaultCollectionDefined: Unable to add aDevice until a default Collection is set.\n\n\n\n39 NoDefaultSiteDefined: A default Site is not set,no Devices can be added.\n\n\n\n40 InvalidCollection: The specified Collection doesnot exist.\n\n\n\n41 InvalidAuthGroup: The specified AuthGroup doesnot exist.\n\n\n\n42 InvalidGroup: The specified Group does not exist.\n\n\n\n43 InvalidDevice: The specified Device does notexist.\n\n\n\n44 InvalidDiskLocator: The specified vDisk does notexist.\n\n\n\n45 InvalidServer: The specified Server does notexist.\n\n\n\n46 InvalidServerSite: Server specified is not in theSite specified.\n\n\n\n47 InvalidStoreSite: Store specified is not for theSite specified.\n\n\n\n48 InvalidSiteView: The specified Site View does notexist.\n\n\n\n49 InvalidSite: The specified Site does not exist.\n\n\n\n50 InvalidDeviceDiskLocator: The specified Device orvDisk does not exist.\n\n\n\n51 InvalidDeviceImport: Import failed because thefile must have Device Name, Mac Address, Site Name, and Collection Name, andthey must be tab or comma-delimited.\n\n\n\n52 InvalidServerFrom: The Server to copy [v1]=[v2]was not found.\n\n\n\n53 InvalidServerTo: No Server to copy to ([v1]=[v2])was found.\n\n\n\n54 InvalidDeviceFrom: The Device to copy [v1]=[v2]was not found.\n\n\n\n55 InvalidDeviceTo: No Devices to copy to are found.\n\n\n\n56 InvalidDiskFrom: The vDisk to copy [v1]=[v2] wasnot found.\n\n\n\n57 InvalidDiskTo: No vDisk to copy to ([v1]=[v2])was found.\n\n\n\n58 InvalidDiskPath: The path '[v1]' to the vDiskfile is not found.\n\n\n\n59 VDiskFileNotFound: [v1]: vDisk file was notfound.\n\n\n\n60 InvalidDiskServer: There is no Server that canserve the vDisk [v1] or the Store to which this vDisk belongs. Verify that oneor more Servers belonging to the Store are online and that there is sufficientfree space for the operation you are attempting.\n\n\n\n61 InvalidDiskForServer: Server [v1] cannot accessall versions of vDisk [v2], the vDisk was updated on at least one other Server.\n\n\n\n62 SameSiteRequired: Objects within the same Sitemust be selected.\n\n\n\n63 TooFewFields: Not enough fields for a record.\n\n\n\n64 ADerrorDC: Unable to connect to the DomainController (if any) or the default rootDSE. Error code: [v1], message: [v2],provider: [v3].\n\n\n\n65 ADerrorOU: Unable to get the Organizational Unitsetting (if any). Error code: [v1], message: [v2], provider: [v3].\n\n\n\n66 ADerrorDefaultContainer: Unable to get thedefault computer accounts container (default location is Active Directoryroot> Computers). Error code: [v1], message: [v2], provider: [v3].\n\n\n\n67 ADerrorCreate: Unable to create the computeraccount in Active Directory. Ensure the account does not already exist and thatthe appropriate permissions are available to perform this task. Error code:[v1], message: [v2], provider: [v3].\n\n\n\n68 ADerrorNewAccount: Unable to get the newlycreated Active Directory computer account. Error code: [v1], message: [v2],provider: [v3].\n\n\n\n69 ADerrorSam: Unable to set the Active DirectorysamAccountName property. Ensure the appropriate permissions exist to performthis task. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n70 ADerrorUserAccount: Unable to set the ActiveDirectory userAccountControl property. Ensure the appropriate permissions existto perform this task. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n71 ADerrorSave: Unable to save Active Directorychange. Ensure the appropriate permissions exist to perform this task. Errorcode: [v1], message: [v2], provider: [v3].\n\n\n\n72 ADerrorSetPassword: Unable to set a new passwordfor this user account. Ensure the appropriate permissions exist to perform thistask. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n73 ADerrorAddTrustee: Unable to add trustee (ifany). Error code: [v1], message: [v2], provider: [v3].\n\n\n\n74 ADerrorEnableAccount: Unable to enable the ActiveDirectory account. Error code: [v1], message: [v3], provider: [v2].\n\n\n\n75 ADerrorAlreadyExists: The computer name isalready in use. Error code: [v1], message: [v3], provider: [v2]. Select aunique name for this machine.\n\n\n\n76 ADerrorGeneral: A general Active Directory erroroccurred. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n77 ADerrorDirectorySearch: Unable to find ActiveDirectory items meeting the search criteria entered. Error code: [v1], message:[v2], provider: [v3].\n\n\n\n78 ADerrorSearchComputerAccount: Unable to performthe computer accounts search. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n79 ADerrorComputerAccountNotFound: Specifiedcomputer account not found. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n80 ADerrorComputerAccountHold: This computer accountis currently unavailable. Ensure that Active Directory is running properly.Error code: [v1], message: [v2], provider: [v3].\n\n\n\n81 ADerrorComputerAccountMove: Failed to move thecomputer account to the target organizational unit set (also returned if callerlacks permission). Error code: [v1], message: [v2], provider: [v3].\n\n\n\n82 ADerrorDelete: Unable to delete this computeraccount. Ensure the appropriate permissions exist to perform this task. Errorcode: [v1], message: [v2], provider: [v3].\n\n\n\n83 ADerrorPasswordGeneration: Unable to generatethis password. Ensure the appropriate permissions exist to perform this task.\n\n\n\n84 MapDiskNoDriver: Unable to map vDisk because adriver was not found.\n\n\n\n85 MapDiskDeniedByServer: Unable to map the vDisk.Mapping was denied by the Server.\n\n\n\n86 MapDiskLocalAccessDenied: Unable to map thevDisk. Denied local access.\n\n\n\n87 MapDiskMiniportError: Unable to map vDisk becauseof a Miniport error.\n\n\n\n88 UnmapDiskFailed: Failed to unmap a vDisk.\n\n\n\n89 DuplicateDisk: The vDisk [v1] already exists on[v2] at [v3].\n\n\n\n90 DuplicateDiskLocator: A DiskLocator: [v1] alreadyexists on Site: [v2].\n\n\n\n91 DiskCreationInProgress: The vDisk [v1] is beingcreated on [v2] at [v3].\n\n\n\n92 InvalidServerStore: A database integrity erroroccurred. The Server is not set to deliver vDisks from the Store, but shouldbe.\n\n\n\n93 InvalidStore: The specified Store does not exist.\n\n\n\n94 InvalidFarmView: Farm View specified does notexist.\n\n\n\n95 InvalidStorePath: Store path is empty.\n\n\n\n96 ManagementInterfaceError:\n\n\n\nManagement Interface: Undefined error.\n\n\n\nManagement Interface: Database interface isinaccessible.\n\n\n\nManagement Interface: Database interface library isinaccessible.\n\n\n\nManagement Interface: The database access library isa version incompatible with the Management Server.\n\n\n\nManagement Interface: Database interface library isinvalid.\n\n\n\nManagement Interface: Database interface could notbe created.\n\n\n\nManagement Interface: Database could not be opened.\n\n\n\nManagement Interface: Database is in use.\n\n\n\nManagement Interface: Database error occurred.\n\n\n\nManagement Interface: Not implemented.\n\n\n\nManagement Interface: Registry entry was not found.\n\n\n\nManagement Interface: Request was not created.\n\n\n\nManagement Interface: Operating System erroroccurred.\n\n\n\nManagement Interface: vDisk error.\n\n\n\nManagement Interface: vDisk header is incomplete.\n\n\n\nManagement Interface: vDisk footer is incomplete.\n\n\n\nManagement Interface: vDisk boot record isincomplete.\n\n\n\nManagement Interface: vDisk boot sector isincomplete.\n\n\n\nManagement Interface: vDisk size is below theminimum.\n\n\n\nManagement Interface: vDisk size is above themaximum.\n\n\n\nManagement Interface: vDisk boot record template isinaccessible.\n\n\n\nManagement Interface: vDisk boot sector template isinaccessible.\n\n\n\nManagement Interface: vDisk lock was not found.\n\n\n\nManagement Interface: vDisk has exclusive lock.\n\n\n\nManagement Interface: vDisk has shared lock.\n\n\n\nManagement Interface: vDisk lock error.\n\n\n\nManagement Interface: vDisk format is incompatible.\n\n\n\nManagement Interface: vDisk prefooter is incomplete.\n\n\n\nManagement Interface: vDisk creation is in progress.\n\n\n\nManagement Interface: vDisk creation information wasnot found.\n\n\n\nManagement Interface: vDisk creation cancellationwas requested.\n\n\n\nManagement Interface: vDisk file was not found.\n\n\n\nManagement Interface: vDisk file path was not found.\n\n\n\nManagement Interface: vDisk file access was denied.\n\n\n\nManagement Interface: Cancelled.\n\n\n\nManagement Interface: Registry key for the productis inaccessible.\n\n\n\nManagement Interface: Registry key for theinstallation folder is inaccessible.\n\n\n\nManagement Interface: Registry key for the managementinterface is inaccessible.\n\n\n\nManagement Interface: Registry key for the databasepath is inaccessible.\n\n\n\nManagement Interface: Registry key for themanagement interface IP address is inaccessible.\n\n\n\nManagement Interface: Buffer size is too small.\n\n\n\nManagement Interface: Buffer size is too large.\n\n\n\nManagement Interface: Unknown error.\n\n\n\nManagement Interface: Remote Server failed to relaya request.\n\n\n\nManagement Interface: Remote Server is not servicingthe Device.\n\n\n\nManagement Interface: Remote Server or Devicerefused the request.\n\n\n\nManagement Interface: Local Server failed tocomplete a request to a Server or Device.\n\n\n\nManagement Interface: Local Server failed tocomplete a request to a Server.\n\n\n\nManagement Interface: Remote requests were disabledbecause of an initialization error.\n\n\n\nManagement Interface: Remote request failed.\n\n\n\nManagement Interface: Remote request timed out.\n\n\n\nManagement Interface: Remote request result was notfound.\n\n\n\nManagement Interface: Remote request receiver failedto initialize.\n\n\n\nManagement Interface: Management command failed forall objects.\n\n\n\nManagement Interface: Failed to get the presharedkey in secure version.\n\n\n\nManagement Interface: VHD Error.\n\n\n\nManagement Interface: vDisk properties were lost.\n\n\n\nManagement Interface: Insufficient Memory.\n\n\n\nManagement Interface: The network path was notfound.\n\n\n\nManagement Interface: The network name cannot befound.\n\n\n\nManagement Interface: File already exists.\n\n\n\nManagement Interface: The geometry of the vDisk isnot accessible.\n\n\n\nManagement Interface: Unable to create the vDiskbecause the store media is read-only.\n\n\n\nManagement Interface: vDisk file is being used byanother process.\n\n\n\n97 ServerTimeout: Server did not respond to arequest in time.\n\n\n\n98 NotFound: [v1] not found.\n\n\n\n99 AccountRetrieve: Account information for user[v1] was not found.\n\n\n\n100 ActiveDevice: The task cannot be performed onactive Devices. Shut down the Devices before attempting to perform the task.\n\n\n\n101 ActiveDiskLocator: The task cannot be performedon active vDisks. Shut down the Devices that are using the vDisks beforeattempting to perform the task.\n\n\n\n102 AssignedDiskLocator: Unable to delete a vDiskthat is currently assigned to a Device. Unassign all Devices, then delete thevDisk.\n\n\n\n103 ActiveServer: The task cannot be performed onactive Servers. Shut down the Servers before attempting to perform the task.\n\n\n\n104 NotEnoughFreeDiskSpace: There is not enough freedisk space to create the vDisk.\n\n\n\n105 InvalidDiskName: The vDisk name has one or moreinvalid characters. The invalid characters are \n<\n > | \" \\ / : * ?.\n\n\n\n106 CannotDeleteLastAuthGroup: Deleting the lastAuthorization Group causes the system to be inoperable.\n\n\n\n107 CannotDeleteUsedAuthGroup: An AuthorizationGroup that is currently in use cannot be deleted.\n\n\n\n108 ServerStartFailed: The Server did not startsuccessfully. Ensure the appropriate permissions exist for the service account.\n\n\n\n109 ServerStopFailed: The Server did not stopsuccessfully.\n\n\n\n110 LockOwnerNotFound: The Device that owns the lockwas not found, the vDisk was not unlocked.\n\n\n\n111 PossiblySharedVDisk: Unable to delete File [v1].It is possible that the file is being referenced in other Sites or Stores.\n\n\n\n112 StorePathInaccessible: The Store path [v1] isinaccessible.\n\n\n\n113 InvalidAction: The [v1] action does not exist.\n\n\n\n114 InvalidObjectType: The [v1] objectType does notexist.\n\n\n\n115 TooManyRecords: The amount of data returnedusing Get is too large. Use GetFirst and GetNext instead of Get.\n\n\n\n116 InvalidUserGroup: The specified UserGroup doesnot exist.\n\n\n\n117 InvalidAuditAction: The specified AuditActiondoes not exist.\n\n\n\n118 LoginFailed: The database login failed. Ensurethe appropriate permissions exist to access the database.\n\n\n\n119 DatabaseConnectionError: Unable to connect tothe database. Restore the connection in order to manage the farm.\n\n\n\n120 CreateTriggersParsing: Unable to parse thedatabase script 'CreateTriggers' at: [v1]\n\n\n\n121 CreateStoredProcParsing: Unable to parse thedatabase script 'CreateStoredProcedures' at: [v1]\n\n\n\n122 MediaIsReadOnly: Management Interface: Unable tocreate the vDisk because the store media is read-only.\n\n\n\n123 ConnectedDeviceForVirtualHostingPool: Unable todelete this VM from a machine catalog because it is connected to a DeliveryGroup.\n\n\n\n124 ADerrorDN: Unable to get the distinguishedNameproperty. Ensure the appropriate Active Directory permissions exist to performthis task. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n125 ADerrorGetSecDes: Unable to get the ActiveDirectory Security Descriptor property. Error code: [v1], message: [v2],provider: [v3].\n\n\n\n126 ADerrorSetSecDes: Unable to set the ActiveDirectory Security Descriptor property. Ensure the appropriate permissionsexist to perform this task. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n127 ADerrorDNSHostName: Unable to set the DNS HostName property (dNSHostName). Ensure the appropriate permissions exist toperform this task. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n128 ADerrorDisplayName: Unable to set thedisplayName property. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n129 ADerrorBind: This device was unable to bind tothe Domain Controller. Ensure the Domain Controller is running. Error code:[v1], message: [v2], provider: [v3].\n\n\n\n130 ADerrorGetSPN: Unable to get an Active DirectoryService Principal Name. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n131 ADerrorWriteSPN: Unable to write the ActiveDirectory Service Principal Name. Error code: [v1], message: [v2], provider:[v3]\n\n\n\n132 ADerrorSearch: Unable to perform the requestedSearch. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n133 ADerrorMoveToOU: Unable to move the ActiveDirectory account to the requested Organizational Unit. Ensure the appropriatepermissions exist to perform this task. Error code: [v1], message: [v2],provider: [v3].\n\n\n\n134 ADerrorDeleteAccount: Unable to delete thiscomputer account. Ensure the appropriate permissions exist to deleteaccounts.  Error code: [v1], message: [v2], provider: [v3].\n\n\n\n135 ADerrorBadParameters: Incorrect parameters sentto Provisioning Services from  Studio. Error code: [v1], message:[v2], provider: [v3].\n\n\n\n136 VolumeInUse: The volume is being used.\n\n\n\n137 VolumeAccessDenied: Volume access is denied.\n\n\n\n138 VolumeUnknownVolume: An unknown volume wasspecified.\n\n\n\n139 VolumeGeneralError: An error occured whenexecuting a volume command.\n\n\n\n140 MaintenanceServerError: Action cannot beperformed, [v1] is a maintenance server for [v2].\n\n\n\n141 NotManagedStore: The action cannot be performedbecause the store is not managed.\n\n\n\n142 PathNotExist: The path does not exist on thegiven Server.\n\n\n\n143 PathNoCreatePermission: The path does not havethe appropriate create permissions.\n\n\n\n144 PathNoReadPermission: The path does not have theappropriate read permissions.\n\n\n\n145 PathNoWritePermission: The path does not havethe appropriate write permissions.\n\n\n\n146 PathNoDeletePermission: The path does not havethe appropriate delete permissions.\n\n\n\n147 IPCProtocolError: An internal error occurred. Afield is missing from the process communication protocol data.\n\n\n\n148 InvalidStoreServer: No active Server can servethe Store [v1].\n\n\n\n149 ConstraintCheck: A database constraint caused anAdd or Update to be stopped.\n\n\n\n150 VamtNotFound: The Volume Activation ManagementTool cannot be found.\n\n\n\n151 ADerrorCannotGetObjectSID: Cannot returnobjectSID. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n152 ADerrorCannotDisableAccount: Cannot disable theActive Directory account at this time. Ensure that all account users are loggedoff before attempting to disable the account. Error code: [v1], message: [v2],provider: [v3].\n\n\n\n153 ADerrorFailedToChangePassword: Unable to resetthe machine account password. Ensure the appropriate permissions exist toperform this Active Directory task. Error code: [v1], message: [v2], provider:[v3].\n\n\n\n154 ADerrorFailedToCopyDCName: Unable to copy theDomain Controller name. Error code: [v1], message: [v2], provider: [v3].\n\n\n\n155 ADerrorDCNameIsTooLong: The Domain Controllername entered exceeds the maximum character length of [v4]. Error code: [v1],message: [v2], provider: [v3].\n\n\n\n156 SiteMakUserPassword: The Site's makUser andmakPassword fields must have values.\n\n\n\n157 VamtError: See the log for additional errordetails.\n\n\n\n158 InactiveDevice: Device specified is not active.\n\n\n\n159 DiskIsInPrivateMode: This task cannot beperformed because the vDisk is in private image mode.\n\n\n\n160 AlreadyInChangeMode: Unable to complete this operation,vDisk is already in Maintenance, Merge, or Test mode.\n\n\n\n161 CannotCreateMaintenanceDisk: Cannot createmaintenance vDisk.\n\n\n\n162 CannotEnterMaintenanceMode: To place a vDisk inMaintenance Mode requires using a Server. No Server is available at this time.\n\n\n\n163 NotInMaintenanceMode: Unable to perform thisaction because the vDisk is not in Maintenance Mode.\n\n\n\n164 NoVersionForMaintenanceMode: Unable to placethis vDisk in Maintenance Mode because the highest version is not found.\n\n\n\n165 NoVersionFound: Unable to perform this actionbecause a version record was not found in the database.\n\n\n\n166 Obsolete: The [v1] feature is obsolete.\n\n\n\n167 DatabaseWarning: A database warning occurred.\n\n\n\n168 DatabaseSQL: A database SQL error occurred.\n\n\n\n169 DatabaseResource: A database resource erroroccurred.\n\n\n\n170 InvalidUpdateTask: The specified UpdateTask doesnot exist.\n\n\n\n171 InvalidVirtualHostingPool: The specifiedVirtualHostingPool does not exist.\n\n\n\n172 RemoteCommand: An exception occurred executing acommand on a remote Server.\n\n\n\n173 IpcNotConfigured: An internal error occurred.The process communication interface must be configured before executing remotecommands.\n\n\n\n174 DiskAlreadSetForUpdate: The vDisk is already setfor Update with Device [v1] in Site [v2].\n\n\n\n175 InvalidDiskVersion: The vDisk Version specifiedis not valid.\n\n\n\n176 HostResolution: Could not resolve the host namefor [v1].\n\n\n\n177 InProcess: The remote task is taking longer thanexpected. TaskId: [v1]\n\n\n\n178 DateMustBeInFuture: The [v1] must be in thefuture.\n\n\n\n179 InvalidRemoteReturn: The remote command did notreturn valid data.\n\n\n\n180 InvalidParameterValueMinMax: The [v1] parametervalue is invalid, the minimum is [v2] and the maximum is [v3].\n\n\n\n181 InvalidParameterNotNumeric: The [v1] parametervalue is invalid, it is not numeric.\n\n\n\n182 InvalidParameterNotGuid: The [v1] parametervalue is invalid, it is not a GUID.\n\n\n\n183 PassThroughMessage: [v1]\n\n\n\n184 DiskUpdateNotEnabled: The Automatic vDisk Updateoption must be enabled and the vDisk Update Server must be defined. Set thesein the Site properties.\n\n\n\n185 PvsStatusException:\n\n\n\nWindows API error occurred, number 0xE000FFFF.\n\n\n\nSQL error occurred, number 0xE001FFFF.\n\n\n\nManager error occurred. Error number 0xE002FFFF.\n\n\n\nStreamProcess error occurred. Error number0xE003FFFF.\n\n\n\nStream Database error occurred. Error number0xE004FFFF.\n\n\n\nManagement error occurred. Error number 0xE005FFFF.\n\n\n\nShutdown in progress; request ignored. Error number0xE0050001.\n\n\n\nCreateDiffDisk: Malformed packet; missing one ormore arguments. Error number 0xE0050002.\n\n\n\nDeleteDiffDisk: Malformed file name; cannot parsedirectory and name. Error number 0xE0050003.\n\n\n\nDeleteDiffDisk: Malformed packet; missing one ormore arguments. Error number 0xE0050004.\n\n\n\nIPC: Failed to read mtGetLocks parameters. Errornumber 0xE0050005.\n\n\n\nIPC: Failed to read mtGetLockStatus parameters.Error number 0xE0050006.\n\n\n\nIPC: Failed to read mtLock parameters. Error number0xE0050007.\n\n\n\nIPC: Failed to read mtUnlock parameters. Errornumber 0xE0050008.\n\n\n\nMergeDisk event: Malformed packet; unknown messagetype. Error number 0xE0050009.\n\n\n\nMergeDisk event: Unknown target request ID. Errornumber 0xE005000A.\n\n\n\nMergeDisk event: Malformed packet; missing one ormore arguments. Error number 0xE005000B.\n\n\n\nMergeDisk: Malformed packet; missing one or morearguments. Error number 0xE005000C.\n\n\n\nValidateDisk: Malformed packet; missing one or morearguments. Error number 0xE005000D.\n\n\n\nVHD Library error occurred. Error number 0xE006FFFF.\n\n\n\nVHD Library: Not implemented. Error number0xE0060001.\n\n\n\nVHD Library: Handle pointer is invalid. Error number0xE0060002.\n\n\n\nVHD Library: Length of the path exceeds the limit ofthe file system. Error number 0xE0060003.\n\n\n\nVHD Library: Name is empty. Error number 0xE0060004.\n\n\n\nVHD Library: Length of the name exceeds the limit ofthe file system. Error number 0xE0060005.\n\n\n\nVHD Library: Size of a parameter was too big. Errornumber 0xE0060006.\n\n\n\nVHD Library: Size of a parameter was too small.Error number 0xE0060007.\n\n\n\nVHD Library: The media is write protected. Errornumber 0xE0060008.\n\n\n\nVHD Library: Type is invalid. Error number0xE0060009.\n\n\n\nVHD Library: Footer is incomplete. Error number0xE006000A.\n\n\n\nVHD Library: Failed to read or write the entire VHDHeader. Error number 0xE006000B.\n\n\n\nVHD Library: Failed to read or write the entire VHDBlock Allocation Table. Error number 0xE006000C.\n\n\n\nVHD Library: Failed to read or write all of the VHDproperties. Error number 0xE006000D.\n\n\n\nVHD Library: VHD footer is corrupt. Error number0xE006000E.\n\n\n\nVHD Library: VHD header is corrupt. Error number0xE006000F.\n\n\n\nVHD Library: Failed to read or write the VHDobjects. Error number 0xE0060010.\n\n\n\nVHD Library: Destination string is too small. Errornumber 0xE0060011.\n\n\n\nVHD Library: Destination string pointer is NULL.Error number 0xE0060012.\n\n\n\nVHD Library: Source string pointer is NULL. Errornumber 0xE0060013.\n\n\n\nVHD Library: Offset is before the beginning of theVHD data area. Error number 0xE0060014.\n\n\n\nVHD Library: Offset is after the end of the VHD dataarea. Error number 0xE0060015.\n\n\n\nVHD Library: Failed to allocate memory because itwas unavailable. Error number 0xE0060016.\n\n\n\nVHD Library: Caller cancelled the last createrequest. Error number 0xE0060017.\n\n\n\nVHD Library: Failed to read or write all of the dataas requested. Error number 0xE0060018.\n\n\n\nVHD Library: Failed to create a Universal UniqueIdentification for a VHD. Error number 0xE0060019.\n\n\n\nVHD Library: Failed to find the VHD properties.Error number 0xE006001A.\n\n\n\nVHD Library: Failed to read or write the entiresector bitmap within a block. Error number 0xE006001B.\n\n\n\nVHD Library: Failed to read or write the entireblock. Error number 0xE006001C.\n\n\n\nVHD Library: Failed to open the file that representsthe VHD. Error number 0xE006001D.\n\n\n\nVHD Library: Requested number of bytes exceeds theremainder of bytes in a block. Error number 0xE006001E.\n\n\n\nVHD Library: Accessed past end of the VHD file. Errornumber 0xE006001F.\n\n\n\nVHD Library: Differencing VHD Unique ID (UUID)differs to parent VHD Unique ID. Error number 0xE0060020.\n\n\n\nVHD Library: Differencing VHD timestamp differs toparent VHD last modified time. Error number 0xE0060021.\n\n\n\nVHD Library: Failed to read or write the entire VHDBlock Allocation Table Map. Error number 0xE0060022.\n\n\n\nIPC error occurred. Error number 0xE007FFFF.\n\n\n\nThere was an unknown transmission error. Errornumber 0xE0070001.\n\n\n\nNo response received for successful send. Errornumber 0xA0070002.\n\n\n\nMessage processor timed out. Error number0xE0070003.\n\n\n\nRetry limit exhausted. Error number 0xE0070004.\n\n\n\nMessage recipient task is not active. Error number0xE0070005.\n\n\n\nSocket send/recv cannot be retried. Error number0xE0070006.\n\n\n\nPort shutdown due to connection opens exhausted.Error number 0xE0070007.\n\n\n\nPort shutdown due to flood of junk packets. Errornumber 0xE0070008.\n\n\n\nPort shutdown due to receive retries exhausted.Error number 0xE0070009.\n\n\n\nTransport does not support fragmentation. Errornumber 0xE007000A.\n\n\n\nOne or more packet fragments are missing. Errornumber 0xE007000B.\n\n\n\nError sending message. Error number 0xE0070100.\n\n\n\nMessage acknowledgement timeout. Error number0xA0070101.\n\n\n\nCommand timeout. Error number 0xE0070102.\n\n\n\nNot implemented. Error number 0xE0070103.\n\n\n\nError verifying message port number, must be >= 0and \n<\n= 65535. Error number 0xE0070104.\n\n\n\nCommand initialization failed. Error number0xE0070105.\n\n\n\nStart of IPC failed. Error number 0xE0070106.\n\n\n\nStop of IPC failed. Error number 0xE0070107.\n\n\n\nMemory allocation failure. Error number 0xE0070108.\n\n\n\nInternal error, failure to wait long enough for acommunication response to be received. Error number 0xE0070109.\n\n\n\nDisk Update error occurred. Error number 0xE008FFFF.\n\n\n\nInventory error occurred. Error number 0xE009FFFF.\n\n\n\nInventory Table: Failed to start thread. Errornumber 0xE0090001.\n\n\n\nInventory Table: Invalid Entry. Error number0xE0090002.\n\n\n\nInventory Table: Failed to initialize inventory.Error number 0xE0090003.\n\n\n\nShutdown in progress; request ignored. Error number0xE0090004.\n\n\n\nGet Disk Inventory: Parameters bad. Error number0xE0090033.\n\n\n\nPopulate database: Failed offline. Error number0xE0090065.\n\n\n\nPopulate database: Server get by name failed. Errornumber 0xE0090066.\n\n\n\nPopulate database: Uninitialized. Error number 0xE0090067.\n\n\n\nPopulate database: Get host name failed. Errornumber 0xE0090068.\n\n\n\nPopulate database: Char conversion failed. Errornumber 0xE0090069.\n\n\n\nPopulate database: Initialization failed. Errornumber 0xE009006A.\n\n\n\nPopulate database: Database open failed. Errornumber 0xE009006B.\n\n\n\nPopulate database: Get all disk locators failed.Error number 0xE009006C.\n\n\n\nInventory Table: Not yet implemented. Error number0xE009006D.\n\n\n\nNotifier error occurred. Error number 0xE00AFFFF.\n\n\n\nMAPI error occurred. Error number 0xE00BFFFF.\n\n\n\n186 TaskCancelled: Task [v1] is cancelled and is notrunning.\n\n\n\n187 TaskCompleted: Task [v1] has been completed andis not running.\n\n\n\n188 TaskInProgress: Task [v1] is running and cannotbe processed.\n\n\n\n189 InvalidTask: The specified Task does not exist.\n\n\n\n190 InventoryServerCannotContactDatabase: TheInventory Service cannot contact the database.\n\n\n\n191 ServerOffline: The Server is offline.\n\n\n\n192 ServerStateUnknown: The Server state is unknown.\n\n\n\n193 HighestVersionIsPending: Could not complete thisaction because the  highest vDisk version is still pending. Thescheduled date for the version has not occurred yet.\n\n\n\n194 MergeInvalidWithCurrentVersions: Merge is notvalid with the current versions that exist.\n\n\n\n195 DiskInventoryError: vDisk versions are not up todate on all Servers that access this vDisk. Update all Servers with the latestversions of the vDisk files.\n\n\n\n196 VDiskFileNotFoundWarning: [v1]: vDisk file wasnot found because it was deleted.\n\n\n\n197 CannotAssignActiveServer: Stop the Server beforeattempting to assign the Server to a different site.\n\n\n\n198 CannotAssignServerWithActiveDevice: Beforeattempting to assign the Server to a different site, shut down Devicesconnecting to the Server, then shut down the Server.\n\n\n\n199 MappedDiskLocator: The vDisk is mapped andcannot be changed.\n\n\n\n200 InvalidTemplateDevice: The Template Device mustbe a Production Device that does not have a Personal vDisk.\n\n\n\n201 DeviceWithPersonalVDiskInvalid: Unable toprocess a Device that uses a personal vDisk.\n\n\n\n202 CreatingDisk: Server is creating a vDisk sochange cannot be done.\n\n\n\n203 AssignedDiskLocatorToDeviceWithPersonalvDisk:Unable to delete a vDisk if the vDisk is currently assigned to a Device thatuses a Personal vDisk. Unassign the Device, then delete the vDisk.\n\n\n\n204 InvalidMacAddress: The MAC address for this VMis invalid. Configure the VM with a valid MAC address.\n\n\n\n205 CannotGetMacFromHypervisor: The hypervisor didnot return the MAC address for this VM: [v1]\n\n\n\n206 Win32SystemException: A system error occurred.\n\n\n\n207 RemoteManagementIpCannotBeResolved: Unable toresolve the management IP for Server [v1].\n\n\n\n208 LocalManagementIpNotSet: The management IP forlocal server [v1] is not set in registry IPC\\IPv4Address.\n\n\n\n209 PerformVolumeMaintenanceTaskPermissions: Ensurethe Service Account user has the appropriate 'Perform volume maintenance task'permissions.\n\n\n\n210 CannotLoginToVirtualHostingPool: Unable to logon to the virtual hosting pool [v1]. Ensure that the hypervisior server isrunning properly.\n\n\n\n211 VirtualHostingPoolNotSetForDevice: ThevirtualHostingPoolId for device [v1] with bdmBoot must be set.\n\n\n\n212 ActiveBdmBootDeviceCannotProcess: The BootDevice Manager [v1] did not process successfully.\n\n\n\n213 CannotMovePvdDeviceToAnotherSite: Personal vDiskDevices cannot be moved to another site.\n\n\n\n214 XenDesktopSiteInvalid: XenDesktop Site forDevices is not valid, the XenDesktop Site is: [v1]\n\n\n\n215 XenDesktopServiceListOutOfDate: XenDesktop Site[v1] is not reachable, check that the Citrix PVS Soap Server service user hasXenDesktop permissions and network connectivity.\n\n\n\n216 NoXenDesktopServiceForPersonalVDiskCapability:No XenDesktop service found for Personal vDisk capability.\n\n\n\n217 InsufficientPermissionsToPreparePersonalVDisks:The user account for the Citrix PVS Soap Server has insufficient permissions toprepare Personal vDisks.\n\n\n\n218 NotEnoughFreeDiskSpaceForManifest: There is notenough free disk space to create the manifest.\n\n\n\n219 OperationCannotBeDoneOnlyPvdDevicesAssigned:Operation cannot be done, only Personal vDisk Devices are assigned.\n\n\n\n220 DiskFormatCannotBeSetToVHD: The format cannot beset to VHD since no VHD vDisk file is found in the path, [v1], for Server,[v2].\n\n\n\n221 DiskFormatCannotBeSetToVHDX: The format cannotbe set to VHDX since no VHDX vDisk file is found in the path, [v1], for Server,[v2].\n\n\n\n222 TemporaryVersionIsSet: This task cannot beperformed because a temporary version is set.\n\n\n\n223 DiskIsUsingPersistentCacheOnServer: A temporaryversion cannot be used for a vDisk that is using persistent cache on server.\n\n\n\n224 UploadAlreadyInProgress: An upload is already inprogress by Server [v1].\n\n\n\n225 FieldMustBeNull: Field [v1] must be null.\n\n\n\n226 DuplicateData: Record already exists in [v1]table for Farm.\n\n\n\n227 CisUploadTokenGenerateError: Error generatingupload token for My Citrix username [v1] ([v2]).\n\n\n\n228 InvalidCredentials: The username or password isincorrect.\n\n\n\n229 NoWriteAccessToFolders: No write access tofolders [v1] or [v2].\n\n\n\n230 ReportCreationError: Error creating problemreport: [v1].\n\n\n\n4100 ADerrorUnexpectedError: An unexpected ActiveDirectory related error occured. Ensure the appropriate permissions exist toperform this task. Error code: [v1], message: [v2], provider: [v3].\n\n\n\nObjects, in the Citrix.PVS.SnapIn Namespace\n\n\nPvsADAccount\n\n\nRead-Only Fields\n\n\n\nstring Domain: Domain the account is a member of.\n\n\n\nstring DomainController: The name of the DC used tocreate the host's computer account.\n\n\n\nstring Name: Name of the Device for the account.\n\n\n\nstring Sid: The value of the objectSID AD attributeof the same name for the Device's computer account.\n\n\n\nPvsAuditAction\n\n\nRead-Only Fields\n\n\n\nGuid Guid or AuditActionId: GUID of the action.\n\n\n\nGuid ObjectId: GUID of the object of the action.\n\n\n\nstring ObjectName: Name of the object of the action.Max Length=1000\n\n\n\nstring Path: Path of the object of the action. Anexample is Site\\Collection for a Device. Default=\"\" Max Length=101\n\n\n\nGuid SiteId: GUID of the Site for the object of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000\n\n\n\nGuid SubId: GUID of the Collection or Store of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000\n\n\n\nuint Type: Type of object that action was performedon. Values are: 1 (AuthGroup), 2 (Collection), 3 (Device), 4 (Disk), 5(DiskLocator), 6 (Farm), 7 (FarmView), 8 (Server), 9 (Site), 10 (SiteView), 11(Store), 12 (System), and 13 (UserGroup)\n\n\n\nPvsAuditActionParameter\n\n\nRead-Only Fields\n\n\n\nGuid AuditActionId: GUID of the Audit Action usedfor Get and Set.\n\n\n\nstring Name or AuditParameterName: Name of theparameter. Max Length=50\n\n\n\nstring Value: Value of the parameter. MaxLength=1000\n\n\n\nPvsAuditActionProperty\n\n\nRead-Only Fields\n\n\n\nGuid AuditActionId: GUID of the Audit Action usedfor Get and Set.\n\n\n\nstring Name or AuditPropertyName: Name of theproperty. Max Length=50\n\n\n\nstring NewValue: New value of the Property.Default=\"\" Max Length=1000\n\n\n\nstring OldValue: Previous value of the Property.Default=\"\" Max Length=1000\n\n\n\nPvsAuditTrail\n\n\nRead-Only Fields\n\n\n\nuint Action: Name of the action taken. This is anumber that is converted to a string for display. Values are: 1 (AddAuthGroup),2 (AddCollection), 3 (AddDevice), 4 (AddDiskLocator), 5 (AddFarmView), 6(AddServer), 7 (AddSite), 8 (AddSiteView), 9 (AddStore), 10 (AddUserGroup), 11(AddVirtualHostingPool), 12 (AddUpdateTask), 13 (AddDiskUpdateDevice), 1001(DeleteAuthGroup), 1002 (DeleteCollection), 1003 (DeleteDevice), 1004(DeleteDeviceDiskCacheFile), 1005 (DeleteDiskLocator), 1006 (DeleteFarmView),1007 (DeleteServer), 1008 (DeleteServerStore), 1009 (DeleteSite), 1010 (DeleteSiteView),1011 (DeleteStore), 1012 (DeleteUserGroup), 1013 (DeleteVirtualHostingPool),1014 (DeleteUpdateTask), 1015 (DeleteDiskUpdateDevice), 1016(DeleteDiskVersion), 2001 (RunAddDeviceToDomain), 2002 (RunApplyAutoUpdate),2003 (RunApplyIncrementalUpdate), 2004 (RunArchiveAuditTrail), 2005(RunAssignAuthGroup), 2006 (RunAssignDevice), 2007 (RunAssignDiskLocator), 2008(RunAssignServer), 2009 (RunWithReturnBoot), 2010 (RunCopyPasteDevice), 2011(RunCopyPasteDisk), 2012 (RunCopyPasteServer), 2013 (RunCreateDirectory), 2014(RunCreateDiskCancel), 2015 (RunDisableCollection), 2016 (RunDisableDevice),2017 (RunDisableDeviceDiskLocator), 2018 (RunDisableDiskLocator), 2019(RunDisableUserGroup), 2020 (RunDisableUserGroupDiskLocator), 2021(RunWithReturnDisplayMessage), 2022 (RunEnableCollection), 2023(RunEnableDevice), 2024 (RunEnableDeviceDiskLocator), 2025(RunEnableDiskLocator), 2026 (RunEnableUserGroup), 2027(RunEnableUserGroupDiskLocator), 2028 (RunExportOemLicenses), 2029(RunImportDatabase), 2030 (RunImportDevices), 2031 (RunImportOemLicenses), 2032(RunMarkDown), 2033 (RunWithReturnReboot), 2034 (RunRemoveAuthGroup), 2035(RunRemoveDevice), 2036 (RunRemoveDeviceFromDomain), 2037 (RunRemoveDirectory),2038 (RunRemoveDiskLocator), 2039 (RunResetDeviceForDomain), 2040(RunResetDatabaseConnection), 2041 (RunRestartStreamingService), 2042(RunWithReturnShutdown), 2043 (RunStartStreamingService), 2044(RunStopStreamingService), 2045 (RunUnlockAllDisk), 2046 (RunUnlockDisk), 2047(RunServerStoreVolumeAccess), 2048 (RunServerStoreVolumeMode), 2049(RunMergeDisk), 2050 (RunRevertDiskVersion), 2051 (RunPromoteDiskVersion), 2052(RunCancelDiskMaintenance), 2053 (RunActivateDevice), 2054 (RunAddDiskVersion),2055 (RunExportDisk), 2056 (RunAssignDisk), 2057 (RunRemoveDisk), 2058(RunDiskUpdateStart), 2059 (RunDiskUpdateCancel), 2060 (RunSetOverrideVersion),2061 (RunCancelTask), 2062 (RunClearTask), 2063 (RunForceInventory), 2064RunUpdateBDM, 2065 (RunStartDeviceDiskTempVersionMode), 2066(RunStopDeviceDiskTempVersionMode), 3001 (RunWithReturnCreateDisk), 3002(RunWithReturnCreateDiskStatus), 3003 (RunWithReturnMapDisk), 3004(RunWithReturnRebalanceDevices), 3005 (RunWithReturnCreateMaintenanceVersion),3006 (RunWithReturnImportDisk), 4001 (RunByteArrayInputImportDevices), 4002(RunByteArrayInputImportOemLicenses), 5001(RunByteArrayOutputArchiveAuditTrail), 5002(RunByteArrayOutputExportOemLicenses), 6001 (SetAuthGroup), 6002(SetCollection), 6003 (SetDevice), 6004 (SetDisk), 6005 (SetDiskLocator), 6006(SetFarm), 6007 (SetFarmView), 6008 (SetServer), 6009 (SetServerBiosBootstrap),6010 (SetServerBootstrap), 6011 (SetServerStore), 6012 (SetSite), 6013(SetSiteView), 6014 (SetStore), 6015 (SetUserGroup), 6016SetVirtualHostingPool, 6017 SetUpdateTask, 6018 SetDiskUpdateDevice, 7001(SetListDeviceBootstraps), 7002 (SetListDeviceBootstrapsDelete), 7003(SetListDeviceBootstrapsAdd), 7004 (SetListDeviceCustomProperty), 7005(SetListDeviceCustomPropertyDelete), 7006 (SetListDeviceCustomPropertyAdd),7007 (SetListDeviceDiskPrinters), 7008 (SetListDeviceDiskPrintersDelete), 7009(SetListDeviceDiskPrintersAdd), 7010 (SetListDevicePersonality), 7011(SetListDevicePersonalityDelete), 7012 (SetListDevicePersonalityAdd), 7013(SetListDiskLocatorCustomProperty), 7014 (SetListDiskLocatorCustomPropertyDelete),7015 (SetListDiskLocatorCustomPropertyAdd), 7016 (SetListServerCustomProperty),7017 (SetListServerCustomPropertyDelete), 7018(SetListServerCustomPropertyAdd), 7019 (SetListUserGroupCustomProperty), 7020(SetListUserGroupCustomPropertyDelete), and 7021(SetListUserGroupCustomPropertyAdd)\n\n\n\nuint Attachments: An or'ed value that indicates ifthere are any details for this action. A value of 15 indicates that there areChildren, Sibling, Parameters and Properties for the action. Values are: 0(None), 1 (Children), 2 (Sibling), 4 (Parameters), and 8 (Properties) Default=0\n\n\n\nGuid Guid or AuditActionId: GUID of the action.\n\n\n\nstring Domain: Domain of the user that performed theaction. Max Length=255\n\n\n\nGuid ObjectId: GUID of the object of the action. Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring ObjectName: Name of the object of the action.Default=\"\" Max Length=1000\n\n\n\nGuid ParentId: GUID of the parent action (one thattriggered this action) if one exists. 00000000-0000-0000-0000-000000000000 whennot valid. Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring Path: Path of the object of the action. Anexample is Site\\Collection for a Device. Default=\"\" Max Length=101\n\n\n\nGuid RootId: GUID of the root action (one thattriggered this group of actions) if one exists.00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000\n\n\n\nGuid SiteId: GUID of the Site for the object of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000\n\n\n\nGuid SubId: GUID of the Collection or Store of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000\n\n\n\nDateTime Time: Date/Time the action occurred down tothe millisecond. Has the date and time including milliseconds. Default=Empty\n\n\n\nuint Type: Type of object that action was performedon. Values are: 0 (Many), 1 (AuthGroup), 2 (Collection), 3 (Device), 4 (Disk),5 (DiskLocator), 6 (Farm), 7 (FarmView), 8 (Server), 9 (Site), 10 (SiteView),11 (Store), 12 (System), and 13 (UserGroup)\n\n\n\nstring UserName: User that performed the action. MaxLength=255\n\n\n\nPvsAuthGroup\n\n\nRead/Write Fields\n\n\n\nstring Name or AuthGroupName: Name of the ActiveDirectory or Windows Group. Max Length=450\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nRead-Only Fields\n\n\n\nGuid Guid or AuthGroupId: Read-only GUID thatuniquely identifies this AuthGroup.\n\n\n\nuint Role: Role of the AuthGroup for a Collection.role can only be used with CollectionId or CollectionName. 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999\n\n\n\nPvsAuthGroupUsage\n\n\nRead-Only Fields\n\n\n\nGuid Guid or Id: GUID of the item. The item can be aFarm, Site or Collection. It will be 00000000-0000-0000-0000-000000000000 forFarm.\n\n\n\nstring Name: Name of the item. The item can be aFarm, Site or Collection.\n\n\n\nuint Role: Role of the AuthGroup for the item. 100is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999\n\n\n\nPvsCeipData\n\n\nRead/Write Fields\n\n\n\nuint Enabled: 1 if CEIP is enabled, otherwise 0.Min=0, Max=1\n\n\n\nuint InProgress: 1 if an upload is currently inprogress, otherwise 0. Default=0\n\n\n\nDateTime NextUpload: Date and time next CEIP uploadis due if enabled is 1. Default=Empty\n\n\n\nuint OneTimeUpload: 1 to perform a one time upload.\n\n\n\nGuid ServerId: ID of server that is currentlyuploading, null if InProgress is 0.Default=00000000-0000-0000-0000-000000000000\n\n\n\nRead-Only Field\n\n\n\nGuid Uuid: CEIP UUID.\n\n\n\nPvsCisData\n\n\nRead/Write Fields\n\n\n\nstring Password: Password of the user required toobtain the token. This is required only by Set and Add\n\n\n\nstring Path: Path where the last problem reportbundle was saved Default=\"\" Max Length=255\n\n\n\nstring UserName: Username used to obtain the tokenDefault=\"\" Max Length=255\n\n\n\nRead-Only Fields\n\n\n\nGuid Guid or CisDataId: CIS UUID\n\n\n\nstring UploadToken: Token for uploading bundles toCIS Default=\"\" Max Length=10\n\n\n\nPvsCollection\n\n\nRead/Write Fields\n\n\n\nuint AutoAddNumberLength: The maximum length of theDevice Number for Auto Add. This length plus the AutoAddPrefix length plus theAutoAddSuffix length must be less than 16. Required that((lenautoAddPrefix+lenautoAddSuffix)+AutoAddNumberLength)\n<\n=15. Min=3, Max=9,Default=4\n\n\n\nstring AutoAddPrefix: The string put before theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno end digit Max Length=12\n\n\n\nstring AutoAddSuffix: The string put after theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno begin digit Max Length=12\n\n\n\nbool AutoAddZeroFill: True when zeros be placed beforethe Device Number up to the AutoAddNumberLength for Auto Add, false otherwise.Default=true\n\n\n\nstring Name or CollectionName: Name of theCollection. It is unique within the Site. Max Length=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nbool Enabled: True when Devices in the Collectioncan be booted, false otherwise. Default=true\n\n\n\nuint LastAutoAddDeviceNumber: The Device Number ofthe last Auto Added Device. Default=0\n\n\n\nGuid TemplateDeviceId: GUID of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith templateDeviceName. Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring TemplateDeviceName: Name of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith TemplateDeviceId. Default=\"\"\n\n\n\nRead-Only Fields\n\n\n\nuint ActiveDeviceCount: Read-only count of activeDevices in this Collection. Default=0\n\n\n\nGuid Guid or CollectionId: Read-only GUID thatuniquely identifies this Collection.\n\n\n\nuint DeviceCount: Read-only count of Devices in thisCollection. Default=0\n\n\n\nuint DeviceWithPVDCount: Read-only count of Deviceswith Personal vDisk in this Collection. Default=0\n\n\n\nuint MakActivateNeededCount: Read-only count ofactive Devices that need MAK activation in this Collection. Default=0\n\n\n\nuint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999\n\n\n\nGuid SiteId: GUID of the Site that this Collectionis a member of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site that thisCollection is a member of. It is not used with SiteId.\n\n\n\nPvsConnection\n\n\nRead/Write Fields\n\n\n\nstring Domain: Domain name to use forAuthentication. If it has a value, it will be *****. Default=\"\"\n\n\n\nstring Password: Password to use for Authentication.If it has a value, it will be *****. Default=\"\"\n\n\n\nstring Persist: True when the connection settingsshould be, for Set, or have been, for Get, saved to the registry.\n\n\n\nstring Port: The Port to use to connect.Default=54321\n\n\n\nstring Name or Server: Name or IP of the Server toconnect to. Default=localhost\n\n\n\nstring User: User name to use for Authentication. Ifit has a value, it will be *****. Default=\"\"\n\n\n\nRead-Only Field\n\n\n\nstring Connected: True when the Citrix.PVS.SnapIn iscurrently connected to the SoapServer with the settings in this PvsConnection.\n\n\n\nPvsConnection can be created or modified usingmethods below:\n\n\n\nNew-Object Citrix.PVS.SnapIn.PvsConnection: Createsdefault Server=localhost, Port=54321, and no authentication.\n\n\n\nNew-ObjectCitrix.PVS.SnapIn.PvsConnection(Citrix.PVS.SnapIn copyFrom): Creates withsettings of the copyFrom Citrix.PVS.SnapIn.\n\n\n\nSetServerToLocalHostDefaultSettings:Server=localhost, Port=54321, and no authentication.\n\n\n\nCopy(Citrix.PVS.SnapIn copyFrom): Modifies thesettings to match the copyFrom Citrix.PVS.SnapIn.\n\n\n\nEquals(Citrix.PVS.SnapIn compareTo): Returns truewhen the settings match what is in the compareTo.\n\n\n\nPvsDevice\n\n\nRead/Write Fields\n\n\n\nuint AdSignature: The signature of the Active Directorymachine account password. Do not set this field, it is only set internally byPVS. Default=0\n\n\n\nuint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint Authentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. This cannotbe Set for a Device with Personal vDisk. Min=0, Max=2, Default=0\n\n\n\nbool BdmBoot: Use PXE boot when set to false, BDMboot when set to true. Default is PXE Default=false\n\n\n\nDateTime BdmCreated: Timstamp when BDM device wascreated  Default=Empty\n\n\n\nuint BdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3use USB. Default=0\n\n\n\nuint BdmType: Use PXE boot when set to 0, BDM (Bios)boot when set to 1 and BDM (Uefi) boot when set to 2.  Default=0\n\n\n\nDateTime BdmUpdated: Timestamp of the last BDM bootdisk update. Default=Empty\n\n\n\nuint BootFrom: Device to boot from. Choices are 1for vDisk, 2 for Hard Disk, and 3 for Floppy. This cannot be Set for a Devicewith Personal vDisk. Min=1, Max=3, Default=1\n\n\n\nstring ClassName: Used by Automatic Update featureto match new versions of Disks to a Device. This cannot be Set for a Devicewith Personal vDisk. Default=\"\" Max Length=41\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nPvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.\n\n\n\nstring Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15\n\n\n\nstring DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000\n\n\n\nstring DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255\n\n\n\nstring DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186\n\n\n\nDateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty\n\n\n\nbool Enabled: True when it can be booted, falseotherwise. This cannot be Set for a Device with Personal vDisk. Default=true\n\n\n\nbool LocalDiskEnabled: If there is a local disk menuchoice for the Device, this is true. This cannot be Set for a Device withPersonal vDisk. Default=false\n\n\n\nuint LocalWriteCacheDiskSize: The size in GB toformat the Device cache file disk. If the value is 0, then the disk is notformatted. Min=0, Max=2048, Default=0\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0\n\n\n\nstring Password: Password of user to authenticatebefore the boot process continues. This cannot be Set for a Device withPersonal vDisk. Default=\"\" ASCII Max Length=100\n\n\n\nuint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901\n\n\n\nuint Type: 1 when it performs test of Disks, 2 whenit performs maintenance on Disks, 3 when it has a Personal vDisk, 4 when it hasa Personal vDisk and performs tests, 0 otherwise. A Device with type 0 - 3 canonly be Set to 0 - 3, and a Device with type 3 - 4 can only be Set to 3 - 4.Min=0, Max=4, Default=0\n\n\n\nstring User: Name of user to authenticate before theboot process continues. This cannot be Set for a Device with Personal vDisk.Default=\"\" ASCII Max Length=20\n\n\n\nbool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false\n\n\n\nGuid XsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000\n\n\n\nRead-Only Fields\n\n\n\nbool Active: True if the Device is currently active,false otherwise. Default=false\n\n\n\nGuid CollectionId: GUID of the Collection thisDevice is to be a member of. It is not used with CollectionName.\n\n\n\nstring CollectionName: Name of the Collection thisDevice is to be a member of. SiteName or SiteId must also be used.\n\n\n\nGuid Guid or DeviceId: Read-only GUID that uniquelyidentifies this Device.\n\n\n\nstring PvdDriveLetter: Read-only Personal vDiskDrive letter. Range is E to U and W to Z. Default=\"\" Max Length=1\n\n\n\nuint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999\n\n\n\nGuid SiteId: GUID of the Site the CollectionName isto be a member of. This or SiteName is used with CollectionName.\n\n\n\nstring SiteName: Name of the Site the CollectionNameis to be a member of. This or SiteId is used with CollectionName.\n\n\n\nbool Template: True if the Device is the template inits Collection, false otherwise. Default=false\n\n\n\nbool TemporaryVersionSet: Read-only true whentemporary version is set. Default=false\n\n\n\nGuid VirtualHostingPoolId: GUID that uniquelyidentifies the Virtual Hosting Pool for a VM. This is needed when Adding a VMdevice. Default=00000000-0000-0000-0000-000000000000\n\n\n\nPvsDeviceBootstrap\n\n\nRead-Only Fields\n\n\n\nGuid Guid or DeviceId: GUID of the Device.\n\n\n\nPvsDeviceBootstrapList: Each one of these has these2 fields:\n\n\n\nstring Name or Bootstrap: Name of the bootstrapfile. Max Length=259\n\n\n\nstring MenuText: Text that is displayed in the BootMenu. If this field has no value, the bootstrap value is used.Default=\"\" ASCII Max Length=64\n\n\n\nPvsDeviceBootstrapList[] DeviceBootstrap: List ofobjects that can be changed with the methods below.\n\n\n\nMethods\n\n\n\nAdd(string bootstrap, string menuText): Used to adda PvsDeviceBootstrapList to the end of the array.\n\n\n\nInsert(int position, string bootstrap, stringmenuText): Used to insert a PvsDeviceBootstrapList array item at position. Theposition is 0 based.\n\n\n\nRemove(int position): Used to remove aPvsDeviceBootstrapList array item at position. The position is 0 based.\n\n\n\nSet(int position, string menuText): Used to set aPvsDeviceBootstrapList array item MenuText at position. The position is 0based.\n\n\n\nReorder(int oldPosition, int newPosition): Used tomove a PvsDeviceBootstrapList array item from the oldPosition to thenewPosition. The oldPosition and newPosition are 0 based.\n\n\n\nPvsDeviceBootstrapList\n\n\nRead/Write Fields\n\n\n\nstring Name or Bootstrap: Name of the bootstrapfile. Max Length=259\n\n\n\nstring MenuText: Text that is displayed in the BootMenu. If this field has no value, the bootstrap value is used.Default=\"\" ASCII Max Length=64\n\n\n\nPvsDeviceDiskTempVersion\n\n\nRead-Only Fields\n\n\n\nGuid Guid or DeviceId: Read-only GUID that uniquelyidentifies the Device with temporary version.\n\n\n\nstring Name or DeviceName: Read-only Computer namethat uniquely identifies the Device with temporary version. ASCII computer namecharacters\n\n\n\nGuid DiskLocatorId: Read-only GUID that uniquelyidentifies then Disk Locator with temporary version.\n\n\n\nstring DiskLocatorName: Read-only Name of the DiskLocator File with temporary version. It is unique within the Store. ASCII\n\n\n\nGuid SiteId: Read-only GUID of the Site the Deviceand DiskLocator are a member of.\n\n\n\nstring SiteName: Read-only Name of the Site theDevice and DiskLocator are a member of.\n\n\n\nGuid StoreId: Read-only GUID of the Store that theDisk Locator is a member of.\n\n\n\nstring StoreName: Read-only Name of the Store thatthe Disk Locator is a member of.\n\n\n\nuint Version: Read-only Disk version the temporaryis for.\n\n\n\nPvsDeviceInfo\n\n\nRead-Only Fields\n\n\n\nbool Active: True if the Device is currently active,false otherwise. Default=false\n\n\n\nuint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint AdTimestamp: The time the Active Directory machineaccount password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint Authentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. This cannotbe Set for a Device with Personal vDisk. Min=0, Max=2, Default=0\n\n\n\nbool BdmBoot: Use PXE boot when set to false, BDMboot when set to true. Default is PXE Default=false\n\n\n\nDateTime BdmCreated: Timstamp when BDM device wascreated  Default=Empty\n\n\n\nuint BdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3use USB. Default=0\n\n\n\nuint BdmType: Use PXE boot when set to 0, BDM (Bios)boot when set to 1 and BDM (Uefi) boot when set to 2.  Default=0\n\n\n\nDateTime BdmUpdated: Timestamp of the last BDM bootdisk update. Default=Empty\n\n\n\nuint BootFrom: Device to boot from. Choices are 1for vDisk, 2 for Hard Disk, and 3 for Floppy. This cannot be Set for a Devicewith Personal vDisk. Min=1, Max=3, Default=1\n\n\n\nstring ClassName: Used by Automatic Update featureto match new versions of Disks to a Device. This cannot be Set for a Devicewith Personal vDisk. Default=\"\" Max Length=41\n\n\n\nGuid CollectionId: GUID of the Collection thisDevice is to be a member of. It is not used with CollectionName.\n\n\n\nstring CollectionName: Name of the Collection thisDevice is to be a member of. SiteName or SiteId must also be used.\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nGuid Guid or DeviceId: Read-only GUID that uniquelyidentifies this Device.\n\n\n\nPvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.\n\n\n\nstring Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15\n\n\n\nstring DiskFileName: Name of the Disk File includingthe extension. It is equal to \"\" if the Device is not active.\n\n\n\nGuid DiskLocatorId: Read-only GUID of the DiskLocator that the Device is using. It is equal to00000000-0000-0000-0000-000000000000 if the Device is not active.\n\n\n\nstring DiskLocatorName: Read-only name of the DiskLocator File that the Device is using. It is equal to the list of Disk Locatornames for the Device if the Device is not active.\n\n\n\nuint DiskVersion: Read-only version of the DiskLocator File that the Device is using. It is equal to 0 if the Device is notactive. Default=0\n\n\n\nuint DiskVersionAccess: State of the Disk Version.Values are: 0 (Production), 1 (Maintenance), 2 (MaintenanceHighestVersion), 3(Override), 4 (Merge), 5 (MergeMaintenance), 6 (MergeTest), and 7 (Test). It isequal to 0 if the Device is not active. Default=0\n\n\n\nstring DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000\n\n\n\nstring DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255\n\n\n\nstring DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" Max Length=186\n\n\n\nDateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty\n\n\n\nbool Enabled: True when it can be booted, falseotherwise. This cannot be Set for a Device with Personal vDisk. Default=true\n\n\n\nSystem.Net.IPAddress Ip: Read-only IP of the Device.It is equal to 0.0.0.0 if the Device is not active.\n\n\n\nuint License: Oem Only: Read-only type of thelicense. Values are 0 when None, 1 or 2 when Desktop. It is equal to 0 if theDevice is not active. Default=0\n\n\n\nuint LicenseType: 0 when None, 1 for Desktop, 2 forServer, 5 for OEM SmartClient, 6 for XenApp, 7 for XenDesktop. It is equal to 0if the Device is not active. Default=0\n\n\n\nbool LocalDiskEnabled: If there is a local disk menuchoice for the Device, this is true. This cannot be Set for a Device withPersonal vDisk. Default=false\n\n\n\nuint LocalWriteCacheDiskSize: The size in GB toformat the Device cache file disk. If the value is 0, then the disk is notformatted. Min=0, Max=2048, Default=0\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0\n\n\n\nuint MakLicenseActivated: Read-only indicator if MAKlicensing is being used and is activated. Values are: 0 (MAK not used), 1 (NotActivated), 2 (Activated). It is equal to 0 if the Device is not active.Default=0\n\n\n\nstring Model: Oem Only: Read-only model of thecomputer. Values are OptiPlex 745, 755, 320, 760, FX160, or Default. It isequal to \"\" if the Device is not active.\n\n\n\nstring Password: Password of user to authenticatebefore the boot process continues. This cannot be Set for a Device withPersonal vDisk. Default=\"\" ASCII Max Length=100\n\n\n\nuint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901\n\n\n\nstring PvdDriveLetter: Read-only Personal vDiskDrive letter. Range is E to U and W to Z. Default=\"\" Max Length=1\n\n\n\nuint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999\n\n\n\nGuid ServerId: Read-only GUID of the Server that theDevice is using. It is equal to 00000000-0000-0000-0000-000000000000 if theDevice is not active.\n\n\n\nSystem.Net.IPAddress ServerIpConnection: Read-onlyIP of the Server that the Device is using. It is equal to 0.0.0.0 if the Deviceis not active.\n\n\n\nstring ServerName: Read-only Name of the Server thatthe Device is using. It is equal to \"\" if the Device is not active.\n\n\n\nuint ServerPortConnection: Read-only Port of theServer that the Device is using. It is equal to 0 if the Device is not active.Default=0\n\n\n\nGuid SiteId: GUID of the Site the CollectionName isto be a member of. This or SiteName is used with CollectionName.\n\n\n\nstring SiteName: Name of the Site the CollectionNameis to be a member of. This or SiteId is used with CollectionName.\n\n\n\nstring Status: 1 or 2 numbers in the format n,n.They are the number of retries and if ram cache is being used, ram cachepercent used. It is equal to \"\" if the Device is not active.\n\n\n\nbool Template: True if the Device is the template inits Collection, false otherwise. Default=false\n\n\n\nbool TemporaryVersionSet: Read-only true whentemporary version is set. Default=false\n\n\n\nuint Type: 1 when it performs test of Disks, 2 whenit performs maintenance on Disks, 3 when it has a Personal vDisk, 4 when it hasa Personal vDisk and performs tests, 0 otherwise. Min=0, Max=4, Default=0\n\n\n\nstring User: Name of user to authenticate before theboot process continues. This cannot be Set for a Device with Personal vDisk.Default=\"\" ASCII Max Length=20\n\n\n\nGuid VirtualHostingPoolId: GUID that uniquelyidentifies the Virtual Hosting Pool for a VM. This is needed when Adding a VMdevice. Default=00000000-0000-0000-0000-000000000000\n\n\n\nbool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false\n\n\n\nGuid XsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000\n\n\n\nPvsDevicePersonality\n\n\nRead-Only Fields\n\n\n\nGuid Guid or DeviceId: GUID of the Device.\n\n\n\nPvsDevicePersonalityList: Each one of these hasthese 2 fields:\n\n\n\nstring Name: Name of the Device personality item.Max Length=250\n\n\n\nstring Value: Value for the Device personality item.Max Length=1000\n\n\n\nPvsDevicePersonalityList[] DevicePersonality: Listof objects that can be changed with the methods below.\n\n\n\nMethods\n\n\n\nAdd(string name, string value): Used to add aPvsDevicePersonalityList to the end of the array.\n\n\n\nInsert(int position, string name, string value):Used to insert a PvsDevicePersonalityList array item at position. The positionis 0 based.\n\n\n\nRemove(int position): Used to remove aPvsDevicePersonalityList array item at position. The position is 0 based.\n\n\n\nSet(int position, string value): Used to set aPvsDevicePersonalityList array item Value at position. The position is 0 based.\n\n\n\nReorder(int oldPosition, int newPosition): Used tomove a PvsDevicePersonalityList array item from the oldPosition to thenewPosition. The oldPosition and newPosition are 0 based.\n\n\n\nPvsDevicePersonalityList\n\n\nRead/Write Fields\n\n\n\nstring Name: Name of the Device personality item.Max Length=250\n\n\n\nstring Value: Value for the Device personality item.Max Length=1000\n\n\n\nPvsDeviceStatus\n\n\nRead-Only Fields\n\n\n\nGuid Guid or DeviceId: Read-only GUID of the Device.Can be used with Get Device.\n\n\n\nstring Name or DeviceName: Read-only Name of theDevice. Can be used with Get Device.\n\n\n\nstring DiskFileName: Name of the Disk File includingthe extension.\n\n\n\nGuid DiskLocatorId: Read-only GUID of the DiskLocator that the Device is using.\n\n\n\nstring DiskLocatorName: Read-only name of the DiskLocator File that the Device is using.\n\n\n\nuint DiskVersion: Read-only version of the DiskLocator File that the Device is using. Default=0\n\n\n\nuint DiskVersionAccess: State of the Disk Version.Values are: 0 (Production), 1 (Maintenance), 2 (MaintenanceHighestVersion), 3(Override), 4 (Merge), 5 (MergeMaintenance), 6 (MergeTest), and 7 (Test)Default=0\n\n\n\nSystem.Net.IPAddress Ip: Read-only IP of the Device.\n\n\n\nuint LicenseType: 0 when None, 1 for Desktop, 2 forServer, 5 for OEM SmartClient, 6 for XenApp, 7 for XenDesktop. Default=0\n\n\n\nuint MakLicenseActivated: Read-only indicator if MAKlicensing is being used and is activated. Values are: 0 (MAK not used), 1 (NotActivated), 2 (Activated). Default=0\n\n\n\nGuid ServerId: Read-only GUID of the Server that theDevice is using.\n\n\n\nSystem.Net.IPAddress ServerIpConnection: Read-onlyIP of the Server that the Device is using.\n\n\n\nstring ServerName: Read-only Name of the Server thatthe Device is using.\n\n\n\nuint ServerPortConnection: Read-only Port of the Serverthat the Device is using. Default=0\n\n\n\nstring Status: 1 or 2 numbers in the format n,n.They are the number of retries and if ram cache is being used, ram cachepercent used.\n\n\n\nPvsDisk\n\n\nRead/Write Fields\n\n\n\nbool ActivationDateEnabled: Use activation date to activateimage when set to true. Default false\n\n\n\nDateTime ActiveDate: Date to activate the disk ifAutoUpdateEnabled and activationDateEnabled are true. Has the date. Empty whenthe AutoUpdateEnabled or activationDateEnabled are false.\n\n\n\nbool AdPasswordEnabled: Enable AD passwordmanagement when set to true.\n\n\n\nstring Author: User defined author. Max Length=40\n\n\n\nbool AutoUpdateEnabled: Automatically update thisimage for matching Devices when set to true. Default false\n\n\n\nUInt64 Build: User defined build number. Min=0,Max=4294967295, Default=0\n\n\n\nstring Class: Class of the Disk. Max Length=40\n\n\n\nstring Company: User defined company. Max Length=40\n\n\n\nstring Date: User defined date. Max Length=40\n\n\n\nbool VHDX: If VHDX is true, the format of the imageis VHDX. Otherwise it is VHD. Default=false\n\n\n\nbool HaEnabled: Enable HA when set to true.\n\n\n\nstring HardwareTarget: User defined hardware target.Max Length=127\n\n\n\nstring ImageType: Type of this image (softwaretype). Max Length=40\n\n\n\nstring InternalName: User defined name. MaxLength=63\n\n\n\nuint LicenseMode: 0 (None), 1 (Multiple ActivationKey), or 2 (Key Management Service). Min=0, Max=2, Default=0\n\n\n\nstring LongDescription: Description of the Disk. MaxLength=399\n\n\n\nUInt64 MajorRelease: User defined major releasenumber. Min=0, Max=4294967295, Default=0\n\n\n\nUInt64 MinorRelease: User defined minor releasenumber. Min=0, Max=4294967295, Default=0\n\n\n\nstring OriginalFile: User defined original file. MaxLength=127\n\n\n\nbool PrinterManagementEnabled: Invalid printers willbe deleted from the Device when set to true.\n\n\n\nstring SerialNumber: User defined serial number. MaxLength=36\n\n\n\nstring Title: User defined title. Max Length=40\n\n\n\nUInt64 WriteCacheSize: RAM cache size (MB). Not 0when used with Cache in Device RAM, and Cache in Device RAM with Overflow onHard Disk. A value of 0 will disable the RAM use for Cache in Device RAM withOverflow on Hard Disk. Min=0, Max=131072, Default=0\n\n\n\nuint WriteCacheType: 0 (Private), (other values arestandard image) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache onDevice Hard Disk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9(Cache in Device RAM with Overflow on Hard Disk). Min=0, Max=9, Default=0\n\n\n\nRead-Only Fields\n\n\n\nGuid Guid or DiskLocatorId: GUID of the DiskLocatorused for Get and Set.\n\n\n\nUInt64 DiskSize: Read-only size of the image. Thevalue is 0 when it is not available. Default=0\n\n\n\nstring LogicalSectorSize: Logical Sector Size.Values are: 512, 4096, Default=512\n\n\n\nuint VhdBlockSize: Block size in KB. For VHD it isonly used with Dynamic type. Tested sizes for VHD are 512, 2048, and 16384. VHDMin=512, Max=16384, Default=2048. For VHDX it is used for all types. Testedsize for VHDX is 32768. VHDX Min=1024, Max= 262144, Default=32768. Default=0\n\n\n\nPvsDiskInfo\n\n\nRead-Only Fields\n\n\n\nbool ActivationDateEnabled: Use activation date toactivate image when set to true. Default false\n\n\n\nbool Active: True if the DiskLocator is currentlyactive, false otherwise. Default=false\n\n\n\nDateTime ActiveDate: Date to activate the disk ifAutoUpdateEnabled and activationDateEnabled are true. Has the date. Empty whenthe AutoUpdateEnabled or activationDateEnabled are false.\n\n\n\nbool AdPasswordEnabled: Enable AD passwordmanagement when set to true.\n\n\n\nstring Author: User defined author. Max Length=40\n\n\n\nbool AutoUpdateEnabled: Automatically update thisimage for matching Devices when set to true. Default false\n\n\n\nUInt64 Build: User defined build number. Min=0,Max=4294967295, Default=0\n\n\n\nstring Class: Class of the Disk. Max Length=40\n\n\n\nstring Company: User defined company. Max Length=40\n\n\n\nstring Date: User defined date. Max Length=40\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nuint DeviceCount: Read-only count of Devices.Default=0\n\n\n\nGuid Guid or DiskLocatorId: Read-only GUID thatuniquely identifies this Disk Locator.\n\n\n\nstring Name or DiskLocatorName: Name of the Disk LocatorFile. It is unique within the Store. ASCII Max Length=52\n\n\n\nUInt64 DiskSize: Read-only size of the image. Thevalue is 0 when it is not available. Default=0\n\n\n\nGuid DiskUpdateDeviceId: GUID of theDiskUpdateDevice that is used when updates are performed.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring DiskUpdateDeviceName: Name of theDiskUpdateDevice that is used when updates are performed. Default=\"\"\n\n\n\nbool Enabled: True when this disk can be booted,false otherwise. Default=true\n\n\n\nbool EnabledForDevice: True when this disk isenabled for the Device specified, false otherwise. This is only returned when aDevice is specified. Default=true\n\n\n\nbool VHDX: If VHDX is true, the format of the imageis VHDX. Otherwise it is VHD. Default=false\n\n\n\nbool HaEnabled: Enable HA when set to true.\n\n\n\nstring HardwareTarget: User defined hardware target.Max Length=127\n\n\n\nstring ImageType: Type of this image (softwaretype). Max Length=40\n\n\n\nstring InternalName: User defined name. MaxLength=63\n\n\n\nuint LicenseMode: 0 (None), 1 (Multiple ActivationKey), or 2 (Key Management Service). Min=0, Max=2, Default=0\n\n\n\nbool Locked: True if the Disk is currently locked,false otherwise. Default=false\n\n\n\nstring LogicalSectorSize: Logical Sector Size.Values are: 512, 4096, Default=512\n\n\n\nstring LongDescription: Description of the Disk. MaxLength=399\n\n\n\nUInt64 MajorRelease: User defined major releasenumber. Min=0, Max=4294967295, Default=0\n\n\n\nbool Mapped: True if the Disk is currently mapped,false otherwise. Default=false\n\n\n\nstring MenuText: Text that is displayed in the BootMenu. If this field has no value, the name value is used. Default=\"\"ASCII Max Length=64\n\n\n\nUInt64 MinorRelease: User defined minor releasenumber. Min=0, Max=4294967295, Default=0\n\n\n\nstring OriginalFile: User defined original file. MaxLength=127\n\n\n\nbool PrinterManagementEnabled: Invalid printers willbe deleted from the Device when set to true.\n\n\n\nbool RebalanceEnabled: True when this Server canautomatically rebalance Devices, false otherwise. Default=false\n\n\n\nuint RebalanceTriggerPercent: Percent over fair loadthat triggers a dynamic Device rebalance. Min=5, Max=5000, Default=25\n\n\n\nuint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 999 is read-only. Default=999\n\n\n\nstring SerialNumber: User defined serial number. MaxLength=36\n\n\n\nGuid ServerId: GUID of the single Server that thisDisk Locator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring ServerName: Name of the single Server thatthis Disk Locator is assigned to. It is not used with ServerId.Default=\"\"\n\n\n\nGuid SiteId: GUID of the Site this DiskLocator is tobe a member of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site this DiskLocatoris to be a member of. It is not used with SiteId.\n\n\n\nGuid StoreId: GUID of the Store that this DiskLocator is a member of. SiteName or SiteId must also be used. It is not usedwith StoreName.\n\n\n\nstring StoreName: Name of the Store that this DiskLocator is a member of. SiteName or SiteId must also be used. It is not usedwith StoreId.\n\n\n\nuint SubnetAffinity: Qualifier for subnet affinitywhen assigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2,Default=0\n\n\n\nbool TemporaryVersionSet: Read-only true whentemporary version(s) are set. Default=false\n\n\n\nstring Title: User defined title. Max Length=40\n\n\n\nuint VhdBlockSize: Block size in KB. For VHD it isonly used with Dynamic type. Tested sizes for VHD are 512, 2048, and 16384. VHDMin=512, Max=16384, Default=2048. For VHDX it is used for all types. Testedsize for VHDX is 32768. VHDX Min=1024, Max= 262144, Default=32768. Default=0\n\n\n\nUInt64 WriteCacheSize: RAM cache size (MB). Not 0when used with Cache in Device RAM, and Cache in Device RAM with Overflow onHard Disk. A value of 0 will disable the RAM use for Cache in Device RAM withOverflow on Hard Disk. Min=0, Max=131072, Default=0\n\n\n\nuint WriteCacheType: 0 (Private), (other values arestandard image) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache onDevice Hard Disk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9(Cache in Device RAM with Overflow on Hard Disk). Min=0, Max=9, Default=0\n\n\n\nPvsDiskInventory\n\n\nRead-Only Fields\n\n\n\nstring Active: 1 if the Server is currently active,2 if unknown, and 0 otherwise.\n\n\n\nGuid Guid or DiskLocatorId: GUID of the DiskLocatorused for Get and Set.\n\n\n\nstring FilePath: Path used to access the diskversion from the Server. Empty if the information is not available.\n\n\n\nDateTime FileTime: Date/Time of the date versionfile. Has the date and time without milliseconds. Empty if the information isnot available.\n\n\n\nDateTime PropertiesTime: Date/Time of the diskproperties. Has the date and time without milliseconds. Empty if theinformation is not available.\n\n\n\nGuid ServerId: GUID of the Server that the DiskVersion Inventory is being reported about.\n\n\n\nstring ServerName: Name of the Server that the DiskVersion Inventory is being reported about.\n\n\n\nstring State: The number code of the inventorystate. Values are: 0 (Up to date), 1 (version file is missing), 2 (version fileis out of date), 3 (properties are missing), 4 (properties are out of date), 5(server is not reachable).\n\n\n\nstring Version: Version number. The base disk isversion 0, the other version numbers are in part of the file name.\n\n\n\nPvsDiskLocator\n\n\nRead/Write Fields\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nbool Enabled: True when this disk can be booted,false otherwise. Default=true\n\n\n\nstring MenuText: Text that is displayed in the BootMenu. If this field has no value, the name value is used. Default=\"\"ASCII Max Length=64\n\n\n\nbool RebalanceEnabled: True when this Server canautomatically rebalance Devices, false otherwise. Default=false\n\n\n\nuint RebalanceTriggerPercent: Percent over fair loadthat triggers a dynamic Device rebalance. Min=5, Max=5000, Default=25\n\n\n\nGuid ServerId: GUID of the single Server that thisDisk Locator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring ServerName: Name of the single Server thatthis Disk Locator is assigned to. It is not used with ServerId.Default=\"\"\n\n\n\nuint SubnetAffinity: Qualifier for subnet affinitywhen assigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2,Default=0\n\n\n\nRead-Only Fields\n\n\n\nbool Active: True if the DiskLocator is currentlyactive, false otherwise. Default=false\n\n\n\nGuid Guid or DiskLocatorId: Read-only GUID thatuniquely identifies this Disk Locator.\n\n\n\nstring Name or DiskLocatorName: Name of the DiskLocator File. It is unique within the Store. ASCII Max Length=52\n\n\n\nGuid DiskUpdateDeviceId: GUID of theDiskUpdateDevice that is used when updates are performed.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring DiskUpdateDeviceName: Name of theDiskUpdateDevice that is used when updates are performed. Default=\"\"\n\n\n\nbool EnabledForDevice: True when this disk isenabled for the Device specified, false otherwise. This is only returned when aDevice is specified. Default=true\n\n\n\nbool Mapped: True if the Disk is currently mapped,false otherwise. Default=false\n\n\n\nuint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 999 is read-only. Default=999\n\n\n\nGuid SiteId: GUID of the Site this DiskLocator is tobe a member of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site this DiskLocatoris to be a member of. It is not used with SiteId.\n\n\n\nGuid StoreId: GUID of the Store that this DiskLocator is a member of. SiteName or SiteId must also be used. It is not usedwith StoreName.\n\n\n\nstring StoreName: Name of the Store that this DiskLocator is a member of. SiteName or SiteId must also be used. It is not usedwith StoreId.\n\n\n\nbool TemporaryVersionSet: Read-only true whentemporary version(s) are set. Default=false\n\n\n\nPvsDiskLocatorLock\n\n\nRead-Only Fields\n\n\n\nGuid DeviceId: GUID of the Device that has the lock,will be 00000000-0000-0000-0000-000000000000 if a Server has the lock.\n\n\n\nstring DeviceName: Name of the Device that has thelock, will not be included if a Server has the lock.\n\n\n\nbool Exclusive: True when the lock is exclusive,false when it is shared. Default=false\n\n\n\nbool ReadOnly: True when lock is because file systemis read only, false when file system is read write Default=false\n\n\n\nGuid ServerId: GUID of the Server that has the lock,will be 00000000-0000-0000-0000-000000000000 if a Device has the lock.\n\n\n\nstring ServerName: Name of the Server that has thelock, will not be included if a Device has the lock.\n\n\n\nPvsDiskUpdateDevice\n\n\nRead/Write Fields\n\n\n\nuint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000\n\n\n\nstring DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255\n\n\n\nstring DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186\n\n\n\nDateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0\n\n\n\nuint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901\n\n\n\nRead-Only Fields\n\n\n\nbool Active: True if the Device is currently active,false otherwise. Default=false\n\n\n\nGuid Guid or DeviceId: Read-only GUID that uniquelyidentifies this Device.\n\n\n\nPvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.\n\n\n\nstring Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15\n\n\n\nGuid DiskLocatorId: GUID of the Disk Locator toupdate with this Device.\n\n\n\nstring DiskLocatorName: Name of the Disk LocatorFile to update with this Device.\n\n\n\nuint DiskVersion: Read-only version of the DiskLocator File that the Device is using. It is equal to 0 if the Device is notactive. Default=0\n\n\n\nSystem.Net.IPAddress Ip: Read-only IP of the Device.It is equal to 0.0.0.0 if the Device is not active.\n\n\n\nuint License: Oem Only: Read-only type of thelicense. Values are 0 when None, 1 or 2 when Desktop. It is equal to 0 if theDevice is not active. Default=0\n\n\n\nuint LicenseType: 0 when None, 1 for Desktop, 2 forServer, 5 for OEM SmartClient, 6 for XenApp, 7 for XenDesktop. It is equal to 0if the Device is not active. Default=0\n\n\n\nuint MakLicenseActivated: Read-only indicator if MAKlicensing is being used and is activated. Values are: 0 (MAK not used), 1 (NotActivated), 2 (Activated). It is equal to 0 if the Device is not active.Default=0\n\n\n\nstring Model: Oem Only: Read-only model of thecomputer. Values are OptiPlex 745, 755, 320, 760, FX160, or Default. It isequal to \"\" if the Device is not active.\n\n\n\nGuid ServerId: Read-only GUID of the Server that theDevice is using. It is equal to 00000000-0000-0000-0000-000000000000 if theDevice is not active.\n\n\n\nSystem.Net.IPAddress ServerIpConnection: Read-onlyIP of the Server that the Device is using. It is equal to 0.0.0.0 if the Deviceis not active.\n\n\n\nstring ServerName: Read-only Name of the Server thatthe Device is using. It is equal to \"\" if the Device is not active.\n\n\n\nuint ServerPortConnection: Read-only Port of theServer that the Device is using. It is equal to 0 if the Device is not active.Default=0\n\n\n\nGuid SiteId: GUID of the Site this Disk UpdateDevice is to be a member of.\n\n\n\nstring SiteName: Name of the Site this Disk UpdateDevice is to be a member of.\n\n\n\nstring Status: 1 or 2 numbers in the format n,n.They are the number of retries and if ram cache is being used, ram cachepercent used. It is equal to \"\" if the Device is not active.\n\n\n\nGuid StoreId: GUID of the Store that the DiskLocator is a member of.\n\n\n\nstring StoreName: Name of the Store that the DiskLocator is a member of.\n\n\n\nGuid VirtualHostingPoolId: GUID of the VirtualHosting Pool. It is not used with VirtualHostingPoolName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring VirtualHostingPoolName: Name of the VirtualHosting Pool.\n\n\n\nPvsDiskUpdateStatus\n\n\nRead-Only Fields\n\n\n\nuint CurrentStatus: Current status of the update.Values are: 0 (Ready), 1 (Update Pending), 2 (Preparing Image), 3 (StartingVM), 4 (Update In Progress), 5 (Stopping VM), 6 (Submitting Image), 7(Reverting Image), 8 (Invalid), 9 (Aborted), 10 (Completed Successfully), 11(No Updates) Min=0, Max=11, Default=0\n\n\n\nstring CurrentStatusMessage: Message string thatincludes the results of the run. Default=\"\" Max Length=255\n\n\n\nstring Description: User description of the UpdateTask.\n\n\n\nGuid DeviceId: GUID that Device being used to do theupdate.\n\n\n\nstring DeviceName: Name of the Device being used todo the update.\n\n\n\nGuid DiskLocatorId: GUID of the Disk Locator toupdate.\n\n\n\nstring Name or DiskLocatorName: Name of the DiskLocator File to update.\n\n\n\nGuid Guid or DiskUpdateTaskId: GUID that uniquelyidentifies this Update Task and Device relationship.\n\n\n\nuint PreviousResult: Status of the last run. Valuesare: 0 (Ready), 1 (Update Pending), 2 (Preparing Image), 3 (Starting VM), 4(Update In Progress), 5 (Stopping VM), 6 (Submitting Image), 7 (RevertingImage), 8 (Invalid), 9 (Aborted), 10 (Completed Successfully), 11 (No Updates)Min=0, Max=11, Default=0\n\n\n\nstring PreviousResultMessage: Message string thatincludes the results of the last run. Default=\"\" Max Length=255\n\n\n\nGuid SiteId: GUID of the Site that this Update TaskName is a member of.\n\n\n\nstring SiteName: Name of the Site that this UpdateTask Name is a member of.\n\n\n\nGuid StoreId: GUID of the Store that the DiskLocator is a member of.\n\n\n\nstring StoreName: Name of the Store that the DiskLocator is a member of.\n\n\n\nGuid UpdateTaskId: GUID that uniquely identifies theUpdate Task.\n\n\n\nstring UpdateTaskName: Name of the Update Task.\n\n\n\nGuid VirtualHostingPoolId: GUID of the VirtualHosting Pool being used for the update.\n\n\n\nstring VirtualHostingPoolName: Name of the VirtualHosting Pool being used for the update.\n\n\n\nPvsDiskVersion\n\n\nRead/Write Fields\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nDateTime ScheduledDate: Date/Time that the DiskVersion is scheduled to become available. Has the date, hour and minute. Emptywhen the disk version is made available immediately. Default=Empty\n\n\n\nRead-Only Fields\n\n\n\nuint Access: Read-only access of the Disk Version.Values are: 0 (Production), 1 (Maintenance), 2 (MaintenanceHighestVersion), 3(Override), 4 (Merge), 5 (MergeMaintenance), 6 (MergeTest), and 7 (Test) Min=0,Max=7, Default=0\n\n\n\nbool CanDelete: Read-only true when the version canbe deleted. Default=false\n\n\n\nbool CanMerge: Read-only true when the version canbe update merged. Will be set for the highest version number. Default=false\n\n\n\nbool CanMergeBase: Read-only true when the versioncan be base merged. Will be set for the highest version number. Default=false\n\n\n\nbool CanOverride: Read-only true when the versioncan be set as the Override. Default=false\n\n\n\nbool CanPromote: Read-only true when the version canbe promoted. Default=false\n\n\n\nbool CanRevertMaintenance: Read-only true when theversion can be reverted to Maintenance Access. Default=false\n\n\n\nbool CanRevertTest: Read-only true when the versioncan be reverted to Test Access. Default=false\n\n\n\nbool CanSetScheduledDate: Read-only true when theversion can have the scheduled date modified. Default=false\n\n\n\nstring CreateDate: Read-only Date/Time that the DiskVersion was created. Default=getdate\n\n\n\nbool DeleteWhenFree: Read-only true if the DiskVersion is no longer needed because of a merge. If not current booted by aDevice, it can be deleted. Default=false\n\n\n\nuint DeviceCount: Read-only count of Devices.Default=0\n\n\n\nstring Name or DiskFileName: Name of the Disk Fileincluding the extension. Default=\"\"\n\n\n\nGuid Guid or DiskLocatorId: GUID of the DiskLocatorused for Get and Set.\n\n\n\nbool GoodInventoryStatus: True when the up to datefile is accessible by all Servers, false otherwise. Default=false\n\n\n\nbool IsPending: Read-only true when the versionScheduledDate has not occurred. Default=false\n\n\n\nuint TaskId: When a Merge is occurring, this will beset with the task number of the process that is occurring. Default=\"\"\n\n\n\nbool TemporaryVersionSet: Read-only true whentemporary version(s) are set. Some changes cannot be made to the version whenthis is set. Default=false\n\n\n\nuint Type: Read-only type of the Disk Version.Values are: 0 (Base), 1 (Manual), 2 (Automatic), 3 (Merge), and 4 (MergeBase)Min=0, Max=4, Default=0\n\n\n\nuint Version: Read-only version number. The basedisk is version 0, the other version numbers are in part of the file name.Default=0\n\n\n\nPvsFarm\n\n\nRead/Write Fields\n\n\n\nbool AuditingEnabled: True when Auditing is enabled,false otherwise. Default=false\n\n\n\nbool AutoAddEnabled: True when Auto Add is enabled,false otherwise. Default=false\n\n\n\nbool AutomaticMergeEnabled: True when AutomaticMerge is enabled, false otherwise. If the number of versions becomes more thanthe MaxVersions value, a merge will occur at the end of PromoteDiskVersion.Default=true\n\n\n\nGuid DefaultSiteId: GUID of the Site to place newDevices into automatically. Not used with defaultSiteName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring DefaultSiteName: Name of the Site to placenew Devices into automatically. Not used with DefaultSiteId.Default=\"\"\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring Name or FarmName: Name of the Farm.Default=\"\" Max Length=50\n\n\n\nDateTime LastAuditArchiveDate: Last date of AuditTrail data that was Archived. Has the date. Default=Empty\n\n\n\nstring LicenseServer: License server name.Default=\"\" Max Length=255\n\n\n\nuint LicenseServerPort: License server port.Min=1025, Max=65534, Default=27000\n\n\n\nuint MaxVersions: Maximum number a versions of aDisk that can exist before a merge will automatically occur. Min=3, Max=50,Default=5\n\n\n\nuint MergeMode: Mode to place the version in after amerge has occurred. Values are: 0 (Production), 1 (Test) and 2 (Maintenance).Min=0, Max=2, Default=2\n\n\n\nbool OfflineDatabaseSupportEnabled: True whenOffline Database Support is enabled, false otherwise. Default=false\n\n\n\nRead-Only Fields\n\n\n\nbool AdGroupsEnabled: Active Directory groups areused for authorization, when set to true. Windows groups are used when set tofalse. Default=false\n\n\n\nstring DatabaseInstanceName: Read-only name of thedatabase instance.\n\n\n\nstring DatabaseName: Read-only name of the database.\n\n\n\nstring DatabaseServerName: Read-only name of thedatabase server.\n\n\n\nstring FailoverPartnerInstanceName: Read-only nameof the database server instance.\n\n\n\nstring FailoverPartnerServerName: Read-only name ofthe database server.\n\n\n\nGuid Guid or FarmId: Read-only GUID that uniquelyidentifies this Farm.\n\n\n\nstring MultiSubnetFailover: Read-only DatabaseMultiSubnetFailover value\n\n\n\nuint Role: Read-only Role of the user for this item.100 is Farm Administrator, and 999 is read-only. Default=999\n\n\n\nPvsFarmView\n\n\nRead/Write Fields\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring Name or FarmViewName: name of the Farm View.Max Length=50\n\n\n\nRead-Only Fields\n\n\n\nuint ActiveDeviceCount: Read-only count of activeDevices in this Farm View. Default=0\n\n\n\nuint DeviceCount: Read-only count of Devices in thisFarm View. Default=0\n\n\n\nGuid Guid or FarmViewId: Read-only GUID thatuniquely identifies this Farm View.\n\n\n\nuint MakActivateNeededCount: Read-only count ofactive Devices that need MAK activation in this Farm View. Default=0\n\n\n\nPvsGroup\n\n\nRead-Only Fields\n\n\n\nGuid Guid: GUID of the Active Directory group.00000000-0000-0000-0000-000000000000 for Windows groups.\n\n\n\nstring Name: Name of the Group.\n\n\n\nPvsLocalServer\n\n\nRead-Only Field\n\n\n\nstring Name or LocalServer: NetBios name of local server.\n\n\n\nPvsNewDiskVersion\n\n\nRead-Only Fields\n\n\n\nstring Name: Name of the disk file without theextension.\n\n\n\nuint Status: Status of the disk file. Values are: 0(Valid), 1 (Missing Properties File), 2 (Access Denied), 3 (Access Denied andMissing Properties File), 4 (Invalid Disk File), 5 (Manifest Invalid)\n\n\n\nPvsPhysicalAddress\n\n\nDerived fromSystem.Net.NetworkInformation.PhysicalAddress. GetString() returns a -delimited MAC address.\n\n\n\nPvsServer\n\n\nRead/Write Fields\n\n\n\nuint AdMaxPasswordAge: Number of days before apassword expires. Min=1, Max=30, Default=7\n\n\n\nbool AdMaxPasswordAgeEnabled: Age the password, whenset to true. Default=false\n\n\n\nuint BootPauseSeconds: Number of seconds that aDevice will pause during login if its server busy. Min=1, Max=60, Default=10\n\n\n\nuint BuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24\n\n\n\nuint BusyDbConnectionRetryCount: Number of times afailed database connection will be retried. Min=0, Max=32767, Default=2\n\n\n\nuint BusyDbConnectionRetryInterval: Interval, in numberof milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nbool EventLoggingEnabled: Enable event logging, whenset to true. Default=false\n\n\n\nuint FirstPort: Number of the first UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910\n\n\n\nuint InitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000,Default=50\n\n\n\nuint InitialTransactionConnectionPoolSize: Initialsize of database connection pool for transactional queries. Min=1, Max=1000,Default=50\n\n\n\nuint IoBurstSize: Number of bytes read/writes cansend in a burst of packets. Required thatIoBurstSize/(MaxTransmissionUnits-76)\n<\n=32. Min=4096, Max=61440,Default=32768\n\n\n\nSystem.Net.IPAddress[] Ip: One or more streaming ipaddresses.\n\n\n\nDateTime LastBugReportAttempt: Time that this serverlast attempted to upload or generate a bug report bundle. Default=Empty\n\n\n\nstring LastBugReportResult: Status of the last bugreport on this server. Default=\"\" Max Length=4000\n\n\n\nstring LastBugReportStatus: Status of the last bugreport on this server. Default=\"\" Max Length=250\n\n\n\nstring LastBugReportSummary: Summary of the last bugreport on this server. Default=\"\" Max Length=250\n\n\n\nDateTime LastCeipUploadAttempt: Time that thisserver last attempted a CEIP upload. Default=Empty\n\n\n\nuint LastPort: Number of the last UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930\n\n\n\nuint LicenseTimeout: Amount of seconds before alicense times out. Min=15, Max=300, Default=30\n\n\n\nuint LocalConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are local. A value of 0 disables thefeature. Min=0, Max=128, Default=4\n\n\n\nuint LogFileBackupCopiesMax: Maximum number of logfile backups. Min=1, Max=50, Default=4\n\n\n\nuint LogFileSizeMax: Maximum size log files canreach in Megabytes. Min=1, Max=50, Default=5\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=4\n\n\n\nuint MaxBootDevicesAllowed: Maximum number ofDevices allowed to boot simultaneously. Min=1, Max=1000, Default=500\n\n\n\nuint MaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60\n\n\n\nuint MaxQueryConnectionPoolSize: Maximum size ofdatabase connection pool for non-transactional queries. Min=1, Max=32767,Default=1000\n\n\n\nuint MaxTransactionConnectionPoolSize: Maximum sizeof database connection pool for transactional queries. Min=1, Max=32767,Default=1000\n\n\n\nuint MaxTransmissionUnits: Ethernet maximumtransmission unit size for the protocol for use for Server and Device. Requiredthat IoBurstSize/(MaxTransmissionUnits-76)\n<\n=32. Min=502, Max=16426,Default=1506\n\n\n\nbool NonBlockingIoEnabled: Use non-Blocking IO, whenset to true. Default=true\n\n\n\nfloat PowerRating: A strictly relative rating ofthis Server's capabilities when compared to other Servers in the Store(s) itbelongs too; can be used to help tune load balancing. Min=0.1, Max=1000,Default=1\n\n\n\nuint RamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10\n\n\n\nbool RamDiskInvitationType: Either false for Fixed,or true for Variable. Default=false\n\n\n\nSystem.Net.IPAddress RamDiskIpAddress: IP address touse for transferring the RAM Disk. When equal to 0.0.0.0 the server IP is usedwith the first part replaced with 233. Default=0.0.0.0\n\n\n\nuint RamDiskTimeToLive: Time to live for theinvitation packet sent to Devices. Min=1, Max=255, Default=1\n\n\n\nuint RefreshInterval: Interval, in number ofseconds, the server should wait before refreshing settings. If set to 0, unuseddatabase connections are never released. Min=0, Max=32767, Default=300\n\n\n\nuint RemoteConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are remote. A value of 0 disables thefeature. Min=0, Max=128, Default=4\n\n\n\nuint ServerCacheTimeout: Number of seconds to waitbefore considering another Server is down. Min=5, Max=60, Default=8\n\n\n\nstring Name or ServerName: Computer name with nospaces. ASCII computer name characters Max Length=21\n\n\n\nuint ThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs) \n<\n= 1000.Min=1, Max=60, Default=8\n\n\n\nuint UnusedDbConnectionTimeout: Interval, in numberof seconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300\n\n\n\nuint VDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0\n\n\n\nRead-Only Fields\n\n\n\nuint Active: 1 if the Server is currently active, 2if unknown, and 0 otherwise. Min=0, Max=2, Default=0\n\n\n\nSystem.Net.IPAddress ManagementIp: IP address usedfor management communications between Servers. Default=0.0.0.0\n\n\n\nuint Role: Read-only Role of the user for this item.100 is Farm Administrator, and 200 is Site Administrator. Default=999\n\n\n\nstring ServerFqdn: Read-only fully qualified domainname. Default=\"\" Max Length=1024\n\n\n\nGuid Guid or ServerId: Read-only GUID that uniquelyidentifies this Server.\n\n\n\nGuid SiteId: GUID of the Site this Server is to be amember of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site this Server is tobe a member of. It is not used with SiteId.\n\n\n\nPvsServerBiosBootstrap\n\n\nRead/Write Fields\n\n\n\nbool BootFromHdOnFail: For network recovery rebootto hard drive when set to true, restore network connection when set to false.Default=false\n\n\n\nSystem.Net.IPAddress Bootserver1_Ip: 1st boot serverIP. Only used when Lookup is false.\n\n\n\nuint Bootserver1_Port: 1st boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nSystem.Net.IPAddress Bootserver2_Ip: 2nd boot serverIP. Only used when Lookup is false. Default=0.0.0.0\n\n\n\nuint Bootserver2_Port: 2nd boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nSystem.Net.IPAddress Bootserver3_Ip: 3rd boot serverIP. Only used when Lookup is false. Default=0.0.0.0\n\n\n\nuint Bootserver3_Port: 3rd boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nSystem.Net.IPAddress Bootserver4_Ip: 4th boot serverIP. Only used when Lookup is false. Default=0.0.0.0\n\n\n\nuint Bootserver4_Port: 4th boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nbool DhcpEnabled: Use DHCP to retrieve target deviceIP when set to true, otherwise use the static domain, dnsIpAddresstrue anddnsIpAddress2 settings. Default=true\n\n\n\nSystem.Net.IPAddress DnsIpAddress1: Primary DNSserver IP. Only used when DhcpEnabled is false.\n\n\n\nSystem.Net.IPAddress DnsIpAddress2: Secondary DNSserver IP. Only used when DhcpEnabled is false.\n\n\n\nstring Domain: Domain of the primary and secondaryDNS servers. Only used when DhcpEnabled is false.\n\n\n\nbool Enabled: Automatically update the BIOS on thetarget device with these setting when set to true, otherwise do not use thesesettings. Default=false\n\n\n\nuint GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nbool InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false\n\n\n\nbool Lookup: Use DNS to find the Server when set totrue with the ServerName host value, otherwise use the bootservertrue_Ip,bootservertrue_Port, bootserver2_Ip, bootserver2_Port, bootserver3_Ip,bootserver3_Port, bootserver4_Ip, and bootserver4_Port settings. Default=true\n\n\n\nbool PaeMode: PAE mode (use if PAE enabled inboot.ini of target device) when set to true. Default=false\n\n\n\nuint PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nuint RecoveryTime: When bootFromHdOnFail is 1, thisis the number of seconds to wait before reboot to hard drive. Min=10,Max=60000, Default=50\n\n\n\nstring Name or ServerName: Host to use for DNSlookup. Only used when Lookup is true. Default=IMAGESERVER1\n\n\n\nbool VerboseMode: Display verbose diagnosticinformation when set to true. Default=false\n\n\n\nRead-Only Field\n\n\n\nGuid Guid or ServerId: GUID of the Server used forGet and Set.\n\n\n\nPvsServerBootstrap\n\n\nRead/Write Fields\n\n\n\nbool BootFromHdOnFail: For network recovery rebootto hard drive when set to true, restore network connection when set to false.Default=false\n\n\n\nSystem.Net.IPAddress Bootserver1_Gateway: 1st bootserver gateway. Default=0.0.0.0\n\n\n\nSystem.Net.IPAddress Bootserver1_Ip: 1st boot serverIP.\n\n\n\nSystem.Net.IPAddress Bootserver1_Netmask: 1st bootserver netmask. Default=0.0.0.0\n\n\n\nuint Bootserver1_Port: 1st boot server port.Min=1025, Max=65536, Default=6910\n\n\n\nSystem.Net.IPAddress Bootserver2_Gateway: 2nd bootserver gateway. Default=0.0.0.0\n\n\n\nSystem.Net.IPAddress Bootserver2_Ip: 2nd boot serverIP. Default=0.0.0.0\n\n\n\nSystem.Net.IPAddress Bootserver2_Netmask: 2nd bootserver netmask. Default=0.0.0.0\n\n\n\nuint Bootserver2_Port: 2nd boot server port.Min=1025, Max=65536, Default=6910\n\n\n\nSystem.Net.IPAddress Bootserver3_Gateway: 3rd bootserver gateway. Default=0.0.0.0\n\n\n\nSystem.Net.IPAddress Bootserver3_Ip: 3rd boot serverIP. Default=0.0.0.0\n\n\n\nSystem.Net.IPAddress Bootserver3_Netmask: 3rd bootserver netmask. Default=0.0.0.0\n\n\n\nuint Bootserver3_Port: 3rd boot server port. Min=1025,Max=65536, Default=6910\n\n\n\nSystem.Net.IPAddress Bootserver4_Gateway: 4th bootserver gateway. Default=0.0.0.0\n\n\n\nSystem.Net.IPAddress Bootserver4_Ip: 4th boot serverIP. Default=0.0.0.0\n\n\n\nSystem.Net.IPAddress Bootserver4_Netmask: 4th bootserver netmask. Default=0.0.0.0\n\n\n\nuint Bootserver4_Port: 4th boot server port.Min=1025, Max=65536, Default=6910\n\n\n\nuint GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nbool InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false\n\n\n\nbool PaeMode: PAE mode (use if PAE enabled inboot.ini of target device) when set to true. Default=false\n\n\n\nuint PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nuint RecoveryTime: When bootFromHdOnFail is 1, thisis the number of seconds to wait before reboot to hard drive. Min=10,Max=60000, Default=50\n\n\n\nbool VerboseMode: Display verbose diagnosticinformation when set to true. Default=false\n\n\n\nRead-Only Fields\n\n\n\nstring Name: Name of the bootstrap file used to Getand Set.\n\n\n\nGuid Guid or ServerId: GUID of the Server used forGet and Set.\n\n\n\nPvsServerBootstrapName\n\n\nRead-Only Field\n\n\n\nstring Name: Bootstrap file name.\n\n\n\nPvsServerInfo\n\n\nRead-Only Fields\n\n\n\nuint Active: 1 if the Server is currently active, 2if unknown, and 0 otherwise. Min=0, Max=2, Default=0\n\n\n\nuint AdMaxPasswordAge: Number of days before apassword expires. Min=1, Max=30, Default=7\n\n\n\nbool AdMaxPasswordAgeEnabled: Age the password, whenset to true. Default=false\n\n\n\nuint BootPauseSeconds: Number of seconds that aDevice will pause during login if its server busy. Min=1, Max=60, Default=10\n\n\n\nuint BuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24\n\n\n\nuint BusyDbConnectionRetryCount: Number of times afailed database connection will be retried. Min=0, Max=32767, Default=2\n\n\n\nuint BusyDbConnectionRetryInterval: Interval, innumber of milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25\n\n\n\nSystem.Net.IPAddress ContactIp: Read-only contact IPfor the Server.\n\n\n\nstring ContactPort: Read-only contact port for theServer.\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nuint DeviceCount: Read-only count of Devices.Default=0\n\n\n\nbool EventLoggingEnabled: Enable event logging, whenset to true. Default=false\n\n\n\nuint FirstPort: Number of the first UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910\n\n\n\nuint InitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000,Default=50\n\n\n\nuint InitialTransactionConnectionPoolSize: Initialsize of database connection pool for transactional queries. Min=1, Max=1000,Default=50\n\n\n\nuint IoBurstSize: Number of bytes read/writes cansend in a burst of packets. Required thatIoBurstSize/(MaxTransmissionUnits-76)\n<\n=32. Min=4096, Max=61440,Default=32768\n\n\n\nSystem.Net.IPAddress[] Ip: One or more streaming ipaddresses.\n\n\n\nDateTime LastBugReportAttempt: Time that this serverlast attempted to upload or generate a bug report bundle. Default=Empty\n\n\n\nstring LastBugReportResult: Status of the last bugreport on this server. Default=\"\" Max Length=4000\n\n\n\nstring LastBugReportStatus: Status of the last bugreport on this server. Default=\"\" Max Length=250\n\n\n\nstring LastBugReportSummary: Summary of the last bugreport on this server. Default=\"\" Max Length=250\n\n\n\nDateTime LastCeipUploadAttempt: Time that thisserver last attempted a CEIP upload. Default=Empty\n\n\n\nuint LastPort: Number of the last UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930\n\n\n\nuint LicenseTimeout: Amount of seconds before alicense times out. Min=15, Max=300, Default=30\n\n\n\nuint LocalConcurrentIoLimit: Maximum concurrent IO transactionsit performs for vDisks that are local. A value of 0 disables the feature.Min=0, Max=128, Default=4\n\n\n\nuint LogFileBackupCopiesMax: Maximum number of logfile backups. Min=1, Max=50, Default=4\n\n\n\nuint LogFileSizeMax: Maximum size log files canreach in Megabytes. Min=1, Max=50, Default=5\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=4\n\n\n\nSystem.Net.IPAddress ManagementIp: IP address usedfor management communications between Servers. Default=0.0.0.0\n\n\n\nuint MaxBootDevicesAllowed: Maximum number ofDevices allowed to boot simultaneously. Min=1, Max=1000, Default=500\n\n\n\nuint MaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60\n\n\n\nuint MaxQueryConnectionPoolSize: Maximum size ofdatabase connection pool for non-transactional queries. Min=1, Max=32767,Default=1000\n\n\n\nuint MaxTransactionConnectionPoolSize: Maximum sizeof database connection pool for transactional queries. Min=1, Max=32767,Default=1000\n\n\n\nuint MaxTransmissionUnits: Ethernet maximumtransmission unit size for the protocol for use for Server and Device. Requiredthat IoBurstSize/(MaxTransmissionUnits-76)\n<\n=32. Min=502, Max=16426,Default=1506\n\n\n\nbool NonBlockingIoEnabled: Use non-Blocking IO, whenset to true. Default=true\n\n\n\nfloat PowerRating: A strictly relative rating ofthis Server's capabilities when compared to other Servers in the Store(s) itbelongs too; can be used to help tune load balancing. Min=0.1, Max=1000,Default=1\n\n\n\nuint RamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10\n\n\n\nbool RamDiskInvitationType: Either false for Fixed,or true for Variable. Default=false\n\n\n\nSystem.Net.IPAddress RamDiskIpAddress: IP address touse for transferring the RAM Disk. When equal to 0.0.0.0 the server IP is usedwith the first part replaced with 233. Default=0.0.0.0\n\n\n\nuint RamDiskTimeToLive: Time to live for theinvitation packet sent to Devices. Min=1, Max=255, Default=1\n\n\n\nuint RefreshInterval: Interval, in number ofseconds, the server should wait before refreshing settings. If set to 0, unuseddatabase connections are never released. Min=0, Max=32767, Default=300\n\n\n\nuint RemoteConcurrentIoLimit: Maximum concurrent IO transactionsit performs for vDisks that are remote. A value of 0 disables the feature.Min=0, Max=128, Default=4\n\n\n\nuint Role: Read-only Role of the user for this item.100 is Farm Administrator, and 200 is Site Administrator. Default=999\n\n\n\nuint ServerCacheTimeout: Number of seconds to waitbefore considering another Server is down. Min=5, Max=60, Default=8\n\n\n\nstring ServerFqdn: Read-only fully qualified domainname. Default=\"\" Max Length=1024\n\n\n\nGuid Guid or ServerId: Read-only GUID that uniquelyidentifies this Server.\n\n\n\nstring Name or ServerName: Computer name with nospaces. ASCII computer name characters Max Length=21\n\n\n\nGuid SiteId: GUID of the Site this Server is to be amember of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site this Server is tobe a member of. It is not used with SiteId.\n\n\n\nuint ThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs) \n<\n= 1000.Min=1, Max=60, Default=8\n\n\n\nuint UnusedDbConnectionTimeout: Interval, in numberof seconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300\n\n\n\nuint VDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0\n\n\n\nPvsServerStatus\n\n\nRead-Only Fields\n\n\n\nuint DeviceCount: Read-only count of Devices. Default=0\n\n\n\nSystem.Net.IPAddress Ip: Read-only contact IP forthe Server.\n\n\n\nuint Port: Read-only contact port for the Server.\n\n\n\nGuid Guid or ServerId: Read-only GUID of the Server.Can be used with Get Server.\n\n\n\nstring Name or ServerName: Read-only Name of the Server.Can be used with Get Server.\n\n\n\nuint Status: Status of the server, 0 if down, 1 ifup and 2 if unknown. Default=0\n\n\n\nPvsServerStore\n\n\nRead/Write Fields\n\n\n\nstring[] CachePath: Cache path(s) that the Serveruses with the Store. If none are specified the caches will be placed in theStore cachePath. Default=None\n\n\n\nstring Path: Directory path that the Server uses toaccess the Store. Default=\"\" Max Length=255\n\n\n\nRead-Only Fields\n\n\n\nGuid ServerId: GUID of the server that uses theStore. ServerName can be used instead.\n\n\n\nstring ServerName: Name of the server that uses theStore. ServerId can be used instead.\n\n\n\nGuid StoreId: GUID of the Store. StoreName can beused instead.\n\n\n\nstring StoreName: Name of the Store. StoreId can beused instead.\n\n\n\nPvsSite\n\n\nRead/Write Fields\n\n\n\nGuid DefaultCollectionId: GUID of the Collection toplace new Devices into automatically. Not used with defaultCollectionName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring DefaultCollectionName: Name of the Collectionto place new Devices into automatically. Not used with DefaultCollectionId.Default=\"\"\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nGuid DiskUpdateServerId: GUID of the Disk UpdateServer for the Site. Not used with DiskUpdateServerName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring DiskUpdateServerName: Name of the Disk UpdateServer for the Site. Not used with DiskUpdateServerId. Default=\"\"\n\n\n\nbool EnableDiskUpdate: True when Disk Updated isenabled for the Site, false otherwise. Default=false\n\n\n\nuint InventoryFilePollingInterval: The number ofseconds between polls for Disk changes in the Stores. Min=1, Max=600,Default=60\n\n\n\nstring MakPassword: User password used for MAKactivation. Default=\"\" Max Length=64\n\n\n\nstring MakUser: User name used for MAK activation.Default=\"\" Max Length=64\n\n\n\nstring Name or SiteName: Name of the Site. MaxLength=50\n\n\n\nRead-Only Fields\n\n\n\nuint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, and 999 is read-only.Default=999\n\n\n\nGuid Guid or SiteId: Read-only GUID that uniquelyidentifies this Site.\n\n\n\nPvsSiteView\n\n\nRead/Write Fields\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring Name or SiteViewName: Name of the Site View.Max Length=50\n\n\n\nRead-Only Fields\n\n\n\nuint ActiveDeviceCount: Read-only count of activeDevices in this Site View. Default=0\n\n\n\nuint DeviceCount: Read-only count of Devices in thisSite View. Default=0\n\n\n\nuint DeviceWithPVDCount: Read-only count of Deviceswith Personal vDisk in this Site View. Default=0\n\n\n\nuint MakActivateNeededCount: Read-only count ofactive Devices that need MAK activation in this Site View. Default=0\n\n\n\nuint Role: Read-only Role of the user for this item.100 is Farm Administrator, and 200 is Site Administrator. Default=999\n\n\n\nGuid SiteId: GUID of the Site this View is to be amember of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site this View is to bea member of. It is not used with SiteId.\n\n\n\nGuid Guid or SiteViewId: Read-only GUID thatuniquely identifies this Site View.\n\n\n\nPvsStore\n\n\nRead/Write Fields\n\n\n\nstring[] CachePath: Default Cache path(s) that theServers use with this Store. If none are specified the caches will be placed inthe WriteCache subdirectory of the Store path. Default=None\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring Path: Default directory path that the Serversuse to access this Store. Max Length=255\n\n\n\nGuid SiteId: GUID of the Site where Administratorsof that Site can change this Store. Not used for Farm Stores. SiteName can beused instead. Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring SiteName: Name of the Site whereAdministrators of that Site can change this Store. Not used for Farm Stores.SiteId can be used instead. Default=\"\"\n\n\n\nstring Name or StoreName: Name of the Store. MaxLength=50\n\n\n\nRead-Only Fields\n\n\n\nstring PathType: Read-only field indicating if thevdisks are on a server's local hard disk or on a remote share.\n\n\n\nuint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, and 999 is read-only.Default=999\n\n\n\nGuid Guid or StoreId: Read-only GUID that uniquelyidentifies this Store.\n\n\n\nPvsStoreSharedOrServerPath\n\n\nRead-Only Fields\n\n\n\nstring Path: Directory path that the Servers use toaccess this Store.\n\n\n\nGuid StoreId: GUID of the Store.\n\n\n\nstring StoreName: Name of the Store.\n\n\n\nPvsTask\n\n\nRead-Only Fields\n\n\n\nstring Command: Command being processed.Default=\"\" Max Length=50\n\n\n\nstring CommandType: Type of the command. Values are:Add, Delete, Get, Info, Run, RunWithReturn, Set and SetList.Default=\"\" Max Length=13\n\n\n\nDateTime ExpirationTime: Time the task record may beremoved from the database if the task does not complete. Has the date and timewithout milliseconds.\n\n\n\nuint Handle: Handle to a running function.\n\n\n\nSystem.Net.IPAddress Ip: IP Address of the remotehost.\n\n\n\nstring MapiException: Exception result in XMLformat. Default=\"\"\n\n\n\nuint Port: Port number of the remote service.\n\n\n\nstring Results: Result in XML format.Default=\"\"\n\n\n\nstring ServerFqdn: Qualified name of the server.Default=\"\" Max Length=1024\n\n\n\nGuid SiteId: GUID of the Site that this Task isbeing processed in. Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring SiteName: Name of the Site that that thisTask is being processed in.\n\n\n\nDateTime StartTime: Time the task was started. Hasthe date and time without milliseconds.\n\n\n\nuint State: State of the Task. Values are: 0(Processing), 1 (Cancelled), and 2 (Complete). Min=0, Max=2\n\n\n\nuint TaskId: Unique ID of the task.\n\n\n\nPvsUndefinedDisk\n\n\nRead-Only Fields\n\n\n\nbool VHDX: If VHDX is true, the format of the imageis VHDX. Otherwise it is VHD. Default=false\n\n\n\nstring Name: Name of the disk file without theextension.\n\n\n\nuint Status: Status of the disk file. Values are: 0(Valid), 1 (Missing Properties File), 2 (Access Denied), 3 (Access Denied andMissing Properties File), 4 (Invalid Disk File), 5 (Manifest Missing orInvalid), 6 (Both VHD and VHDX)\n\n\n\nPvsUpdateTask\n\n\nRead/Write Fields\n\n\n\nuint[] Date: Days of the month. Numbers from 1-31are the only valid values. This is used with Monthly Date recurrence.Default=\"\" Max Length=83\n\n\n\nuint DayMask: Days selected values. 1 = Monday, 2 =Tuesday, 4 = Wednesday, 8 = Thursday, 16 = Friday, 32 = Saturday, 64 = Sunday,128 = Day. Default=0. This is used with Weekly and Monthly Type recurrence.Min=1, Max=255, Default=4\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring Domain: Domain to add the Disk UpdateDevice(s) to. If not included, the first Domain Controller found on the Serveris used. Default=\"\" Max Length=255\n\n\n\nbool Enabled: True when it will be processed, falseotherwise. Default=true\n\n\n\nstring EsdType: Esd to use. Valid values are SCCM orWSUS. If no value, a custom script is run on the client. Default=\"\"Max Length=50\n\n\n\nuint Hour: The hour of the day to perform the task.Min=0, Max=23, Default=0\n\n\n\nuint Minute: The minute of the hour to perform thetask. Min=0, Max=59, Default=0\n\n\n\nuint MonthlyOffset: When to happen monthly. 0 =None, 1 = First, 2 = Second, 3 = Third, 4 = Forth, 5 = Last. This is used withMonthly Type recurrence. Min=0, Max=5, Default=3\n\n\n\nstring OrganizationUnit: Organizational Unit to addthe Disk Update Device(s) to. This parameter is optional. If it is notspecified, the device is added to the built in Computers container. Child OU'sshould be delimited with forward slashes, e.g. \"ParentOU/ChildOU\".Special characters in an OU name, such as '\"', '#', '+', ',', ';', '>','=', must be escaped with a backslash. For example, an OU called\"commaIn,TheMiddle\" must be specified as\"commaIn\\,TheMiddle\". The old syntax of delimiting child OU's with acomma is still supported, but deprecated. Note that in this case, the child OUcomes first, e.g. \"ChildOU,ParentOU\". Default=\"\" MaxLength=255\n\n\n\nuint PostUpdateApprove: Access to place the versionin after the update has occurred. 0 = Production, 1 = Test, 2 = Maintenance.Min=0, Max=2, Default=0\n\n\n\nstring PostUpdateScript: Script file to run afterthe update finishes. Default=\"\" Max Length=255\n\n\n\nstring PostVmScript: Script file to run after the VMis unloaded. Default=\"\" Max Length=255\n\n\n\nstring PreUpdateScript: Script file to run beforethe update starts. Default=\"\" Max Length=255\n\n\n\nstring PreVmScript: Script file to run before the VMis loaded. Default=\"\" Max Length=255\n\n\n\nuint Recurrence: The update will reoccur on thisschedule. 0 = None, 1 = Daily, 2 = Every Weekday, 3 = Weekly, 4 = Monthly Date,5 = Monthly Type. Min=0, Max=5, Default=0\n\n\n\nstring Name or UpdateTaskName: Name of the UpdateTask. It is unique within the Site. Max Length=50\n\n\n\nRead-Only Fields\n\n\n\nGuid SiteId: GUID of the Site that this Update Taskis a member of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site that this UpdateTask is a member of. It is not used with SiteId.\n\n\n\nGuid Guid or UpdateTaskId: Read-only GUID thatuniquely identifies this Update Task.\n\n\n\nPvsVersion\n\n\nRead-Only Fields\n\n\n\nstring DbEdition: Edition of the database. If'Express Edition', monitor dbSize.\n\n\n\nuint DbSize: Size of the database in MB. Monitorthis value if the edition is 'Express Edition' and this value is close toreaching the 4000 MB maximum. Default=0\n\n\n\nuint DbVersion: Version of the database schema as anumber. Default=0\n\n\n\nstring MapiVersion: Version of the system inmajor.minor.point.build format.\n\n\n\nuint MapiVersionNumber: Internal version number ofthe system. It is a number that is increaed by 100 for each major and minorrelease. Point releases are the numbers between each 100. Value is 0 when thesystem does not support MapiVersionNumber. Default=0\n\n\n\nstring SdkVersion: Version of the SDK inmajor.minor.build format.\n\n\n\nuint Type: Type of system. Values are 0 (Normal), 1(OROM), and 2 (Secure). Default=0\n\n\n\nPvsVirtualHostingPool\n\n\nRead/Write Fields\n\n\n\nstring Datacenter: Datacenter of the Virtual HostingPool. Default=\"\" Max Length=250\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring Password: Password to use when logging intothe Server.\n\n\n\nuint Port: Port of the Host Server. Min=80,Max=65534, Default=80\n\n\n\nbool PrepopulateEnabled: Enable prepopulate when setto true Default=false\n\n\n\nstring Server: Name or IP of the Host Server. MaxLength=255\n\n\n\nuint ShutdownTimeout: Timeout for shutdown. Min=2,Max=30, Default=10\n\n\n\nuint Type: Type of the Virtual Hosting Pool. 0 =Citrix XenServer, 1 = Microsoft SCVMM/Hyper-V, 2 = VMWare vSphere/ESX. Min=0,Max=2, Default=0\n\n\n\nuint UpdateLimit: Number of updates at the sametime. Min=2, Max=1000, Default=1000\n\n\n\nuint UpdateTimeout: Timeout for updates. Min=2,Max=240, Default=60\n\n\n\nstring UserName: Name to use when logging into theServer.\n\n\n\nstring Name or VirtualHostingPoolName: Name of theVirtual Hosting Pool. It is unique within the Site. Max Length=50\n\n\n\nGuid XdHostingUnitUuid: UUID of XenDesktop HostingUnit Default=00000000-0000-0000-0000-000000000000\n\n\n\nbool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false\n\n\n\nGuid XsPvsSiteUuid: UUID of XenServerPVS_site  Default=00000000-0000-0000-0000-000000000000\n\n\n\nRead-Only Fields\n\n\n\nGuid SiteId: GUID of the Site that this VirtualHosting Pool is a member of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site that this VirtualHosting Pool is a member of. It is not used with SiteId.\n\n\n\nGuid Guid or VirtualHostingPoolId: Read-only GUIDthat uniquely identifies this Virtual Hosting Pool.\n\n\n\nPvsXDSite\n\n\nRead/Write Field\n\n\n\nstring[] ConfigServices: XenDesktop Serveraddresses. Max Length=2000\n\n\n\nRead-Only Field\n\n\n\nGuid Guid or XdSiteId: GUID of the XenDesktop Site.\n\n\n\nCmdlets\n\n\nAdd-PvsDeviceToDomain\n\n\nAdd a Device, all Devices in a Collection or View toa Domain.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device to Addto the Domain.\n\n\n\nstring[] Name or DeviceName: Name of the Device toAdd to the Domain.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toAdd to the Domain.\n\n\n\nGuid[] CollectionId: GUID of the Collection to Addall Devices to the Domain.\n\n\n\nGuid[] SiteViewId: GUID of the Site View to Add allDevices to the Domain.\n\n\n\nGuid[] FarmViewId: GUID of the Farm View to Add allDevices to the Domain.\n\n\n\nstring[] FarmViewName: Name of the Farm View to Addall Devices to the Domain.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring[] CollectionName: Name of the Collection toAdd all Devices to the Domain.\n\n\n\nstring[] SiteViewName: Name of the Site View to Addall Devices to the Domain.\n\n\n\nOptional\n\n\n\nstring[] Domain: Domain to add the Device(s) to. Ifnot included, the first Domain Controller found on the Server is used.\n\n\n\nstring[] OrganizationUnit: Organizational Unit toadd the Device(s) to. This parameter is optional. If it is not specified, thedevice is added to the built in Computers container. Child OU's should bedelimited with forward slashes, e.g. \"ParentOU/ChildOU\". Specialcharacters in an OU name, such as '\"', '#', '+', ',', ';', '>', '=',must be escaped with a backslash. For example, an OU called\"commaIn,TheMiddle\" must be specified as\"commaIn\\,TheMiddle\". The old syntax of delimiting child OU's with acomma is still supported, but deprecated. Note that in this case, the child OUcomes first, e.g. \"ChildOU,ParentOU\".\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId, CollectionId, SiteViewId or FarmViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Add-PvsDeviceToDomain for Name with Domain and OrganizationUnit\n\n\nAdd-PvsDeviceToDomain -Name theDevice -DomaintheDomain -OrganizationUnit theOrganizationUnit\n\n\n\nEXAMPLE 2: Add-PvsDeviceToDomain for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theAdd-PvsDeviceToDomain.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid |Add-PvsDeviceToDomain -Domain theDomain -OrganizationUnit theOrganizationUnit\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Add-PvsDeviceToDomain for FarmViewName with Domain andOrganizationUnit\n\n\nAdd-PvsDeviceToDomain -FarmViewName theFarmView-Domain theDomain -OrganizationUnit theOrganizationUnit\n\n\n\nEXAMPLE 4: Add-PvsDeviceToDomain for PvsFarmView Using Pipe\n\n\nThe Get-PvsFarmView output is piped to theAdd-PvsDeviceToDomain.\n\n\n\nGet-PvsFarmView -Name theFarmView -Fields Guid |Add-PvsDeviceToDomain -Domain theDomain -OrganizationUnit theOrganizationUnit\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 5: Add-PvsDeviceToDomain for CollectionName with Domain andOrganizationUnit\n\n\nAdd-PvsDeviceToDomain -CollectionName theCollection-SiteName theSite -Domain theDomain -OrganizationUnit theOrganizationUnit\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 6: Add-PvsDeviceToDomain for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theAdd-PvsDeviceToDomain.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Add-PvsDeviceToDomain -Domain theDomain-OrganizationUnit theOrganizationUnit\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 7: Add-PvsDeviceToDomain for SiteViewName with Domain andOrganizationUnit\n\n\nAdd-PvsDeviceToDomain -SiteViewName theSiteView-SiteName theSite -Domain theDomain -OrganizationUnit theOrganizationUnit\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 8: Add-PvsDeviceToDomain for PvsSiteView Using Pipe\n\n\nThe Get-PvsSiteView output is piped to theAdd-PvsDeviceToDomain.\n\n\n\nGet-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Add-PvsDeviceToDomain -Domain theDomain -OrganizationUnittheOrganizationUnit\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nAdd-PvsDeviceToView\n\n\nMove a Device to a Collection. Personal vDiskDevices cannot be moved to a Collection in another Site.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device to Add.\n\n\n\nstring[] Name or DeviceName: Name of the Device toAdd.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toAdd.\n\n\n\nOne of these required\n\n\n\nGuid[] SiteViewId: GUID of the Site View to Add theDevice to.\n\n\n\nGuid[] FarmViewId: GUID of the Farm View to Add theDevice to.\n\n\n\nstring[] FarmViewName: Name of the Farm View to Addthe Device to.\n\n\n\nor this required ; resolution\n\n\n\nstring[] SiteViewName: Name of the Site View to Addthe Device to.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId, SiteViewId or FarmViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Add-PvsDeviceToView for PvsDevice to PvsFarmView\n\n\nAdd-PvsDeviceToView -Name theDevice -PvsFarmViewNamethePvsFarmView\n\n\n\nEXAMPLE 2: Add-PvsDeviceToView for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theAdd-PvsDeviceToView.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid |Add-PvsDeviceToView -PvsFarmViewName thePvsFarmView\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Add-PvsDeviceToView for PvsFarmView Using Pipe\n\n\nThe Get-PvsFarmView output is piped to theAdd-PvsDeviceToView.\n\n\n\nGet-PvsFarmView -Name theFarmView -Fields Guid |Add-PvsDeviceToView -Name theDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 4: Add-PvsDeviceToView for PvsDevice to PvsSiteView\n\n\nAdd-PvsDeviceToView -Name theDevice -SiteViewNametheSiteView -SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 5: Add-PvsDeviceToView for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theAdd-PvsDeviceToView.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid |Add-PvsDeviceToView -SiteViewName theSiteView -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 6: Add-PvsDeviceToView for PvsSiteView Using Pipe\n\n\nThe Get-PvsSiteView output is piped to theAdd-PvsDeviceToView.\n\n\n\nGet-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Add-PvsDeviceToView -Name theDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nAdd-PvsDiskLocatorToDevice\n\n\nAssign a Disk Locator to a Device, a Collection orView.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to Assign.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Assign.\n\n\n\nOne of these required\n\n\n\nGuid[] DeviceId: GUID of the Device to Assign a DiskLocator.\n\n\n\nstring[] DeviceName: Name of the Device to Assign aDisk Locator.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toAssign a Disk Locator.\n\n\n\nGuid[] CollectionId: GUID of the Collection toAssign a Disk Locator or Locators to all Devices.\n\n\n\nGuid[] SiteViewId: GUID of the Site View to Assign aDisk Locator to all Devices.\n\n\n\nGuid[] FarmViewId: GUID of the Farm View to Assign aDisk Locator to all Devices.\n\n\n\nstring[] FarmViewName: Name of the Farm View toAssign a Disk Locator to all Devices.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring[] CollectionName: Name of the Collection toAssign a Disk Locator or Locators to all Devices.\n\n\n\nstring[] SiteViewName: Name of the Site View toAssign a Disk Locator to all Devices.\n\n\n\nOptional\n\n\n\nSwitchParameter RemoveExisting: If -RemoveExistingis specified, remove the existing Disk Locators before assigning the new one.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId, DeviceId, CollectionId, SiteViewId orFarmViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Add-PvsDiskLocatorToDevice for PvsDiskLocator to PvsDevice\n\n\nAdd-PvsDiskLocatorToDevice -Name theDiskLocator-DeviceName theDevice -SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Add-PvsDiskLocatorToDevice for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theAdd-PvsDiskLocatorToDevice.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Add-PvsDiskLocatorToDevice-DeviceName theDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 3: Add-PvsDiskLocatorToDevice for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theAdd-PvsDiskLocatorToDevice.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid |Add-PvsDiskLocatorToDevice -Name theDiskLocator -SiteName theSite -StoreNametheStoreName\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 4: Add-PvsDiskLocatorToDevice for PvsDiskLocator to PvsCollection\n\n\nAdd-PvsDiskLocatorToDevice -Name theDiskLocator-CollectionName theCollection -SiteName theSite -StoreName theStore\n\n\n\nEXAMPLE 5: Add-PvsDiskLocatorToDevice for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theAdd-PvsDiskLocatorToDevice.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Add-PvsDiskLocatorToDevice-CollectionName theCollection -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 6: Add-PvsDiskLocatorToDevice for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theAdd-PvsDiskLocatorToDevice.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Add-PvsDiskLocatorToDevice -Name theDiskLocator-SiteName theSite -StoreName theStoreName\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 7: Add-PvsDiskLocatorToDevice for PvsDiskLocator to PvsFarmView\n\n\nAdd-PvsDiskLocatorToDevice -Name theDiskLocator-FarmViewName theFarmView -SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 8: Add-PvsDiskLocatorToDevice for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theAdd-PvsDiskLocatorToDevice.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Add-PvsDiskLocatorToDevice-FarmViewName theFarmView\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 9: Add-PvsDiskLocatorToDevice for PvsFarmView Using Pipe\n\n\nThe Get-PvsFarmView output is piped to theAdd-PvsDiskLocatorToDevice.\n\n\n\nGet-PvsFarmView -Name theFarmView -Fields Guid |Add-PvsDiskLocatorToDevice -Name theDiskLocator -SiteName theSite -StoreName theStoreName\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 10: Add-PvsDiskLocatorToDevice for PvsDiskLocator to PvsSiteView\n\n\nAdd-PvsDiskLocatorToDevice -Name theDiskLocator-SiteViewName theSiteView -SiteName theSite -StoreName theStore\n\n\n\nEXAMPLE 11: Add-PvsDiskLocatorToDevice for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theAdd-PvsDiskLocatorToDevice.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Add-PvsDiskLocatorToDevice-SiteViewName theSiteView -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 12: Add-PvsDiskLocatorToDevice for PvsSiteView Using Pipe\n\n\nThe Get-PvsSiteView output is piped to theAdd-PvsDiskLocatorToDevice.\n\n\n\nGet-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Add-PvsDiskLocatorToDevice -Name theDiskLocator -SiteNametheSite -StoreName theStoreName\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nAdd-PvsDiskToUpdateTask\n\n\nAdd a Disk to an Update Task.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to Assign.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Assign.\n\n\n\nOne of these required\n\n\n\nGuid[] UpdateTaskId: GUID of the Update Task toAssign a Disk.\n\n\n\nstring[] UpdateTaskName: Name of the Update Task toAssign a Disk.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId or UpdateTaskId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Add-PvsDiskToUpdateTask for PvsDiskLocator to PvsUpdateTask\n\n\nAdd-PvsDiskToUpdateTask -Name theDiskLocator-UpdateTaskName theUpdateTask -SiteName theSite -StoreName theStore\n\n\n\nUpdateTaskId can be used instead of UpdateTaskNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Add-PvsDiskToUpdateTask for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theAdd-PvsDiskToUpdateTask.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Add-PvsDiskToUpdateTask-UpdateTaskName theUpdateTask -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Add-PvsDiskToUpdateTask for PvsUpdateTask Using Pipe\n\n\nThe Get-PvsUpdateTask output is piped to theAdd-PvsDiskToUpdateTask.\n\n\n\nGet-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Fields Guid | Add-PvsDiskToUpdateTask -Name theDiskLocator -SiteNametheSite -StoreName theStore\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nAdd-PvsDiskVersion\n\n\nAdd one or more new Versions to a Disk. A manifestfile for the new Disk Version(s) must exist in the Store.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator File to Add the new Disk Version(s) to.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Add the new Disk Version(s) to.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Add-PvsDiskVersion for Name\n\n\nAdd-PvsDiskVersion -Name theDiskLocator -SiteNametheSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Add-PvsDiskVersion for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theAdd-PvsDiskVersion.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Add-PvsDiskVersion\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nClear-PvsConnection\n\n\nCloses the existing SoapServer connection, and if-Persist is specified the connection settings in the registry are removed.\n\n\n\nOptional\n\n\n\nSwitchParameter Persist: If -Persist is specified,clear the connection settings in the registry.\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Clear-PvsConnection\n\n\nClear-PvsConnection\n\n\n\nEXAMPLE 2: Clear-PvsConnection with Persist\n\n\nClear-PvsConnection -Persist\n\n\n\nClear-PvsTask\n\n\nClear a single or all completed or cancelled Tasksin a Site or the whole Farm.\n\n\n\nOne of these optional\n\n\n\nuint TaskId: Id of the Task to Clear.\n\n\n\nGuid[] SiteId: Site Id of the Tasks to Clear.\n\n\n\nstring[] SiteName: Site Name of the Tasks to Clear.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nTaskId or SiteId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Clear-PvsTask for TaskId\n\n\nClear-PvsTask -TaskId 101\n\n\n\nEXAMPLE 2: Clear-PvsTask for PvsTask Using Pipe\n\n\nThe Get-PvsTask output is piped to theClear-PvsTask.\n\n\n\nGet-PvsTask -TaskId 101 -Fields -TaskId |Clear-PvsTask\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Clear-PvsTask for SiteName\n\n\nClear-PvsTask -SiteName theSite\n\n\n\nEXAMPLE 4: Clear-PvsTask for PvsTask Using Pipe\n\n\nThe Get-PvsTask output is piped to theClear-PvsTask.\n\n\n\nGet-PvsTask -SiteName theSite -Fields -SiteId |Clear-PvsTask\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nCopy-PvsDeviceProperties\n\n\nCopy properties of one Device to a Device, all theDevices in a Collection, Site View or Farm View.\n\n\n\nOne of these required\n\n\n\nGuid DeviceIdFrom: GUID of the Device to Copy from.\n\n\n\nstring DeviceNameFrom: Name of the Device to Copyfrom.\n\n\n\nPvsPhysicalAddress DeviceMacFrom: Mac of the Deviceto Copy from.\n\n\n\nOne of these required\n\n\n\nGuid Guid or DeviceId: GUID of the Device to Copyto.\n\n\n\nstring Name or DeviceName: Name of the Device toCopy to.\n\n\n\nPvsPhysicalAddress DeviceMac: MAC of the Device toCopy to.\n\n\n\nGuid CollectionId: GUID of the Collection to Copyto.\n\n\n\nGuid SiteViewId: GUID of the Site View to Copy to.\n\n\n\nGuid FarmViewId: GUID of the Farm View to Copy to.\n\n\n\nstring FarmViewName: Name of the Farm View to Copyto.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring CollectionName: Name of the Collection toCopy to.\n\n\n\nstring SiteViewName: Name of the Site View to Copyto.\n\n\n\nOptional\n\n\n\nuint[] Properties: If not specified, all are copied.Properties to copy. Values are: 1 (Description), 2 (Class), 3 (Port), 4(Disabled), 5 (Boot Behavior), 6 (Disk Assignment), 7 (Personality), 8(Printer), 9 (Type), 10 (Authentication) and 11 (Logging).\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId, CollectionId, SiteViewId or FarmViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Copy-PvsDeviceProperties for Name\n\n\nCopy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -Name theDeviceTo\n\n\n\nEXAMPLE 2: Copy-PvsDeviceProperties for Name with Properties\n\n\nCopy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -Name theDeviceTo -Properties 2, 3\n\n\n\nEXAMPLE 3: Copy-PvsDeviceProperties for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theCopy-PvsDeviceProperties.\n\n\n\nGet-PvsDevice -Name theDeviceTo -Fields Guid |Copy-PvsDeviceProperties -DeviceNameFrom theDeviceFrom -Properties 2, 3\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 4: Copy-PvsDeviceProperties for Name\n\n\nCopy-PvsDeviceProperties -DeviceMacFrom\"00-11-22-33-44-55\" -Name theDeviceTo\n\n\n\nEXAMPLE 5: Copy-PvsDeviceProperties for Name with Properties\n\n\nCopy-PvsDeviceProperties -DeviceMacFrom\"00-11-22-33-44-55\" -Name theDeviceTo -Properties 2, 3\n\n\n\nEXAMPLE 6: Copy-PvsDeviceProperties for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theCopy-PvsDeviceProperties.\n\n\n\nGet-PvsDevice -Name theDeviceTo -Fields Guid |Copy-PvsDeviceProperties -DeviceMacFrom \"00-11-22-33-44-55\"-Properties 2, 3\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 7: Copy-PvsDeviceProperties for FarmViewName\n\n\nCopy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -FarmViewName theFarmViewNameTo\n\n\n\nEXAMPLE 8: Copy-PvsDeviceProperties for FarmViewName with Properties\n\n\nCopy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -FarmViewName theFarmViewNameTo -Properties 2, 3\n\n\n\nEXAMPLE 9: Copy-PvsDeviceProperties for PvsFarmView Using Pipe\n\n\nThe Get-PvsFarmView output is piped to theCopy-PvsDeviceProperties.\n\n\n\nGet-PvsFarmView -Name theFarmViewTo -Fields Guid |Copy-PvsDeviceProperties -DeviceNameFrom theDeviceFrom -Properties 2, 3\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 10: Copy-PvsDeviceProperties for CollectionName\n\n\nCopy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -CollectionName theCollectionNameTo -SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 11: Copy-PvsDeviceProperties for CollectionName with Properties\n\n\nCopy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -CollectionName theCollectionNameTo -SiteName theSite -Properties2, 3\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 12: Copy-PvsDeviceProperties for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theCopy-PvsDeviceProperties.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Copy-PvsDeviceProperties -DeviceNameFrom theDeviceFrom-Properties 2, 3\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 13: Copy-PvsDeviceProperties for SiteViewName\n\n\nCopy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -SiteViewName theSiteViewNameTo -SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 14: Copy-PvsDeviceProperties for SiteViewName with Properties\n\n\nCopy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -SiteViewName theSiteViewNameTo -SiteName theSite -Properties 2,3\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 15: Copy-PvsDeviceProperties for PvsSiteView Using Pipe\n\n\nThe Get-PvsSiteView output is piped to theCopy-PvsDeviceProperties.\n\n\n\nGet-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Copy-PvsDeviceProperties -DeviceNameFrom theDeviceFrom-Properties 2, 3\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nCopy-PvsDiskProperties\n\n\nCopy properties of one Disk to a Disk.\n\n\n\nThis required\n\n\n\nGuid DiskLocatorIdFrom: GUID of the Disk Locator toCopy from.\n\n\n\nThis required\n\n\n\nGuid Guid or DiskLocatorId: GUID of the Disk Locatorto Copy to.\n\n\n\nOptional\n\n\n\nuint[] Properties: If not specified, all are copied.Properties to copy. Values are: 1 (Description), 2 (Class), 3 (Type), 4 (DiskMode), 5 (Auto Update), 6 (HA), 7 (Active Directory), 8 (Printer), 10(Version), 11 (Date), 12 (Author), 13 (Title), 14 (Company), 15 (InternalFilename), 16 (Original Filename), 17 (Hardware Target), 18 (Menu Text), 19(Enabled), 20 (Server), and 21 (Store).\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Copy-PvsDiskProperties for Guid\n\n\nCopy-PvsDiskProperties -DiskLocatorIdFrom\"66302103-2991-4e42-ba58-a1614cec070c\" -Guid\"f5eb3de9-bcf4-416f-a289-6a9472c13f8b\"\n\n\n\nEXAMPLE 2: Copy-PvsDiskProperties for Guid with Properties\n\n\nCopy-PvsDiskProperties -DiskLocatorIdFrom\"66302103-2991-4e42-ba58-a1614cec070c\" -Guid\"f5eb3de9-bcf4-416f-a289-6a9472c13f8b\" -Properties 2, 3\n\n\n\nEXAMPLE 3: Copy-PvsDiskProperties for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theCopy-PvsDiskProperties.\n\n\n\nGet-PvsDiskLocator -Guid\"f5eb3de9-bcf4-416f-a289-6a9472c13f8b\" -Fields Guid |Copy-PvsDiskProperties -DiskLocatorIdFrom\"66302103-2991-4e42-ba58-a1614cec070c\" -Properties 2, 3\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nCopy-PvsServerProperties\n\n\nCopy properties of one Server to a Server.\n\n\n\nOne of these required\n\n\n\nGuid ServerIdFrom: GUID of the Server to Copy from.\n\n\n\nstring ServerNameFrom: Name of the Server to Copyfrom.\n\n\n\nOne of these required\n\n\n\nGuid Guid or ServerId: GUID of the Server to Copyto.\n\n\n\nstring Name or ServerName: Name of the Server toCopy to.\n\n\n\nOptional\n\n\n\nuint[] Properties: If not specified, all are copied.Properties to copy. Values are: 1 (Configuration), 2 (Port), 4 (ActiveDirectory), 5 (Advanced Server), 6 (Advanced Network), 7 (Advanced Pacing), 8(Advanced Device) and 9 (Logging).\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Copy-PvsDiskProperties for Name\n\n\nCopy-PvsDiskProperties -ServerNameFrom theServerFrom-Name theServerTo\n\n\n\nEXAMPLE 2: Copy-PvsDiskProperties for Name with Properties\n\n\nCopy-PvsDiskProperties -ServerNameFrom theServerFrom-Name theServerTo -Properties 2, 3\n\n\n\nEXAMPLE 3: Copy-PvsDiskProperties for PvsServer Using Pipe\n\n\nThe Get-PvsServer output is piped to theCopy-PvsDiskProperties.\n\n\n\nGet-PvsServer -Name theServerTo -Fields Guid |Copy-PvsDiskProperties -ServerNameFrom theServerFrom -Properties 2, 3\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nDisable-PvsDeviceDiskLocator\n\n\nDisable a Device's DiskLocator.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device toDisable the DiskLocator for.\n\n\n\nstring[] Name or DeviceName: Name of the Device toDisable the DiskLocator for.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toDisable the DiskLocator for.\n\n\n\nThis required\n\n\n\nGuid[] DiskLocatorId: GUID of the DiskLocator toDisable for the Device.\n\n\n\nor this required ; resolution\n\n\n\nstring[] DiskLocatorName: Name of the DiskLocatorFile to Disable for the Device.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the members belowcan be used as the Object parameter or from a pileline:\n\n\n\nDeviceId or DiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Disable a PvsDevice PvsDiskLocator\n\n\nThis example disables the PvsDiskLocator namedtheDiskLocator for the PvsDevice named theDevice.\n\n\n\nDisable-PvsDeviceDiskLocator -Name theDevice-DiskLocatorName theDiskLocator -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the StoreName or StoreId are not also needed.\n\n\n\nDismount-PvsDisk\n\n\nNo longer Map the Disk.\n\n\n\nEXAMPLE 1: Dismount-PvsDisk\n\n\nDismount-PvsDisk\n\n\n\nEnable-PvsDeviceDiskLocator\n\n\nEnable a Device's DiskLocator. If the DiskLocator isDisabled, that overrides the Device DiskLocator setting.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device toEnable the DiskLocator for.\n\n\n\nstring[] Name or DeviceName: Name of the Device toEnable the DiskLocator for.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toEnable the DiskLocator for.\n\n\n\nThis required\n\n\n\nGuid[] DiskLocatorId: GUID of the DiskLocator toEnable for the Device.\n\n\n\nor this required ; resolution\n\n\n\nstring[] DiskLocatorName: Name of the DiskLocator toEnable for the Device.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId or DiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Enable a PvsDevice PvsDiskLocator\n\n\nThis example enables the PvsDiskLocator namedtheDiskLocator for the PvsDevice named theDevice.\n\n\n\nEnable-PvsDeviceDiskLocator -Name theDevice-DiskLocatorName theDiskLocator -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the StoreName or StoreId are not also needed.\n\n\n\nExport-PvsAuditTrail\n\n\nArchive the information in the Audit Trail up to acertain date to a file. When finished, the information archived will be removedfrom the Audit Trail.\n\n\n\nThis required\n\n\n\nstring[] FileName: Name of the file to archive theAudit Trail to. This must be a full file path name.\n\n\n\nOptional\n\n\n\nDateTime EndDate: Last date of information toArchive. If not entered, all information is Archived. Uses only the date.\n\n\n\nSwitchParameter NoPurgeData: If -NoPurgeData isspecified, the information archived will not be removed from the Audit Trail.\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Export-AuditTrail for PvsFarm\n\n\nExport-AuditTrail -Name\"C:\\export\\theFileName\"\n\n\n\nEXAMPLE 2: Export-AuditTrail for PvsFarm with EndDate\n\n\nExport-AuditTrail-EndDate  \"01/01/2015\" -Name\"C:\\export\\theFileName\"\n\n\n\nEXAMPLE 3: Export-AuditTrail for PvsFarm with EndDate and NoPurgeData\n\n\nExport-AuditTrail-EndDate  \"01/01/2015\" -NoPurgeData -Name\"C:\\export\\theFileName\"\n\n\n\nExport-PvsDisk\n\n\nExport the disk stack to a manifest file.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator that identifies the disk to export.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator that identifies the disk to export.\n\n\n\nOptional\n\n\n\nuint Version: Version to use as the start of theexport. The export will include all versions starting with this to the highestone.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nEXAMPLE 1: Export-PvsDisk for Name\n\n\nExport-PvsDisk -Name theDiskLocator -SiteNametheSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Export-PvsDisk for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theExport-PvsDisk.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Export-PvsDisk\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 3: Export-PvsDisk for Name with Version\n\n\nExport-PvsDisk -Name theDiskLocator -SiteNametheSite -StoreName theStore -Version 4\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 4: Export-PvsDisk for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theExport-PvsDisk.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Export-PvsDisk -Version 4\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nExport-PvsOemLicenses\n\n\nOem Only: Export the Oem Licenses for the Devices tothe fileName specified.\n\n\n\nThis required\n\n\n\nstring FileName: Name of the file to export the OemLicenses to. This must be a full file path name.\n\n\n\nOne of these required\n\n\n\nGuid Guid or DeviceId: GUID of the Device to ExportOem Licenses to the fileName specified.\n\n\n\nstring Name or DeviceName: Name of the Device toExport Oem Licenses to the fileName specified.\n\n\n\nPvsPhysicalAddress DeviceMac: MAC of the Device toExport Oem Licenses to the fileName specified.\n\n\n\nGuid CollectionId: GUID of the Collection to Exportall Device Oem Licenses to the fileName specified.\n\n\n\nGuid SiteViewId: GUID of the Site View to Export allDevice Oem Licenses to the fileName specified.\n\n\n\nGuid FarmViewId: GUID of the Farm View to Export allDevice Oem Licenses to the fileName specified.\n\n\n\nstring FarmViewName: Name of the Farm View to Exportall Device Oem Licenses to the fileName specified.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring CollectionName: Name of the Collection toExport all Device Oem Licenses to the fileName specified.\n\n\n\nstring SiteViewName: Name of the Site View to Exportall Device Oem Licenses to the fileName specified.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId, CollectionId, SiteViewId or FarmViewId\n\n\n\nEXAMPLE 1: Export-PvsOemLicenses for Name\n\n\nExport-PvsOemLicenses -Name theDevice -FileName\"C:\\export\\theFileName\"\n\n\n\nEXAMPLE 2: Export-PvsOemLicenses for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theExport-PvsOemLicenses.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid |Export-PvsOemLicenses -FileName \"C:\\export\\theFileName\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Export-PvsOemLicenses for DeviceMac\n\n\nExport-PvsOemLicenses -DeviceMac\"00-11-22-33-44-55\" -FileName \"C:\\export\\theFileName\"\n\n\n\nEXAMPLE 4: Export-PvsOemLicenses for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theExport-PvsOemLicenses.\n\n\n\nGet-PvsDevice -DeviceMac\"00-11-22-33-44-55\" -Fields Guid | Export-PvsOemLicenses -FileName\"C:\\export\\theFileName\"\n\n\n\nThe -Fields parameter with only the needed fields specifiedmakes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 5: Export-PvsOemLicenses for FarmViewName\n\n\nExport-PvsOemLicenses -FarmViewName theFarmView-FileName \"C:\\export\\theFileName\"\n\n\n\nEXAMPLE 6: Export-PvsOemLicenses for PvsFarmView Using Pipe\n\n\nThe Get-PvsFarmView output is piped to theExport-PvsOemLicenses.\n\n\n\nGet-PvsFarmView -Name theFarmView -Fields Guid |Export-PvsOemLicenses -FileName \"C:\\export\\theFileName\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 7: Export-PvsOemLicenses for CollectionName\n\n\nExport-PvsOemLicenses -CollectionName theCollection-SiteName theSite -FileName \"C:\\export\\theFileName\"\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 8: Export-PvsOemLicenses for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theExport-PvsOemLicenses.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Export-PvsOemLicenses -FileName\"C:\\export\\theFileName\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 9: Export-PvsOemLicenses for SiteViewName\n\n\nExport-PvsOemLicenses -SiteViewName theSiteView-SiteName theSite -FileName \"C:\\export\\theFileName\"\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 10: Export-PvsOemLicenses for PvsSiteView Using Pipe\n\n\nThe Get-PvsSiteView output is piped to theExport-PvsOemLicenses.\n\n\n\nGet-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Export-PvsOemLicenses -FileName\"C:\\export\\theFileName\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nGet-PvsADAccount\n\n\nReturn a PvsAdAccount object if the named DeviceAccount in the domain is found.\n\n\n\nThis required\n\n\n\nstring Domain: Domain the account is a member of.\n\n\n\nThis required\n\n\n\nstring Name: Name of the Device for the account.\n\n\n\nPvsADAccount: If successful, the PvsADAccount objectis returned.\n\n\n\nEXAMPLE 1: Get PvsADAccount\n\n\nGet the PvsADAccount in the Domain named theDomainfor the Device named theDevice.\n\n\n\nGet-PvsADAccount -Domain theDomain -Name theDevice\n\n\n\nGet-PvsAuditActionParameter\n\n\nGet the Parameters of an Audit Action.\n\n\n\nThis required\n\n\n\nGuid[] AuditActionId: GUID of the Audit Action toGet Parameters for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nAuditActionId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nName or AuditParameterName: Name of the parameter.Max Length=50\n\n\n\nValue: Value of the parameter. Max Length=1000\n\n\n\nPvsAuditActionParameter[]: If successful, thePvsAuditActionParameter object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsAuditActionParameter\n\n\nGet all PvsAuditActionParameter for theAuditActionId e8baa554-7c2d-49e5-9f6b-e0bc46179fc7.\n\n\n\nGet-PvsAuditActionParameter -AuditActionId\"e8baa554-7c2d-49e5-9f6b-e0bc46179fc7\"\n\n\n\nEXAMPLE 2: Get PvsAuditActionParameter for Multiple AuditActionId\n\n\nGet all PvsAuditActionParameter for theAuditActionId e8baa554-7c2d-49e5-9f6b-e0bc46179fc7 and54ee6180-7fbc-42a2-9499-2e4936f039dc.\n\n\n\nGet-PvsAuditActionParameter -AuditActionId\"e8baa554-7c2d-49e5-9f6b-e0bc46179fc7\",\"54ee6180-7fbc-42a2-9499-2e4936f039dc\"\n\n\n\nEXAMPLE 3: Get PvsAuditActionParameter for Get-PvsAuditTrail Results withParameters\n\n\nGet-PvsAuditTrail is called and only thePvsAuditTrail.Attachment with bit 4 (Parameters) set are used to callGet-PvsAuditActionParameter.\n\n\n\nGet-PvsAuditTrail | Where-Object {($_.Attachments-band 4) -eq 4} | Get-PvsAuditActionParameter\n\n\n\nGet-PvsAuditActionProperty\n\n\nGet the Properties of an Audit Action.\n\n\n\nThis required\n\n\n\nGuid[] AuditActionId: GUID of the Audit Action toGet Properties for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nAuditActionId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nName or AuditPropertyName: Name of the property. MaxLength=50\n\n\n\nOldValue: Previous value of the Property.Default=\"\" Max Length=1000\n\n\n\nNewValue: New value of the Property.Default=\"\" Max Length=1000\n\n\n\nPvsAuditActionProperty[]: If successful, thePvsAuditActionProperty object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsAuditActionProperty\n\n\nGet all PvsAuditActionProperty for the AuditActionIde8baa554-7c2d-49e5-9f6b-e0bc46179fc7.\n\n\n\nGet-PvsAuditActionProperty -AuditActionId\"e8baa554-7c2d-49e5-9f6b-e0bc46179fc7\"\n\n\n\nEXAMPLE 2: Get PvsAuditActionProperty for Multiple AuditActionId\n\n\nGet all PvsAuditActionProperty for the AuditActionIde8baa554-7c2d-49e5-9f6b-e0bc46179fc7 and 54ee6180-7fbc-42a2-9499-2e4936f039dc.\n\n\n\nGet-PvsAuditActionProperty -AuditActionId \"e8baa554-7c2d-49e5-9f6b-e0bc46179fc7\",\"54ee6180-7fbc-42a2-9499-2e4936f039dc\"\n\n\n\nEXAMPLE 3: Get PvsAuditActionProperty for Get-PvsAuditTrail Results withProperties\n\n\nGet-PvsAuditTrail is called and only thePvsAuditTrail.Attachment with bit 8 (Properties) set are used to callGet-PvsAuditActionProperty.\n\n\n\nGet-PvsAuditTrail | Where-Object {($_.Attachments-band 8) -eq 8} | Get-PvsAuditActionProperty\n\n\n\nGet-PvsAuditActionSibling\n\n\nGet the Sibling of an Audit Action. It is the 2ndobject involved with the action.\n\n\n\nThis required\n\n\n\nGuid[] Guid or AuditActionId: GUID of the AuditAction to Get Sibling for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nAuditActionId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or AuditActionId: GUID of the action.\n\n\n\nType: Type of object that action was performed on.Values are: 1 (AuthGroup), 2 (Collection), 3 (Device), 4 (Disk), 5(DiskLocator), 6 (Farm), 7 (FarmView), 8 (Server), 9 (Site), 10 (SiteView), 11(Store), 12 (System), and 13 (UserGroup)\n\n\n\nObjectId: GUID of the object of the action.\n\n\n\nObjectName: Name of the object of the action. MaxLength=1000\n\n\n\nPath: Path of the object of the action. An exampleis Site\\Collection for a Device. Default=\"\" Max Length=101\n\n\n\nSiteId: GUID of the Site for the object of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000\n\n\n\nSubId: GUID of the Collection or Store of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000\n\n\n\nPvsAuditAction[]: If successful, the PvsAuditActionobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsAuditActionSibling\n\n\nGet all PvsAuditActionSibling for the AuditActionIde8baa554-7c2d-49e5-9f6b-e0bc46179fc7.\n\n\n\nGet-PvsAuditActionSibling -Guid\"e8baa554-7c2d-49e5-9f6b-e0bc46179fc7\"\n\n\n\nEXAMPLE 2: Get PvsAuditActionSibling for Multiple AuditActionId\n\n\nGet all PvsAuditActionSibling for the AuditActionIde8baa554-7c2d-49e5-9f6b-e0bc46179fc7 and 54ee6180-7fbc-42a2-9499-2e4936f039dc.\n\n\n\nGet-PvsAuditActionSibling -Guid\"e8baa554-7c2d-49e5-9f6b-e0bc46179fc7\",\"54ee6180-7fbc-42a2-9499-2e4936f039dc\"\n\n\n\nEXAMPLE 3: Get PvsAuditActionSibling for Get-PvsAuditTrail Results withSiblings\n\n\nGet-PvsAuditTrail is called and only thePvsAuditTrail.Attachment with bit 2 (Siblings) set are used to callGet-PvsAuditActionSibling.\n\n\n\nGet-PvsAuditTrail | Where-Object {($_.Attachments-band 2) -eq 2} | Get-PvsAuditActionSibling\n\n\n\nGet-PvsAuditTrail\n\n\nGet the Audit Trail actions for a Farm, Site,Server, DiskLocator, Collection, Device, User Group, Site View, Farm View orStore. All Audit Trail actions are returned if no parameters are passed. Theresult can be filtered by parent, user\\domain and date range.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or AuditActionId: GUID of the AuditAction to Get.\n\n\n\nGuid[] ParentId: Parent AuditActionId of the recordsto retrieve. If no parameters are included, only records with no parent arereturned.\n\n\n\nGuid[] RootId: Root AuditActionId of the records toretrieve. All of the actions caused by the root action are returned. If noparameters are included, only records with no root are returned.\n\n\n\nGuid[] SiteId: GUID of the Site to get the AuditTrail for.\n\n\n\nstring[] SiteName: Name of the Site to get the AuditTrail for.\n\n\n\nGuid[] CollectionId: GUID of the Collection to getthe Audit Trail for.\n\n\n\nGuid[] SiteViewId: GUID of the Site View to get theAudit Trail for.\n\n\n\nGuid[] FarmViewId: GUID of the Farm View to get theAudit Trail for.\n\n\n\nstring[] FarmViewName: Name of the Farm View to getthe Audit Trail for.\n\n\n\nGuid[] ServerId: GUID of the Server to get the AuditTrail for.\n\n\n\nstring[] ServerName: Name of the Server to get theAudit Trail for.\n\n\n\nGuid[] DeviceId: GUID of the Device to get the AuditTrail for.\n\n\n\nstring[] DeviceName: Name of the Device to get theAudit Trail for.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toget the Audit Trail for.\n\n\n\nGuid[] StoreId: GUID of the Store to get the AuditTrail for.\n\n\n\nstring[] StoreName: Name of the Store to get theAudit Trail for.\n\n\n\nGuid[] DiskLocatorId: GUID of the DiskLocator to getthe Audit Trail for.\n\n\n\nor one of these optional ; resolutions\n\n\n\nstring[] CollectionName: Name of the Collection toget the Audit Trail for.\n\n\n\nstring[] SiteViewName: Name of the Site View to getthe Audit Trail for.\n\n\n\nstring[] DiskLocatorName: Name of the DiskLocator toget the Audit Trail for.\n\n\n\nOptional\n\n\n\nstring[] UserName: User that performed the action.\n\n\n\nstring[] Domain: Domain of the user that performedthe action.\n\n\n\nDateTime BeginDate: Date/Time of the first actionsto get. If not included, all actions until the endDate are returned. If neitherthis or the endDate are included, then only actions that occurred in the lastweek are returned. Uses only the date, hour and minute. If connected to aServer version previous to 7.7, only the date is used.\n\n\n\nDateTime EndDate: Date/Time of the last actions toget. If not included, all actions from the beginDate until now are returned. Ifneither this or the beginDate are included, then only actions that occurred inthe last week are returned. Uses only the date, hour and minute. If connectedto a Server version previous to 7.7, only the date is used.\n\n\n\nuint[] Type: Types to get. Values are: 0 (Many), 1(AuthGroup), 2 (Collection), 3 (Device), 4 (Disk), 5 (DiskLocator), 6 (Farm), 7(FarmView), 8 (Server), 9 (Site), 10 (SiteView), 11 (Store), 12 (System), and13 (UserGroup)\n\n\n\nuint[] Action: Actions to get. Values are: 1(AddAuthGroup), 2 (AddCollection), 3 (AddDevice), 4 (AddDiskLocator), 5 (AddFarmView),6 (AddServer), 7 (AddSite), 8 (AddSiteView), 9 (AddStore), 10 (AddUserGroup),11 (AddVirtualHostingPool), 12 (AddUpdateTask), 13 (AddDiskUpdateDevice), 1001(DeleteAuthGroup), 1002 (DeleteCollection), 1003 (DeleteDevice), 1004(DeleteDeviceDiskCacheFile), 1005 (DeleteDiskLocator), 1006 (DeleteFarmView),1007 (DeleteServer), 1008 (DeleteServerStore), 1009 (DeleteSite), 1010(DeleteSiteView), 1011 (DeleteStore), 1012 (DeleteUserGroup), 1013(DeleteVirtualHostingPool), 1014 (DeleteUpdateTask), 1015 (DeleteDiskUpdateDevice),1016 (DeleteDiskVersion), 2001 (RunAddDeviceToDomain), 2002(RunApplyAutoUpdate), 2003 (RunApplyIncrementalUpdate), 2004(RunArchiveAuditTrail), 2005 (RunAssignAuthGroup), 2006 (RunAssignDevice), 2007(RunAssignDiskLocator), 2008 (RunAssignServer), 2009 (RunWithReturnBoot), 2010(RunCopyPasteDevice), 2011 (RunCopyPasteDisk), 2012 (RunCopyPasteServer), 2013(RunCreateDirectory), 2014 (RunCreateDiskCancel), 2015 (RunDisableCollection),2016 (RunDisableDevice), 2017 (RunDisableDeviceDiskLocator), 2018(RunDisableDiskLocator), 2019 (RunDisableUserGroup), 2020(RunDisableUserGroupDiskLocator), 2021 (RunWithReturnDisplayMessage), 2022(RunEnableCollection), 2023 (RunEnableDevice), 2024(RunEnableDeviceDiskLocator), 2025 (RunEnableDiskLocator), 2026(RunEnableUserGroup), 2027 (RunEnableUserGroupDiskLocator), 2028(RunExportOemLicenses), 2029 (RunImportDatabase), 2030 (RunImportDevices), 2031(RunImportOemLicenses), 2032 (RunMarkDown), 2033 (RunWithReturnReboot), 2034(RunRemoveAuthGroup), 2035 (RunRemoveDevice), 2036 (RunRemoveDeviceFromDomain),2037 (RunRemoveDirectory), 2038 (RunRemoveDiskLocator), 2039(RunResetDeviceForDomain), 2040 (RunResetDatabaseConnection), 2041(RunRestartStreamingService), 2042 (RunWithReturnShutdown), 2043 (RunStartStreamingService),2044 (RunStopStreamingService), 2045 (RunUnlockAllDisk), 2046 (RunUnlockDisk),2047 (RunServerStoreVolumeAccess), 2048 (RunServerStoreVolumeMode), 2049(RunMergeDisk), 2050 (RunRevertDiskVersion), 2051 (RunPromoteDiskVersion), 2052(RunCancelDiskMaintenance), 2053 (RunActivateDevice), 2054 (RunAddDiskVersion),2055 (RunExportDisk), 2056 (RunAssignDisk), 2057 (RunRemoveDisk), 2058(RunDiskUpdateStart), 2059 (RunDiskUpdateCancel), 2060 (RunSetOverrideVersion),2061 (RunCancelTask), 2062 (RunClearTask), 2063 (RunForceInventory), 2064RunUpdateBDM, 2065 (RunStartDeviceDiskTempVersionMode), 2066(RunStopDeviceDiskTempVersionMode), 3001 (RunWithReturnCreateDisk), 3002(RunWithReturnCreateDiskStatus), 3003 (RunWithReturnMapDisk), 3004 (RunWithReturnRebalanceDevices),3005 (RunWithReturnCreateMaintenanceVersion), 3006 (RunWithReturnImportDisk),4001 (RunByteArrayInputImportDevices), 4002(RunByteArrayInputImportOemLicenses), 5001(RunByteArrayOutputArchiveAuditTrail), 5002 (RunByteArrayOutputExportOemLicenses),6001 (SetAuthGroup), 6002 (SetCollection), 6003 (SetDevice), 6004 (SetDisk),6005 (SetDiskLocator), 6006 (SetFarm), 6007 (SetFarmView), 6008 (SetServer),6009 (SetServerBiosBootstrap), 6010 (SetServerBootstrap), 6011(SetServerStore), 6012 (SetSite), 6013 (SetSiteView), 6014 (SetStore), 6015(SetUserGroup), 6016 SetVirtualHostingPool, 6017 SetUpdateTask, 6018SetDiskUpdateDevice, 7001 (SetListDeviceBootstraps), 7002(SetListDeviceBootstrapsDelete), 7003 (SetListDeviceBootstrapsAdd), 7004 (SetListDeviceCustomProperty),7005 (SetListDeviceCustomPropertyDelete), 7006(SetListDeviceCustomPropertyAdd), 7007 (SetListDeviceDiskPrinters), 7008(SetListDeviceDiskPrintersDelete), 7009 (SetListDeviceDiskPrintersAdd), 7010(SetListDevicePersonality), 7011 (SetListDevicePersonalityDelete), 7012(SetListDevicePersonalityAdd), 7013 (SetListDiskLocatorCustomProperty), 7014(SetListDiskLocatorCustomPropertyDelete), 7015(SetListDiskLocatorCustomPropertyAdd), 7016 (SetListServerCustomProperty), 7017(SetListServerCustomPropertyDelete), 7018 (SetListServerCustomPropertyAdd),7019 (SetListUserGroupCustomProperty), 7020(SetListUserGroupCustomPropertyDelete), and 7021(SetListUserGroupCustomPropertyAdd)\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to get the AuditTrail for.\n\n\n\nstring[] SiteName: Name of the Site to get the AuditTrail for.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store to get the AuditTrail for.\n\n\n\nstring[] StoreName: Name of the Store to get theAudit Trail for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nAuditActionId, ParentId, RootId, SiteId,CollectionId, SiteViewId, FarmViewId, ServerId, DeviceId, StoreId orDiskLocatorId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or AuditActionId: GUID of the action.\n\n\n\nTime: Date/Time the action occurred down to themillisecond. Has the date and time including milliseconds. Default=Empty\n\n\n\nUserName: User that performed the action. MaxLength=255\n\n\n\nDomain: Domain of the user that performed theaction. Max Length=255\n\n\n\nType: Type of object that action was performed on.Values are: 0 (Many), 1 (AuthGroup), 2 (Collection), 3 (Device), 4 (Disk), 5(DiskLocator), 6 (Farm), 7 (FarmView), 8 (Server), 9 (Site), 10 (SiteView), 11(Store), 12 (System), and 13 (UserGroup)\n\n\n\nAction: Name of the action taken. This is a numberthat is converted to a string for display. Values are: 1 (AddAuthGroup), 2(AddCollection), 3 (AddDevice), 4 (AddDiskLocator), 5 (AddFarmView), 6(AddServer), 7 (AddSite), 8 (AddSiteView), 9 (AddStore), 10 (AddUserGroup), 11(AddVirtualHostingPool), 12 (AddUpdateTask), 13 (AddDiskUpdateDevice), 1001(DeleteAuthGroup), 1002 (DeleteCollection), 1003 (DeleteDevice), 1004(DeleteDeviceDiskCacheFile), 1005 (DeleteDiskLocator), 1006 (DeleteFarmView),1007 (DeleteServer), 1008 (DeleteServerStore), 1009 (DeleteSite), 1010(DeleteSiteView), 1011 (DeleteStore), 1012 (DeleteUserGroup), 1013(DeleteVirtualHostingPool), 1014 (DeleteUpdateTask), 1015(DeleteDiskUpdateDevice), 1016 (DeleteDiskVersion), 2001(RunAddDeviceToDomain), 2002 (RunApplyAutoUpdate), 2003(RunApplyIncrementalUpdate), 2004 (RunArchiveAuditTrail), 2005(RunAssignAuthGroup), 2006 (RunAssignDevice), 2007 (RunAssignDiskLocator), 2008(RunAssignServer), 2009 (RunWithReturnBoot), 2010 (RunCopyPasteDevice), 2011(RunCopyPasteDisk), 2012 (RunCopyPasteServer), 2013 (RunCreateDirectory), 2014(RunCreateDiskCancel), 2015 (RunDisableCollection), 2016 (RunDisableDevice),2017 (RunDisableDeviceDiskLocator), 2018 (RunDisableDiskLocator), 2019(RunDisableUserGroup), 2020 (RunDisableUserGroupDiskLocator), 2021(RunWithReturnDisplayMessage), 2022 (RunEnableCollection), 2023(RunEnableDevice), 2024 (RunEnableDeviceDiskLocator), 2025(RunEnableDiskLocator), 2026 (RunEnableUserGroup), 2027(RunEnableUserGroupDiskLocator), 2028 (RunExportOemLicenses), 2029(RunImportDatabase), 2030 (RunImportDevices), 2031 (RunImportOemLicenses), 2032(RunMarkDown), 2033 (RunWithReturnReboot), 2034 (RunRemoveAuthGroup), 2035(RunRemoveDevice), 2036 (RunRemoveDeviceFromDomain), 2037 (RunRemoveDirectory),2038 (RunRemoveDiskLocator), 2039 (RunResetDeviceForDomain), 2040 (RunResetDatabaseConnection),2041 (RunRestartStreamingService), 2042 (RunWithReturnShutdown), 2043(RunStartStreamingService), 2044 (RunStopStreamingService), 2045(RunUnlockAllDisk), 2046 (RunUnlockDisk), 2047 (RunServerStoreVolumeAccess),2048 (RunServerStoreVolumeMode), 2049 (RunMergeDisk), 2050(RunRevertDiskVersion), 2051 (RunPromoteDiskVersion), 2052(RunCancelDiskMaintenance), 2053 (RunActivateDevice), 2054 (RunAddDiskVersion),2055 (RunExportDisk), 2056 (RunAssignDisk), 2057 (RunRemoveDisk), 2058(RunDiskUpdateStart), 2059 (RunDiskUpdateCancel), 2060 (RunSetOverrideVersion),2061 (RunCancelTask), 2062 (RunClearTask), 2063 (RunForceInventory), 2064RunUpdateBDM, 2065 (RunStartDeviceDiskTempVersionMode), 2066(RunStopDeviceDiskTempVersionMode), 3001 (RunWithReturnCreateDisk), 3002(RunWithReturnCreateDiskStatus), 3003 (RunWithReturnMapDisk), 3004(RunWithReturnRebalanceDevices), 3005 (RunWithReturnCreateMaintenanceVersion),3006 (RunWithReturnImportDisk), 4001 (RunByteArrayInputImportDevices), 4002(RunByteArrayInputImportOemLicenses), 5001(RunByteArrayOutputArchiveAuditTrail), 5002(RunByteArrayOutputExportOemLicenses), 6001 (SetAuthGroup), 6002(SetCollection), 6003 (SetDevice), 6004 (SetDisk), 6005 (SetDiskLocator), 6006(SetFarm), 6007 (SetFarmView), 6008 (SetServer), 6009 (SetServerBiosBootstrap),6010 (SetServerBootstrap), 6011 (SetServerStore), 6012 (SetSite), 6013(SetSiteView), 6014 (SetStore), 6015 (SetUserGroup), 6016SetVirtualHostingPool, 6017 SetUpdateTask, 6018 SetDiskUpdateDevice, 7001(SetListDeviceBootstraps), 7002 (SetListDeviceBootstrapsDelete), 7003(SetListDeviceBootstrapsAdd), 7004 (SetListDeviceCustomProperty), 7005(SetListDeviceCustomPropertyDelete), 7006 (SetListDeviceCustomPropertyAdd),7007 (SetListDeviceDiskPrinters), 7008 (SetListDeviceDiskPrintersDelete), 7009(SetListDeviceDiskPrintersAdd), 7010 (SetListDevicePersonality), 7011(SetListDevicePersonalityDelete), 7012 (SetListDevicePersonalityAdd), 7013(SetListDiskLocatorCustomProperty), 7014(SetListDiskLocatorCustomPropertyDelete), 7015(SetListDiskLocatorCustomPropertyAdd), 7016 (SetListServerCustomProperty), 7017(SetListServerCustomPropertyDelete), 7018 (SetListServerCustomPropertyAdd),7019 (SetListUserGroupCustomProperty), 7020(SetListUserGroupCustomPropertyDelete), and 7021 (SetListUserGroupCustomPropertyAdd)\n\n\n\nObjectId: GUID of the object of the action.Default=00000000-0000-0000-0000-000000000000\n\n\n\nObjectName: Name of the object of the action.Default=\"\" Max Length=1000\n\n\n\nPath: Path of the object of the action. An exampleis Site\\Collection for a Device. Default=\"\" Max Length=101\n\n\n\nSiteId: GUID of the Site for the object of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000\n\n\n\nSubId: GUID of the Collection or Store of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000\n\n\n\nParentId: GUID of the parent action (one thattriggered this action) if one exists. 00000000-0000-0000-0000-000000000000 whennot valid. Default=00000000-0000-0000-0000-000000000000\n\n\n\nRootId: GUID of the root action (one that triggeredthis group of actions) if one exists. 00000000-0000-0000-0000-000000000000 whennot valid. Default=00000000-0000-0000-0000-000000000000\n\n\n\nAttachments: An or'ed value that indicates if thereare any details for this action. A value of 15 indicates that there areChildren, Sibling, Parameters and Properties for the action. Values are: 0(None), 1 (Children), 2 (Sibling), 4 (Parameters), and 8 (Properties) Default=0\n\n\n\nPvsAuditTrail[]: If successful, the PvsAuditTrailobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsAuditTrail for Farm\n\n\nGet all PvsAuditTrail for the Farm.\n\n\n\nGet-PvsAuditTrail\n\n\n\nEXAMPLE 2: Get PvsAuditTrail for FarmView\n\n\nGet all PvsAuditTrail for the FarmView namedtheFarmView.\n\n\n\nGet-PvsAuditTrail -FarmViewName theFarmView\n\n\n\nEXAMPLE 3: Get PvsAuditTrail for Site\n\n\nGet all PvsAuditTrail for the Site named theSite.\n\n\n\nGet-PvsAuditTrail -SiteName theSite\n\n\n\nEXAMPLE 4: Get PvsAuditTrail for SiteView\n\n\nGet all PvsAuditTrail for the SiteView named theSiteViewin the Site named theSite.\n\n\n\nGet-PvsAuditTrail -SiteViewName theSiteView-SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 5: Get PvsAuditTrail for Collection\n\n\nGet all PvsAuditTrail for the Collection namedtheCollection in the Site named theSite.\n\n\n\nGet-PvsAuditTrail -CollectionName theCollection-SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 6: Get PvsAuditTrail for Device\n\n\nGet all PvsAuditTrail for the Device namedtheDevice.\n\n\n\nGet-PvsAuditTrail -DeviceName theDevice\n\n\n\nEXAMPLE 7: Get PvsAuditTrail for Device MAC\n\n\nGet all PvsAuditTrail for the Device with MAC02-50-F2-00-00-01.\n\n\n\nGet-PvsAuditTrail -DeviceMac\"02-50-F2-00-00-01\"\n\n\n\nEXAMPLE 8: Get PvsAuditTrail for Server\n\n\nGet all PvsAuditTrail for the Server namedtheServer.\n\n\n\nGet-PvsAuditTrail -ServerName theServer\n\n\n\nEXAMPLE 9: Get PvsAuditTrail for Store\n\n\nGet all PvsAuditTrail for the Store named theStore.\n\n\n\nGet-PvsAuditTrail -StoreName theStore\n\n\n\nEXAMPLE 10: Get PvsAuditTrail for DiskLocator\n\n\nGet all PvsAuditTrail for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsAuditTrail -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 11: Get PvsAuditTrail for User\n\n\nGet all PvsAuditTrail for the User named theUser inDomain theDomain.\n\n\n\nGet-PvsAuditTrail -UserName theUser -DomainNametheDomain\n\n\n\nEXAMPLE 12: Get PvsAuditTrail for January\n\n\nGet all PvsAuditTrail for January.\n\n\n\nGet-PvsAuditTrail -BeginDate \"01/01/201500:00\" -EndDate \"01/31/2015 23:59\"\n\n\n\nEXAMPLE 13: Get PvsAuditTrail for DiskLocator and Server Type Actions\n\n\nGet all PvsAuditTrail for 5 (DiskLocator) and 8(Server) type actions.\n\n\n\nGet-PvsAuditTrail -Type 5 8\n\n\n\nEXAMPLE 14: Get PvsAuditTrail for DiskLocator and Server Type Actions\n\n\nGet all PvsAuditTrail for the 1003 (DeleteDevice) and1007 (DeleteServer) actions.\n\n\n\nGet-PvsAuditTrail -Action 1003 1007\n\n\n\nEXAMPLE 15: Get PvsAuditTrail with Children\n\n\nGet the 4fd16fc1-8dcc-4097-be5a-d0485bd7433bPvsAuditTrail and if it has children, the child PvsAuditTrail are retrieved.\n\n\n\n$x = Get-PvsAuditTrail -AuditActionId\"4fd16fc1-8dcc-4097-be5a-d0485bd7433b\"\n\n\n\nif (($x.Attachments -band 1) -eq 1) {Get-PvsAuditTrail -ParentId $x.AuditActionId }\n\n\n\nGet-PvsAuthGroup\n\n\nGet the fields for an AuthGroup, all AuthGroups inthe system, AuthGroups with Farm, Site or Collection Authorization. AllAuthGroups in the system are returned if no parameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or AuthGroupId: GUID of the AuthGroup toGet.\n\n\n\nstring[] Name or AuthGroupName: Name of theAuthGroup to Get.\n\n\n\nGuid[] SiteId: GUID of the Site to Get allAuthGroups with Authorization for.\n\n\n\nstring[] SiteName: Name of the Site to Get allAuthGroups with Authorization for.\n\n\n\nGuid[] CollectionId: GUID of the Collection to Getall AuthGroups with Authorization for.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] CollectionName: Name of the Collection toGet all AuthGroups with Authorization for.\n\n\n\nOptional\n\n\n\nSwitchParameter Farm: If -Farm is specified,AuthGroups with Farm Authorization should be returned.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to Get allAuthGroups with Authorization for.\n\n\n\nstring[] SiteName: Name of the Site to Get allAuthGroups with Authorization for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the members belowcan be used as the Object parameter or from a pileline:\n\n\n\nAuthGroupId, SiteId or CollectionId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or AuthGroupId: Read-only GUID that uniquelyidentifies this AuthGroup.\n\n\n\nName or AuthGroupName: Name of the Active Directoryor Windows Group. Max Length=450\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nRole: Role of the AuthGroup for a Collection. rolecan only be used with CollectionId or CollectionName. 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999\n\n\n\nPvsAuthGroup[]: If successful, the PvsAuthGroupobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsAuthGroup for System\n\n\nGet all PvsAuthGroup for the System.\n\n\n\nGet-PvsAuthGroup\n\n\n\nEXAMPLE 2: Get PvsAuthGroup for Farm\n\n\nGet all PvsAuthGroup for the Farm.\n\n\n\nGet-PvsAuthGroup\n\n\n\nEXAMPLE 3: Get PvsAuthGroup for Site\n\n\nGet all PvsAuthGroup for the Site named theSite.\n\n\n\nGet-PvsAuthGroup -SiteName theSite\n\n\n\nEXAMPLE 4: Get PvsAuthGroup for Collection\n\n\nGet all PvsAuthGroup for the Collection namedtheCollection in the Site named theSite.\n\n\n\nGet-PvsAuthGroup -CollectionName theCollection-SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nGet-PvsAuthGroupUsage\n\n\nGet the items that are authorized for an AuthGroup.\n\n\n\nOne of these required\n\n\n\nGuid[] AuthGroupId: GUID of the AuthGroup to Get allitems that are authorized for it.\n\n\n\nstring[] Name or AuthGroupName: Name of theAuthGroup to Get all items that are authorized for it.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nAuthGroupId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or Id: GUID of the item. The item can be aFarm, Site or Collection. It will be 00000000-0000-0000-0000-000000000000 forFarm.\n\n\n\nName: Name of the item. The item can be a Farm, Siteor Collection.\n\n\n\nRole: Role of the AuthGroup for the item. 100 isFarm Administrator, 200 is Site Administrator, 300 is Collection Administrator,and 400 is Collection Operator. Default=999\n\n\n\nPvsAuthGroupUsage[]: If successful, thePvsAuthGroupUsage object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsAuthGroupUsage\n\n\nGet all PvsAuthGroupUsage for the AuthGroup namedtheAuthGroup.\n\n\n\nGet-PvsAuthGroupUsage -Name theAuthGroup\n\n\n\nGet-PvsCeipData\n\n\nGet the CEIP configuration\n\n\n\nOptional\n\n\n\nstring[] Uuid: CEIP UUID of this Farm. This isoptional since there is only one.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nUuid\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nEnabled: 1 if CEIP is enabled, otherwise 0. Min=0,Max=1\n\n\n\nUuid: CEIP UUID.\n\n\n\nNextUpload: Date and time next CEIP upload is due ifenabled is 1. Default=Empty\n\n\n\nInProgress: 1 if an upload is currently in progress,otherwise 0. Default=0\n\n\n\nServerId: ID of server that is currently uploading,null if InProgress is 0. Default=00000000-0000-0000-0000-000000000000\n\n\n\nOneTimeUpload: 1 to perform a one time upload.\n\n\n\nPvsCeipData[]: If successful, the PvsCeipDataobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsCeipData for CeipData\n\n\nGet all PvsCeipData for CeipData.\n\n\n\nGet-PvsCeipData\n\n\n\nGet-PvsCisData\n\n\nGet the CIS configuration\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or CisDataId: CIS UUID\n\n\n\nUserName: Username used to obtain the tokenDefault=\"\" Max Length=255\n\n\n\nUploadToken: Token for uploading bundles to CISDefault=\"\" Max Length=10\n\n\n\nPath: Path where the last problem report bundle wassaved Default=\"\" Max Length=255\n\n\n\nPassword: Password of the user required to obtainthe token. This is required only by Set and Add\n\n\n\nPvsCisData[]: If successful, the PvsCisDataobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsCisData for CisData\n\n\nGet all PvsCisData for CispData.\n\n\n\nGet-PvsCisData\n\n\n\nGet-PvsCollection\n\n\nGet the fields for a Collection or all Collectionsin a Site or Farm. All Collections are returned if no parameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or CollectionId: GUID of the Collectionto Get.\n\n\n\nGuid[] SiteId: GUID of the Site to Get allCollections for.\n\n\n\nstring[] SiteName: Name of the Site to Get allCollections for.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] Name or CollectionName: Name of theCollection to Get.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to Get allCollections for.\n\n\n\nstring[] SiteName: Name of the Site to Get allCollections for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nCollectionId or SiteId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or CollectionId: Read-only GUID that uniquelyidentifies this Collection.\n\n\n\nName or CollectionName: Name of the Collection. Itis unique within the Site. Max Length=50\n\n\n\nSiteId: GUID of the Site that this Collection is amember of. It is not used with SiteName.\n\n\n\nSiteName: Name of the Site that this Collection is amember of. It is not used with SiteId.\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nTemplateDeviceId: GUID of a Device in the Collectionwhose settings are used for initial values of new Devices. Not used withtemplateDeviceName. Default=00000000-0000-0000-0000-000000000000\n\n\n\nTemplateDeviceName: Name of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith TemplateDeviceId. Default=\"\"\n\n\n\nLastAutoAddDeviceNumber: The Device Number of thelast Auto Added Device. Default=0\n\n\n\nEnabled: True when Devices in the Collection can bebooted, false otherwise. Default=true\n\n\n\nDeviceCount: Read-only count of Devices in this Collection.Default=0\n\n\n\nDeviceWithPVDCount: Read-only count of Devices withPersonal vDisk in this Collection. Default=0\n\n\n\nActiveDeviceCount: Read-only count of active Devicesin this Collection. Default=0\n\n\n\nMakActivateNeededCount: Read-only count of activeDevices that need MAK activation in this Collection. Default=0\n\n\n\nAutoAddPrefix: The string put before the DeviceNumber for Auto Add. Default=\"\" ASCII computer name characters no enddigit Max Length=12\n\n\n\nAutoAddSuffix: The string put after the DeviceNumber for Auto Add. Default=\"\" ASCII computer name characters nobegin digit Max Length=12\n\n\n\nAutoAddZeroFill: True when zeros be placed beforethe Device Number up to the AutoAddNumberLength for Auto Add, false otherwise.Default=true\n\n\n\nAutoAddNumberLength: The maximum length of theDevice Number for Auto Add. This length plus the AutoAddPrefix length plus theAutoAddSuffix length must be less than 16. Required that((lenautoAddPrefix+lenautoAddSuffix)+AutoAddNumberLength)\n<\n=15. Min=3, Max=9,Default=4\n\n\n\nRole: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999\n\n\n\nPvsCollection[]: If successful, the PvsCollectionobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsCollection for Farm\n\n\nGet all PvsCollection for the Farm.\n\n\n\nGet-PvsCollection\n\n\n\nEXAMPLE 2: Get PvsCollection for Site\n\n\nGet all PvsCollection for the Site named theSite.\n\n\n\nGet-PvsCollection -SiteName theSite\n\n\n\nEXAMPLE 3: Get PvsCollection\n\n\nGet the PvsCollection for the Collection namedtheCollection in the Site named theSite.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 4: Get PvsCollection and Enable\n\n\nGet all PvsCollection that are not Enabled and thenEnables them.\n\n\n\nGet-PvsCollection -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsCollection\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nGet-PvsConnection\n\n\nReturn the PvsConnection object with the informationabout the SoapServer connection.\n\n\n\nPvsConnection: If successful, the PvsConnectionobject is returned.\n\n\n\nEXAMPLE 1: Get PvsConnection\n\n\nGet the PvsConnection for the SoapServer.\n\n\n\nGet-PvsConnection\n\n\n\nGet-PvsCreateDiskStatus\n\n\nGet the Percent Finished for an active CreateDisk.When finished, the PvsDiskLocator created is returned.\n\n\n\nThis required\n\n\n\nstring Name: Name of the Disk file that is beingcreated.\n\n\n\nOne of these required\n\n\n\nGuid StoreId: GUID of the Store that the Disk willbe a member of.\n\n\n\nstring StoreName: Name of the Store that the Diskwill be a member of.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nStoreId\n\n\n\nUInt32 or PvsDiskLocator: If not finished, thepercent complete is returned in an UInt32. If finished and successful, thePvsDiskLocator is returned.\n\n\n\nEXAMPLE 1: Start-PvsCreateDiskStatus\n\n\nThis example shows how to useGet-PvsCreateDiskStatus during Start-PvsCreateDisk processing.\n\n\n\n$thePvsDiskLocator = Start-PvsCreateDiskStatus -NametheDiskName -Size 20480 -StoreName theStore -SiteName theSite -VHDX -Dynamic\n\n\n\nwhile ($thePvsDiskLocator -eq$null)                           #while the create is processing\n\n\n\n{\n\n\n\n%percentFinished = Get-PvsCreateDiskStatus -NametheDiskName -StoreName theStore  # get percent finished orDiskLocator when done\n\n\n\nif (%percentFinished.GetType().Name ==\"PvsDiskLocator\")\n\n\n\n{\n\n\n\n$thePvsDiskLocator = %percentFinished\n\n\n\n}\n\n\n\nelse\n\n\n\n{\n\n\n\n%percentFinished.ToString() + \"% finished\"                 #display percent finished\n\n\n\nStart-Sleep -seconds10                                    #wait 10 seconds more\n\n\n\n}\n\n\n\n}\n\n\n\n\"Successful\"\n\n\n\nGet-PvsDevice\n\n\nGet the fields for a Device, all Devices in aCollection, Site, Farm View, or Farm. All Devices are returned if no parametersare passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device to Get.\n\n\n\nstring[] Name or DeviceName: Name of Device to Get.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toGet.\n\n\n\nGuid[] CollectionId: GUID of the Collection to Getall Devices for.\n\n\n\nGuid[] ServerId: GUID of the Server to Get allDevices for.\n\n\n\nstring[] ServerName: Name of the Server to Get allDevices for.\n\n\n\nGuid[] DiskLocatorId: GUID of the DiskLocator to Getall Devices for.\n\n\n\nGuid[] SiteViewId: GUID of the Site View to Get allDevices for.\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nGuid[] FarmViewId: GUID of the Farm View to Get allDevices for.\n\n\n\nstring[] FarmViewName: Name of the Farm View to Getall Devices for.\n\n\n\nstring[] BdmBoot: Include only the BDM Devices whenset to 1. PXE devices if set to 0. If not included, all Devices are returned.\n\n\n\nor one of these optional ; resolutions\n\n\n\nstring[] CollectionName: Name of the Collection toGet all Devices for.\n\n\n\nstring[] DiskLocatorName: Name of the DiskLocator toGet all Devices for.\n\n\n\nstring[] SiteViewName: Name of the Site View to Getall Devices for.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceName, CollectionId, ServerId, DiskLocatorId,SiteViewId, SiteId or FarmViewId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or DeviceId: Read-only GUID that uniquelyidentifies this Device.\n\n\n\nName or DeviceName: Computer name with no spaces.ASCII computer name characters Max Length=15\n\n\n\nCollectionId: GUID of the Collection this Device isto be a member of. It is not used with CollectionName.\n\n\n\nCollectionName: Name of the Collection this Deviceis to be a member of. SiteName or SiteId must also be used.\n\n\n\nSiteId: GUID of the Site the CollectionName is to bea member of. This or SiteName is used with CollectionName.\n\n\n\nSiteName: Name of the Site the CollectionName is tobe a member of. This or SiteId is used with CollectionName.\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nDeviceMac: Ethernet address can have the formXX-XX-XX-XX-XX-XX. Uniquely identifies the Device.\n\n\n\nBootFrom: Device to boot from. Choices are 1 forvDisk, 2 for Hard Disk, and 3 for Floppy. This cannot be Set for a Device withPersonal vDisk. Min=1, Max=3, Default=1\n\n\n\nClassName: Used by Automatic Update feature to matchnew versions of Disks to a Device. This cannot be Set for a Device withPersonal vDisk. Default=\"\" Max Length=41\n\n\n\nPort: UDP port to use with Stream Service. Min=1025,Max=65534, Default=6901\n\n\n\nEnabled: True when it can be booted, falseotherwise. This cannot be Set for a Device with Personal vDisk. Default=true\n\n\n\nLocalDiskEnabled: If there is a local disk menuchoice for the Device, this is true. This cannot be Set for a Device withPersonal vDisk. Default=false\n\n\n\nRole: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999\n\n\n\nAuthentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. This cannotbe Set for a Device with Personal vDisk. Min=0, Max=2, Default=0\n\n\n\nUser: Name of user to authenticate before the bootprocess continues. This cannot be Set for a Device with Personal vDisk.Default=\"\" ASCII Max Length=20\n\n\n\nPassword: Password of user to authenticate beforethe boot process continues. This cannot be Set for a Device with PersonalvDisk. Default=\"\" ASCII Max Length=100\n\n\n\nActive: True if the Device is currently active,false otherwise. Default=false\n\n\n\nTemplate: True if the Device is the template in itsCollection, false otherwise. Default=false\n\n\n\nAdTimestamp: The time the Active Directory machineaccount password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nAdSignature: The signature of the Active Directorymachine account password. Do not set this field, it is only set internally byPVS. Default=0\n\n\n\nLogLevel: Level to perform logging at. Values are: 0(None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6 (Trace).Min=0, Max=6, Default=0\n\n\n\nDomainName: Fully qualified name of the domain thatthe Device belongs to. Do not set this field, it is only set internally by PVS.Default=\"\" Max Length=255\n\n\n\nDomainObjectSID: The value of the objectSID ADattribute of the same name for the Device's computer account. Do not set thisfield, it is only set internally by PVS. Default=\"\" Max Length=186\n\n\n\nDomainControllerName: The name of the DC used tocreate the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000\n\n\n\nDomainTimeCreated: The time that the computeraccount was created. Has the date and time including milliseconds. Do not setthis field, it is only set internally by PVS. Default=Empty\n\n\n\nType: 1 when it performs test of Disks, 2 when itperforms maintenance on Disks, 3 when it has a Personal vDisk, 4 when it has aPersonal vDisk and performs tests, 0 otherwise. Min=0, Max=4, Default=0\n\n\n\nPvdDriveLetter: Read-only Personal vDisk Driveletter. Range is E to U and W to Z. Default=\"\" Max Length=1\n\n\n\nLocalWriteCacheDiskSize: The size in GB to formatthe Device cache file disk. If the value is 0, then the disk is not formatted.Min=0, Max=2048, Default=0\n\n\n\nVirtualHostingPoolId: GUID that uniquely identifiesthe Virtual Hosting Pool for a VM. This is needed when Adding a VM device.Default=00000000-0000-0000-0000-000000000000\n\n\n\nTemporaryVersionSet: Read-only true when temporaryversion is set. Default=false\n\n\n\nBdmBoot: Use PXE boot when set to false, BDM bootwhen set to true. Default is PXE Default=false\n\n\n\nBdmType: Use PXE boot when set to 0, BDM (Bios) bootwhen set to 1 and BDM (Uefi) boot when set to 2.  Default=0\n\n\n\nBdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3 useUSB. Default=0\n\n\n\nBdmUpdated: Timestamp of the last BDM boot diskupdate. Default=Empty\n\n\n\nBdmCreated: Timstamp when BDM device wascreated  Default=Empty\n\n\n\nXsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000\n\n\n\nXsPvsProxyEnabled: Enable XenServer PVS proxy whenset to true Default=false\n\n\n\nPvsDevice[]: If successful, the PvsDevice object(s)are returned.\n\n\n\nEXAMPLE 1: Get PvsDevice for Farm\n\n\nGet all PvsDevice for the Farm.\n\n\n\nGet-PvsDevice\n\n\n\nEXAMPLE 2: Get PvsDevice for FarmView\n\n\nGet all PvsDevice for the FarmView namedtheFarmView.\n\n\n\nGet-PvsDevice -FarmViewName theFarmView\n\n\n\nEXAMPLE 3: Get PvsDevice for Site\n\n\nGet all PvsDevice for the Site named theSite.\n\n\n\nGet-PvsDevice -SiteName theSite\n\n\n\nEXAMPLE 4: Get PvsDevice for SiteView\n\n\nGet all PvsDevice for the SiteView named theSiteViewin the Site named theSite.\n\n\n\nGet-PvsDevice -SiteViewName theSiteView -SiteNametheSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 5: Get PvsDevice for Collection\n\n\nGet all PvsDevice for the Collection namedtheCollection in the Site named theSite.\n\n\n\nGet-PvsDevice -CollectionName theCollection-SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 6: Get PvsDevice for DiskLocator\n\n\nGet all PvsDevice for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsDevice -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 7: Get PvsDevice for Device\n\n\nGet the PvsDevice for the Device named theDevice.\n\n\n\nGet-PvsDevice -Name theDevice\n\n\n\nEXAMPLE 8: Get PvsDevice and Enable\n\n\nGet all PvsDevice that are not Enabled and thenEnables them.\n\n\n\nGet-PvsDevice -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nGet-PvsDeviceBootstrap\n\n\nGet all Bootstrap files for a Device, and theMenuText for each.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device.\n\n\n\nstring[] Name or DeviceName: Name of the Device.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nThese fields exist in the DeviceBootstrap arraywithin each PvsDeviceBootstrap returned.\n\n\n\nEach array item is a PvsDeviceBootstrapList object.\n\n\n\nName or Bootstrap: Name of the bootstrap file. Max Length=259\n\n\n\nMenuText: Text that is displayed in the Boot Menu.If this field has no value, the bootstrap value is used. Default=\"\"ASCII Max Length=64\n\n\n\nPvsDeviceBootstrap[]: If successful, thePvsDeviceBootstrap object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsDeviceBootstrap for Device\n\n\nGet all PvsDeviceBootstrap for the Device namedtheDevice.\n\n\n\nGet-PvsDeviceBootstrap -Name theDevice\n\n\n\nEXAMPLE 2: Get PvsDeviceBootstrap for Device MAC\n\n\nGet all PvsDeviceBootstrap for the Device with MAC02-50-F2-00-00-01.\n\n\n\nGet-PvsDeviceBootstrap -DeviceMac\"02-50-F2-00-00-01\"\n\n\n\nGet-PvsDeviceCount\n\n\nGet count of Devices in a Collection or View.\n\n\n\nOne of these required\n\n\n\nGuid CollectionId: GUID of the Collection to get theDevice Count of.\n\n\n\nGuid SiteViewId: GUID of the Site View to get theDevice Count of.\n\n\n\nGuid FarmViewId: GUID of the Farm View to get theDevice Count of.\n\n\n\nstring FarmViewName: Name of the Farm View to getthe Device Count of.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring CollectionName: Name of the Collection to getthe Device Count of.\n\n\n\nstring SiteViewName: Name of the Site View to getthe Device Count of.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nCollectionId, SiteViewId or FarmViewId\n\n\n\nUInt32: If successful, the numeric value is returned\n\n\n\nEXAMPLE 1: Get-PvsDeviceCount Returns the Number (or Count) of PvsDevice inPvsCollection\n\n\nGet-PvsDeviceCount -CollectionName theCollection-SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Get-PvsDeviceCount Returns the Number (or Count) of PvsDevice inPvsFarmView\n\n\nGet-PvsDeviceCount -FarmViewName theFarmView\n\n\n\nEXAMPLE 3: Get-PvsDeviceCount Returns the Number (or Count) of PvsDevice inPvsSiteView\n\n\nGet-PvsDeviceCount -SiteViewName theSiteView-SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nGet-PvsDeviceDiskLocatorEnabled\n\n\nReturn true if a Device/DiskLocator is enabled.\n\n\n\nOne of these required\n\n\n\nGuid Guid or DeviceId: Device GUID, to see if theDiskLocator for it is enabled.\n\n\n\nstring Name or DeviceName: Device name, to see ifthe DiskLocator for it is enabled.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device,to see if the DiskLocator for it is enabled.\n\n\n\nThis required\n\n\n\nGuid DiskLocatorId: DiskLocator GUID, to see if itis enabled for the Device.\n\n\n\nor this required ; resolution\n\n\n\nstring DiskLocatorName: DiskLocator name, to see ifit is enabled for the Device.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId or DiskLocatorId\n\n\n\nString: If successful, the String value is returned.\n\n\n\nEXAMPLE 1: Get-PvsDeviceDiskLocatorEnabled Determine ifPvsDevice/PvsDiskLocator is Enabled\n\n\nGet-PvsDeviceDiskLocatorEnabled -Name theDevice-DiskLocatorName theDiskLocator -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the StoreName or StoreId are not also needed.\n\n\n\nGet-PvsDeviceDiskTempVersion\n\n\nGet Temporary Disk Version information for a Device,DiskLocator, Disk Version, Site or Farm.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device to getthe temporary disk version information for.\n\n\n\nstring[] Name or DeviceName: Name of the Device toget the temporary disk version information for.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toget the temporary disk version information for.\n\n\n\nGuid[] SiteId: GUID of the Site to get temporarydisk version information for, and also resolution for DiskLocatorName.\n\n\n\nstring[] SiteName: Name of the Site to get temporarydisk version information for, and also resolution for DiskLocatorName.\n\n\n\nGuid[] DiskLocatorId: GUID of the Disk Locator toget temporary disk version information for.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] DiskLocatorName: Name of the Disk Locatorto get temporary disk version information for.\n\n\n\nThis optional ; resolution\n\n\n\nstring[] Version: Version of the DiskLocatorspecified to get temporary disk version information for. Needs theDiskLocatorId or DiskLocatorName too.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to get temporarydisk version information for, and also resolution for DiskLocatorName.\n\n\n\nstring[] SiteName: Name of the Site to get temporarydisk version information for, and also resolution for DiskLocatorName.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId, SiteId or DiskLocatorId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or DeviceId: Read-only GUID that uniquelyidentifies the Device with temporary version.\n\n\n\nName or DeviceName: Read-only Computer name thatuniquely identifies the Device with temporary version. ASCII computer namecharacters\n\n\n\nDiskLocatorId: Read-only GUID that uniquelyidentifies then Disk Locator with temporary version.\n\n\n\nDiskLocatorName: Read-only Name of the Disk LocatorFile with temporary version. It is unique within the Store. ASCII\n\n\n\nSiteId: Read-only GUID of the Site the Device andDiskLocator are a member of.\n\n\n\nSiteName: Read-only Name of the Site the Device andDiskLocator are a member of.\n\n\n\nStoreId: Read-only GUID of the Store that the DiskLocator is a member of.\n\n\n\nStoreName: Read-only Name of the Store that the DiskLocator is a member of.\n\n\n\nVersion: Read-only Disk version the temporary isfor.\n\n\n\nPvsDeviceDiskTempVersion[]: If successful, the PvsDeviceDiskTempVersionobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsDeviceDiskTempVersion for Device\n\n\nGet the PvsDeviceDiskTempVersion for the Devicenamed theDevice.\n\n\n\nGet-PvsDeviceDiskTempVersion -Name theDevice\n\n\n\nEXAMPLE 2: Get PvsDeviceDiskTempVersion for DiskLocator\n\n\nGet all PvsDeviceDiskTempVersion for the DiskLocatornamed theDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsDeviceDiskTempVersion -DiskLocatorNametheDiskLocator -SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 3: Get PvsDeviceDiskTempVersion for DiskLocator with Version\n\n\nGet-PvsDeviceDiskTempVersion -DiskLocatorNametheDiskLocator -Version 4 -SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 4: Get PvsDeviceDiskTempVersion for Site\n\n\nGet all PvsDeviceDiskTempVersion for the Site namedtheSite.\n\n\n\nGet-PvsDeviceDiskTempVersion -SiteName theSite\n\n\n\nEXAMPLE 5: Get PvsDeviceDiskTempVersion for Farm\n\n\nGet all PvsDeviceDiskTempVersion for the Farm.\n\n\n\nGet-PvsDeviceDiskTempVersion\n\n\n\nGet-PvsDeviceInfo\n\n\nGet the fields and status for a Device, all Devicesin a Collection, Site, Farm View, or Farm. All Devices are returned if noparameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device to Get.\n\n\n\nstring[] Name or DeviceName: Name of Device to Get.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toGet.\n\n\n\nGuid[] CollectionId: GUID of the Collection to Getall Devices for.\n\n\n\nGuid[] ServerId: GUID of the Server to Get allDevices for.\n\n\n\nstring[] ServerName: Name of the Server to Get allDevices for.\n\n\n\nGuid[] DiskLocatorId: GUID of the DiskLocator to Getall Devices for.\n\n\n\nGuid[] SiteViewId: GUID of the Site View to Get allDevices for.\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nGuid[] FarmViewId: GUID of the Farm View to Get allDevices for.\n\n\n\nstring[] FarmViewName: Name of the Farm View to Getall Devices for.\n\n\n\nstring[] BdmBoot: Include only the BDM Devices whenset to 1. PXE devices if set to 0. If not included, all Devices are returned.\n\n\n\nor one of these optional ; resolutions\n\n\n\nstring[] CollectionName: Name of the Collection toGet all Devices for.\n\n\n\nstring[] DiskLocatorName: Name of the DiskLocator toGet all Devices for.\n\n\n\nstring[] SiteViewName: Name of the Site View to Getall Devices for.\n\n\n\nOptional\n\n\n\nSwitchParameter OnlyActive: If -OnlyActive isspecified, include only the active Devices, otherwise all Devices are returned.Only active Devices are always returned for ServerId, ServerName, or version.\n\n\n\nuint MakLicenseActivated: Optional MAK licensingindicator value to only return active Devices for. Values are: 0 (MAK notused), 1 (Not Activated), 2 (Activated).\n\n\n\nuint Version: Version of the Disk to Get all activeDevices for. This is used with DiskLocatorId or DiskLocatorName.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceName, CollectionId, ServerId, DiskLocatorId,SiteViewId, SiteId or FarmViewId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or DeviceId: Read-only GUID that uniquelyidentifies this Device.\n\n\n\nName or DeviceName: Computer name with no spaces.ASCII computer name characters Max Length=15\n\n\n\nCollectionId: GUID of the Collection this Device isto be a member of. It is not used with CollectionName.\n\n\n\nCollectionName: Name of the Collection this Deviceis to be a member of. SiteName or SiteId must also be used.\n\n\n\nSiteId: GUID of the Site the CollectionName is to bea member of. This or SiteName is used with CollectionName.\n\n\n\nSiteName: Name of the Site the CollectionName is tobe a member of. This or SiteId is used with CollectionName.\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nDeviceMac: Ethernet address can have the formXX-XX-XX-XX-XX-XX. Uniquely identifies the Device.\n\n\n\nBootFrom: Device to boot from. Choices are 1 forvDisk, 2 for Hard Disk, and 3 for Floppy. This cannot be Set for a Device withPersonal vDisk. Min=1, Max=3, Default=1\n\n\n\nClassName: Used by Automatic Update feature to matchnew versions of Disks to a Device. This cannot be Set for a Device withPersonal vDisk. Default=\"\" Max Length=41\n\n\n\nPort: UDP port to use with Stream Service. Min=1025,Max=65534, Default=6901\n\n\n\nEnabled: True when it can be booted, falseotherwise. This cannot be Set for a Device with Personal vDisk. Default=true\n\n\n\nLocalDiskEnabled: If there is a local disk menuchoice for the Device, this is true. This cannot be Set for a Device withPersonal vDisk. Default=false\n\n\n\nRole: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999\n\n\n\nAuthentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. This cannotbe Set for a Device with Personal vDisk. Min=0, Max=2, Default=0\n\n\n\nUser: Name of user to authenticate before the bootprocess continues. This cannot be Set for a Device with Personal vDisk.Default=\"\" ASCII Max Length=20\n\n\n\nPassword: Password of user to authenticate beforethe boot process continues. This cannot be Set for a Device with PersonalvDisk. Default=\"\" ASCII Max Length=100\n\n\n\nActive: True if the Device is currently active,false otherwise. Default=false\n\n\n\nTemplate: True if the Device is the template in itsCollection, false otherwise. Default=false\n\n\n\nAdTimestamp: The time the Active Directory machineaccount password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nAdSignature: The signature of the Active Directorymachine account password. Do not set this field, it is only set internally byPVS. Default=0\n\n\n\nLogLevel: Level to perform logging at. Values are: 0(None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6 (Trace).Min=0, Max=6, Default=0\n\n\n\nDomainName: Fully qualified name of the domain thatthe Device belongs to. Do not set this field, it is only set internally by PVS.Default=\"\" Max Length=255\n\n\n\nDomainObjectSID: The value of the objectSID ADattribute of the same name for the Device's computer account. Do not set thisfield, it is only set internally by PVS. Default=\"\" Max Length=186\n\n\n\nDomainControllerName: The name of the DC used tocreate the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000\n\n\n\nDomainTimeCreated: The time that the computeraccount was created. Has the date and time including milliseconds. Do not setthis field, it is only set internally by PVS. Default=Empty\n\n\n\nType: 1 when it performs test of Disks, 2 when itperforms maintenance on Disks, 3 when it has a Personal vDisk, 4 when it has aPersonal vDisk and performs tests, 0 otherwise. Min=0, Max=4, Default=0\n\n\n\nPvdDriveLetter: Read-only Personal vDisk Driveletter. Range is E to U and W to Z. Default=\"\" Max Length=1\n\n\n\nLocalWriteCacheDiskSize: The size in GB to formatthe Device cache file disk. If the value is 0, then the disk is not formatted.Min=0, Max=2048, Default=0\n\n\n\nVirtualHostingPoolId: GUID that uniquely identifiesthe Virtual Hosting Pool for a VM. This is needed when Adding a VM device.Default=00000000-0000-0000-0000-000000000000\n\n\n\nTemporaryVersionSet: Read-only true when temporaryversion is set. Default=false\n\n\n\nBdmBoot: Use PXE boot when set to false, BDM bootwhen set to true. Default is PXE Default=false\n\n\n\nBdmType: Use PXE boot when set to 0, BDM (Bios) bootwhen set to 1 and BDM (Uefi) boot when set to 2.  Default=0\n\n\n\nBdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3 useUSB. Default=0\n\n\n\nBdmUpdated: Timestamp of the last BDM boot diskupdate. Default=Empty\n\n\n\nBdmCreated: Timstamp when BDM device was created  Default=Empty\n\n\n\nXsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000\n\n\n\nXsPvsProxyEnabled: Enable XenServer PVS proxy whenset to true Default=false\n\n\n\nIp: Read-only IP of the Device. It is equal to0.0.0.0 if the Device is not active.\n\n\n\nServerPortConnection: Read-only Port of the Serverthat the Device is using. It is equal to 0 if the Device is not active.Default=0\n\n\n\nServerIpConnection: Read-only IP of the Server thatthe Device is using. It is equal to 0.0.0.0 if the Device is not active.\n\n\n\nServerId: Read-only GUID of the Server that theDevice is using. It is equal to 00000000-0000-0000-0000-000000000000 if theDevice is not active.\n\n\n\nServerName: Read-only Name of the Server that theDevice is using. It is equal to \"\" if the Device is not active.\n\n\n\nDiskLocatorId: Read-only GUID of the Disk Locatorthat the Device is using. It is equal to 00000000-0000-0000-0000-000000000000if the Device is not active.\n\n\n\nDiskLocatorName: Read-only name of the Disk LocatorFile that the Device is using. It is equal to the list of Disk Locator namesfor the Device if the Device is not active.\n\n\n\nDiskVersion: Read-only version of the Disk LocatorFile that the Device is using. It is equal to 0 if the Device is not active.Default=0\n\n\n\nDiskVersionAccess: State of the Disk Version. Valuesare: 0 (Production), 1 (Maintenance), 2 (MaintenanceHighestVersion), 3(Override), 4 (Merge), 5 (MergeMaintenance), 6 (MergeTest), and 7 (Test). It isequal to 0 if the Device is not active. Default=0\n\n\n\nDiskFileName: Name of the Disk File including theextension. It is equal to \"\" if the Device is not active.\n\n\n\nStatus: 1 or 2 numbers in the format n,n. They arethe number of retries and if ram cache is being used, ram cache percent used.It is equal to \"\" if the Device is not active.\n\n\n\nLicenseType: 0 when None, 1 for Desktop, 2 forServer, 5 for OEM SmartClient, 6 for XenApp, 7 for XenDesktop. It is equal to 0if the Device is not active. Default=0\n\n\n\nMakLicenseActivated: Read-only indicator if MAKlicensing is being used and is activated. Values are: 0 (MAK not used), 1 (NotActivated), 2 (Activated). It is equal to 0 if the Device is not active.Default=0\n\n\n\nModel: Oem Only: Read-only model of the computer.Values are OptiPlex 745, 755, 320, 760, FX160, or Default. It is equal to\"\" if the Device is not active.\n\n\n\nLicense: Oem Only: Read-only type of the license.Values are 0 when None, 1 or 2 when Desktop. It is equal to 0 if the Device isnot active. Default=0\n\n\n\nPvsDeviceInfo[]: If successful, the PvsDeviceInfoobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsDeviceInfo for Farm\n\n\nGet all PvsDeviceInfo for the Farm.\n\n\n\nGet-PvsDeviceInfo\n\n\n\nEXAMPLE 2: Get PvsDeviceInfo for FarmView\n\n\nGet all PvsDeviceInfo for the FarmView namedtheFarmView.\n\n\n\nGet-PvsDeviceInfo -FarmViewName theFarmView\n\n\n\nEXAMPLE 3: Get PvsDeviceInfo for Site\n\n\nGet all PvsDeviceInfo for the Site named theSite.\n\n\n\nGet-PvsDeviceInfo -SiteName theSite\n\n\n\nEXAMPLE 4: Get PvsDeviceInfo for SiteView\n\n\nGet all PvsDeviceInfo for the SiteView namedtheSiteView in the Site named theSite.\n\n\n\nGet-PvsDeviceInfo -SiteViewName theSiteView-SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 5: Get PvsDeviceInfo for Collection\n\n\nGet all PvsDeviceInfo for the Collection namedtheCollection in the Site named theSite.\n\n\n\nGet-PvsDeviceInfo -CollectionName theCollection-SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 6: Get PvsDeviceInfo for DiskLocator\n\n\nGet all PvsDeviceInfo for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsDeviceInfo -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 7: Get PvsDeviceInfo for Device\n\n\nGet the PvsDeviceInfo for the Device namedtheDevice.\n\n\n\nGet-PvsDeviceInfo -Name theDevice\n\n\n\nEXAMPLE 8: Get PvsDeviceInfo and Enable\n\n\nGet all PvsDeviceInfo that are not Enabled and thenEnables them.\n\n\n\nGet-PvsDeviceInfo -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nGet-PvsDevicePersonality\n\n\nGet the Device Personality names and values.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device.\n\n\n\nstring[] Name or DeviceName: Name of the Device.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nThese fields exist in the DevicePersonality arraywithin each PvsDevicePersonality returned.\n\n\n\nEach array item is a PvsDevicePersonalityListobject.\n\n\n\nName: Name of the Device personality item. MaxLength=250\n\n\n\nValue: Value for the Device personality item. MaxLength=1000\n\n\n\nPvsDevicePersonality[]: If successful, thePvsDevicePersonality object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsDevicePersonality for Device\n\n\nGet all PvsDevicePersonality for the Device namedtheDevice.\n\n\n\nGet-PvsDevicePersonality -Name theDevice\n\n\n\nEXAMPLE 2: Get PvsDevicePersonality for Device MAC\n\n\nGet all PvsDevicePersonality for the Device with MAC02-50-F2-00-00-01.\n\n\n\nGet-PvsDevicePersonality -DeviceMac\"02-50-F2-00-00-01\"\n\n\n\nGet-PvsDeviceStatus\n\n\nGet the DeviceStatus fields for a Device or allDevices for a Server, Disk Locator, or Farm. All Devices are returned if noparameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device to Getstatus for.\n\n\n\nstring[] Name or DeviceName: Name of Device to Getstatus for.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toGet status for.\n\n\n\nGuid[] ServerId: GUID of the Server to Get allDevice Status for.\n\n\n\nstring[] ServerName: Name of the Server to Get allDevice Status for.\n\n\n\nGuid[] DiskLocatorId: GUID of the Disk Locator toGet all DeviceStatus for.\n\n\n\nGuid[] CollectionId: GUID of the Collection to Getall DeviceStatus for.\n\n\n\nor one of these optional ; resolutions\n\n\n\nstring[] DiskLocatorName: Name of the Disk LocatorFile to Get all DeviceStatus for.\n\n\n\nstring[] CollectionName: Name of the Collection toGet all DeviceStatus for.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId, ServerId, DiskLocatorId or CollectionId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or DeviceId: Read-only GUID of the Device. Canbe used with Get Device.\n\n\n\nName or DeviceName: Read-only Name of the Device.Can be used with Get Device.\n\n\n\nIp: Read-only IP of the Device.\n\n\n\nServerPortConnection: Read-only Port of the Serverthat the Device is using. Default=0\n\n\n\nServerIpConnection: Read-only IP of the Server thatthe Device is using.\n\n\n\nServerId: Read-only GUID of the Server that theDevice is using.\n\n\n\nServerName: Read-only Name of the Server that the Deviceis using.\n\n\n\nDiskLocatorId: Read-only GUID of the Disk Locatorthat the Device is using.\n\n\n\nDiskLocatorName: Read-only name of the Disk LocatorFile that the Device is using.\n\n\n\nDiskVersion: Read-only version of the Disk LocatorFile that the Device is using. Default=0\n\n\n\nDiskVersionAccess: State of the Disk Version. Valuesare: 0 (Production), 1 (Maintenance), 2 (MaintenanceHighestVersion), 3(Override), 4 (Merge), 5 (MergeMaintenance), 6 (MergeTest), and 7 (Test)Default=0\n\n\n\nDiskFileName: Name of the Disk File including theextension.\n\n\n\nStatus: 1 or 2 numbers in the format n,n. They arethe number of retries and if ram cache is being used, ram cache percent used.\n\n\n\nLicenseType: 0 when None, 1 for Desktop, 2 forServer, 5 for OEM SmartClient, 6 for XenApp, 7 for XenDesktop. Default=0\n\n\n\nMakLicenseActivated: Read-only indicator if MAKlicensing is being used and is activated. Values are: 0 (MAK not used), 1 (NotActivated), 2 (Activated). Default=0\n\n\n\nPvsDeviceStatus[]: If successful, thePvsDeviceStatus object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsDeviceStatus for Farm\n\n\nGet all PvsDeviceStatus for the Farm.\n\n\n\nGet-PvsDeviceStatus\n\n\n\nEXAMPLE 2: Get PvsDeviceStatus for FarmView\n\n\nGet all PvsDeviceStatus for the FarmView namedtheFarmView.\n\n\n\nGet-PvsDeviceStatus -FarmViewName theFarmView\n\n\n\nEXAMPLE 3: Get PvsDeviceStatus for Site\n\n\nGet all PvsDeviceStatus for the Site named theSite.\n\n\n\nGet-PvsDeviceStatus -SiteName theSite\n\n\n\nEXAMPLE 4: Get PvsDeviceStatus for SiteView\n\n\nGet all PvsDeviceStatus for the SiteView namedtheSiteView in the Site named theSite.\n\n\n\nGet-PvsDeviceStatus -SiteViewName theSiteView-SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 5: Get PvsDeviceStatus for Collection\n\n\nGet all PvsDeviceStatus for the Collection namedtheCollection in the Site named theSite.\n\n\n\nGet-PvsDeviceStatus -CollectionName theCollection-SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 6: Get PvsDeviceStatus for DiskLocator\n\n\nGet all PvsDeviceStatus for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsDeviceStatus -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 7: Get PvsDeviceStatus for Device\n\n\nGet the PvsDeviceStatus for the Device namedtheDevice.\n\n\n\nGet-PvsDeviceStatus -Name theDevice\n\n\n\nGet-PvsDirectory\n\n\nLook for Directories or Drives on the Serverspecified. Return a String array of the Directories or Drives found.\n\n\n\nOne of these required\n\n\n\nGuid Guid or ServerId: GUID of the Server to get alist of Directories or Drives.\n\n\n\nstring Name or ServerName: Name of the Server to geta list of Directories or Drives.\n\n\n\nOptional\n\n\n\nstring Path: Path to get list of Directories for. Ifnot specified, the Drives are returned.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId\n\n\n\nstring[]: If successful, the array of directorynames is returned.\n\n\n\nEXAMPLE 1: Get-PvsDirectory for Name\n\n\nGet-PvsDirectory -Name theServer -Path\"C:\\directory\"\n\n\n\nEXAMPLE 2: Get-PvsDirectory for PvsServer Using Pipe\n\n\nThe Get-PvsServer output is piped to theGet-PvsDirectory.\n\n\n\nGet-PvsServer -Name theServer -Fields Guid |Get-PvsDirectory -Path \"C:\\directory\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGet-PvsDisk\n\n\nGet the fields for a single disk.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nClass: Class of the Disk. Max Length=40\n\n\n\nImageType: Type of this image (software type). MaxLength=40\n\n\n\nDiskSize: Read-only size of the image. The value is0 when it is not available. Default=0\n\n\n\nVhdBlockSize: Block size in KB. For VHD it is onlyused with Dynamic type. Tested sizes for VHD are 512, 2048, and 16384. VHDMin=512, Max=16384, Default=2048. For VHDX it is used for all types. Testedsize for VHDX is 32768. VHDX Min=1024, Max= 262144, Default=32768. Default=0\n\n\n\nLogicalSectorSize: Logical Sector Size. Values are:512, 4096, Default=512\n\n\n\nWriteCacheSize: RAM cache size (MB). Not 0 when usedwith Cache in Device RAM, and Cache in Device RAM with Overflow on Hard Disk. Avalue of 0 will disable the RAM use for Cache in Device RAM with Overflow onHard Disk. Min=0, Max=131072, Default=0\n\n\n\nAutoUpdateEnabled: Automatically update this imagefor matching Devices when set to true. Default false\n\n\n\nActivationDateEnabled: Use activation date toactivate image when set to true. Default false\n\n\n\nAdPasswordEnabled: Enable AD password managementwhen set to true.\n\n\n\nHaEnabled: Enable HA when set to true.\n\n\n\nPrinterManagementEnabled: Invalid printers will bedeleted from the Device when set to true.\n\n\n\nWriteCacheType: 0 (Private), (other values arestandard image) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache onDevice Hard Disk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9(Cache in Device RAM with Overflow on Hard Disk). Min=0, Max=9, Default=0\n\n\n\nLicenseMode: 0 (None), 1 (Multiple Activation Key),or 2 (Key Management Service). Min=0, Max=2, Default=0\n\n\n\nActiveDate: Date to activate the disk ifAutoUpdateEnabled and activationDateEnabled are true. Has the date. Empty whenthe AutoUpdateEnabled or activationDateEnabled are false.\n\n\n\nLongDescription: Description of the Disk. MaxLength=399\n\n\n\nSerialNumber: User defined serial number. MaxLength=36\n\n\n\nDate: User defined date. Max Length=40\n\n\n\nAuthor: User defined author. Max Length=40\n\n\n\nTitle: User defined title. Max Length=40\n\n\n\nCompany: User defined company. Max Length=40\n\n\n\nInternalName: User defined name. Max Length=63\n\n\n\nOriginalFile: User defined original file. MaxLength=127\n\n\n\nHardwareTarget: User defined hardware target. MaxLength=127\n\n\n\nMajorRelease: User defined major release number.Min=0, Max=4294967295, Default=0\n\n\n\nMinorRelease: User defined minor release number.Min=0, Max=4294967295, Default=0\n\n\n\nBuild: User defined build number. Min=0,Max=4294967295, Default=0\n\n\n\nVHDX: If VHDX is true, the format of the image isVHDX. Otherwise it is VHD. Default=false\n\n\n\nPvsDisk[]: If successful, the PvsDisk object(s) arereturned.\n\n\n\nEXAMPLE 1: Get PvsDisk for DiskLocator\n\n\nGet the PvsDisk for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsDisk -Name theDiskLocator -SiteName theSite-StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nGet-PvsDiskInfo\n\n\nGet the fields for a Disk and Disk Locator or allDisks and Disk Locators for a Device, Server, Store, Site, or Farm. All Disksand DiskLocators are returned if no parameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to Get.\n\n\n\nGuid[] DeviceId: GUID of the Device to Get allDiskLocators for.\n\n\n\nstring[] DeviceName: Name of the Device to Get allDiskLocators for.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toGet all DiskLocators for.\n\n\n\nGuid[] ServerId: GUID of the Server to Get allDiskLocators for.\n\n\n\nstring[] ServerName: Name of the Server to Get allDiskLocators for.\n\n\n\nGuid[] UpdateTaskId: GUID of the Update Task to Getall DiskLocators for.\n\n\n\nGuid[] SiteId: GUID of the Site to Get allDiskLocators for.\n\n\n\nstring[] SiteName: Name of the Site to Get allDiskLocators for.\n\n\n\nor one of these optional ; resolutions\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Get.\n\n\n\nGuid[] StoreId: GUID of the Store to Get allDiskLocators for.\n\n\n\nstring[] StoreName: Name of the Store to Get allDiskLocators for.\n\n\n\nstring[] UpdateTaskName: Name of the Update Task toGet all DiskLocators for.\n\n\n\nOne of these optional\n\n\n\nSwitchParameter Single: If -Single is specified,include single server connection. If this and All are not included, bothconnection types are included.\n\n\n\nSwitchParameter All: If -All is specified, includeall server connections for the store. If this and Single are not included, bothconnection types are included.\n\n\n\nOptional\n\n\n\nSwitchParameter OnlyActive: If -OnlyActive isspecified, include only the active DiskLocators. If not included, allDiskLocators are returned.\n\n\n\nSwitchParameter UpdateDevice: If -UpdateDevice isspecified, include only DiskLocators that have an Update Device.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to Get allDiskLocators for.\n\n\n\nstring[] SiteName: Name of the Site to Get allDiskLocators for.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store to Get allDiskLocators for.\n\n\n\nstring[] StoreName: Name of the Store to Get allDiskLocators for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId, DeviceId, ServerId, UpdateTaskId orSiteId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or DiskLocatorId: Read-only GUID that uniquelyidentifies this Disk Locator.\n\n\n\nName or DiskLocatorName: Name of the Disk LocatorFile. It is unique within the Store. ASCII Max Length=52\n\n\n\nSiteId: GUID of the Site this DiskLocator is to be amember of. It is not used with SiteName.\n\n\n\nSiteName: Name of the Site this DiskLocator is to bea member of. It is not used with SiteId.\n\n\n\nStoreId: GUID of the Store that this Disk Locator isa member of. SiteName or SiteId must also be used. It is not used withStoreName.\n\n\n\nStoreName: Name of the Store that this Disk Locatoris a member of. SiteName or SiteId must also be used. It is not used withStoreId.\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nMenuText: Text that is displayed in the Boot Menu.If this field has no value, the name value is used. Default=\"\" ASCIIMax Length=64\n\n\n\nServerId: GUID of the single Server that this DiskLocator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nServerName: Name of the single Server that this DiskLocator is assigned to. It is not used with ServerId. Default=\"\"\n\n\n\nEnabled: True when this disk can be booted, falseotherwise. Default=true\n\n\n\nRole: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 999 is read-only. Default=999\n\n\n\nMapped: True if the Disk is currently mapped, falseotherwise. Default=false\n\n\n\nEnabledForDevice: True when this disk is enabled forthe Device specified, false otherwise. This is only returned when a Device isspecified. Default=true\n\n\n\nActive: True if the DiskLocator is currently active,false otherwise. Default=false\n\n\n\nRebalanceEnabled: True when this Server canautomatically rebalance Devices, false otherwise. Default=false\n\n\n\nRebalanceTriggerPercent: Percent over fair load thattriggers a dynamic Device rebalance. Min=5, Max=5000, Default=25\n\n\n\nSubnetAffinity: Qualifier for subnet affinity whenassigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2, Default=0\n\n\n\nDiskUpdateDeviceId: GUID of the DiskUpdateDevicethat is used when updates are performed.Default=00000000-0000-0000-0000-000000000000\n\n\n\nDiskUpdateDeviceName: Name of the DiskUpdateDevicethat is used when updates are performed. Default=\"\"\n\n\n\nTemporaryVersionSet: Read-only true when temporaryversion(s) are set. Default=false\n\n\n\nClass: Class of the Disk. Max Length=40\n\n\n\nImageType: Type of this image (software type). MaxLength=40\n\n\n\nDiskSize: Read-only size of the image. The value is0 when it is not available. Default=0\n\n\n\nVhdBlockSize: Block size in KB. For VHD it is onlyused with Dynamic type. Tested sizes for VHD are 512, 2048, and 16384. VHDMin=512, Max=16384, Default=2048. For VHDX it is used for all types. Testedsize for VHDX is 32768. VHDX Min=1024, Max= 262144, Default=32768. Default=0\n\n\n\nLogicalSectorSize: Logical Sector Size. Values are:512, 4096, Default=512\n\n\n\nWriteCacheSize: RAM cache size (MB). Not 0 when usedwith Cache in Device RAM, and Cache in Device RAM with Overflow on Hard Disk. Avalue of 0 will disable the RAM use for Cache in Device RAM with Overflow onHard Disk. Min=0, Max=131072, Default=0\n\n\n\nAutoUpdateEnabled: Automatically update this imagefor matching Devices when set to true. Default false\n\n\n\nActivationDateEnabled: Use activation date toactivate image when set to true. Default false\n\n\n\nAdPasswordEnabled: Enable AD password managementwhen set to true.\n\n\n\nHaEnabled: Enable HA when set to true.\n\n\n\nPrinterManagementEnabled: Invalid printers will bedeleted from the Device when set to true.\n\n\n\nWriteCacheType: 0 (Private), (other values arestandard image) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache onDevice Hard Disk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9(Cache in Device RAM with Overflow on Hard Disk). Min=0, Max=9, Default=0\n\n\n\nLicenseMode: 0 (None), 1 (Multiple Activation Key),or 2 (Key Management Service). Min=0, Max=2, Default=0\n\n\n\nActiveDate: Date to activate the disk ifAutoUpdateEnabled and activationDateEnabled are true. Has the date. Empty whenthe AutoUpdateEnabled or activationDateEnabled are false.\n\n\n\nLongDescription: Description of the Disk. MaxLength=399\n\n\n\nSerialNumber: User defined serial number. MaxLength=36\n\n\n\nDate: User defined date. Max Length=40\n\n\n\nAuthor: User defined author. Max Length=40\n\n\n\nTitle: User defined title. Max Length=40\n\n\n\nCompany: User defined company. Max Length=40\n\n\n\nInternalName: User defined name. Max Length=63\n\n\n\nOriginalFile: User defined original file. MaxLength=127\n\n\n\nHardwareTarget: User defined hardware target. MaxLength=127\n\n\n\nMajorRelease: User defined major release number.Min=0, Max=4294967295, Default=0\n\n\n\nMinorRelease: User defined minor release number.Min=0, Max=4294967295, Default=0\n\n\n\nBuild: User defined build number. Min=0,Max=4294967295, Default=0\n\n\n\nVHDX: If VHDX is true, the format of the image isVHDX. Otherwise it is VHD. Default=false\n\n\n\nDeviceCount: Read-only count of Devices. Default=0\n\n\n\nLocked: True if the Disk is currently locked, falseotherwise. Default=false\n\n\n\nPvsDiskInfo[]: If successful, the PvsDiskInfoobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsDiskInfo for Farm\n\n\nGet all PvsDiskInfo for the Farm.\n\n\n\nGet-PvsDiskInfo\n\n\n\nEXAMPLE 2: Get PvsDiskInfo for Site\n\n\nGet all PvsDiskInfo for the Site named theSite.\n\n\n\nGet-PvsDiskInfo -SiteName theSite\n\n\n\nEXAMPLE 3: Get PvsDiskInfo for Site and Store\n\n\nGet all PvsDiskInfo for the Site named theSite andStore named theStore.\n\n\n\nGet-PvsDiskInfo -SiteName theSite -StoreNametheStore\n\n\n\nEXAMPLE 4: Get PvsDiskInfo for DiskLocator\n\n\nGet the PvsDiskInfo for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsDiskInfo -Name theDiskLocator -SiteNametheSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 5: Get PvsDiskInfo and Enable\n\n\nGet all PvsDiskInfo that are not Enabled and thenEnables them.\n\n\n\nGet-PvsDiskInfo -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsDiskLocator\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nGet-PvsDiskInventory\n\n\nGet the fields for Inventory Status of a DiskVersion or all Disk Versions for a Disk Locator.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to Get Disk Version Inventory of.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator to Get Disk Version Inventory of.\n\n\n\nOptional\n\n\n\nuint Version: Specific Version to Get.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\n(DiskLocatorId and Version) or DiskLocatorId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nVersion: Version number. The base disk is version 0,the other version numbers are in part of the file name.\n\n\n\nServerId: GUID of the Server that the Disk VersionInventory is being reported about.\n\n\n\nServerName: Name of the Server that the Disk VersionInventory is being reported about.\n\n\n\nFilePath: Path used to access the disk version fromthe Server. Empty if the information is not available.\n\n\n\nFileTime: Date/Time of the date version file. Hasthe date and time without milliseconds. Empty if the information is notavailable.\n\n\n\nPropertiesTime: Date/Time of the disk properties.Has the date and time without milliseconds. Empty if the information is notavailable.\n\n\n\nState: The number code of the inventory state.Values are: 0 (Up to date), 1 (version file is missing), 2 (version file is outof date), 3 (properties are missing), 4 (properties are out of date), 5 (serveris not reachable).\n\n\n\nActive: 1 if the Server is currently active, 2 ifunknown, and 0 otherwise.\n\n\n\nPvsDiskInventory[]: If successful, thePvsDiskInventory object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsDiskInventory for DiskLocator\n\n\nGet all PvsDiskInventory for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsDiskInventory -Name theDiskLocator -SiteNametheSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nGet-PvsDiskLocator\n\n\nGet the fields for a Disk Locator or all DiskLocators for a Device, Server, Store, Site, or Farm. All DiskLocators arereturned if no parameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to Get.\n\n\n\nGuid[] DeviceId: GUID of the Device to Get allDiskLocators for.\n\n\n\nstring[] DeviceName: Name of the Device to Get allDiskLocators for.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toGet all DiskLocators for.\n\n\n\nGuid[] ServerId: GUID of the Server to Get allDiskLocators for.\n\n\n\nstring[] ServerName: Name of the Server to Get allDiskLocators for.\n\n\n\nGuid[] UpdateTaskId: GUID of the Update Task to Getall DiskLocators for.\n\n\n\nGuid[] SiteId: GUID of the Site to Get allDiskLocators for.\n\n\n\nstring[] SiteName: Name of the Site to Get allDiskLocators for.\n\n\n\nor one of these optional ; resolutions\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Get.\n\n\n\nGuid[] StoreId: GUID of the Store to Get allDiskLocators for.\n\n\n\nstring[] StoreName: Name of the Store to Get allDiskLocators for.\n\n\n\nstring[] UpdateTaskName: Name of the Update Task toGet all DiskLocators for.\n\n\n\nOne of these optional\n\n\n\nSwitchParameter Single: If -Single is specified,include single server connection. If this and All are not included, bothconnection types are included.\n\n\n\nSwitchParameter All: If -All is specified, includeall server connections for the store. If this and Single are not included, bothconnection types are included.\n\n\n\nOptional\n\n\n\nSwitchParameter OnlyActive: If -OnlyActive isspecified, include only the active DiskLocators. If not included, allDiskLocators are returned.\n\n\n\nSwitchParameter UpdateDevice: If -UpdateDevice isspecified, include only DiskLocators that have an Update Device.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to Get allDiskLocators for.\n\n\n\nstring[] SiteName: Name of the Site to Get allDiskLocators for.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store to Get allDiskLocators for.\n\n\n\nstring[] StoreName: Name of the Store to Get allDiskLocators for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId, DeviceId, ServerId, UpdateTaskId,SiteId or StoreId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or DiskLocatorId: Read-only GUID that uniquelyidentifies this Disk Locator.\n\n\n\nName or DiskLocatorName: Name of the Disk LocatorFile. It is unique within the Store. ASCII Max Length=52\n\n\n\nSiteId: GUID of the Site this DiskLocator is to be amember of. It is not used with SiteName.\n\n\n\nSiteName: Name of the Site this DiskLocator is to bea member of. It is not used with SiteId.\n\n\n\nStoreId: GUID of the Store that this Disk Locator isa member of. SiteName or SiteId must also be used. It is not used withStoreName.\n\n\n\nStoreName: Name of the Store that this Disk Locatoris a member of. SiteName or SiteId must also be used. It is not used withStoreId.\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nMenuText: Text that is displayed in the Boot Menu.If this field has no value, the name value is used. Default=\"\" ASCIIMax Length=64\n\n\n\nServerId: GUID of the single Server that this DiskLocator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nServerName: Name of the single Server that this DiskLocator is assigned to. It is not used with ServerId. Default=\"\"\n\n\n\nEnabled: True when this disk can be booted, falseotherwise. Default=true\n\n\n\nRole: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 999 is read-only. Default=999\n\n\n\nMapped: True if the Disk is currently mapped, falseotherwise. Default=false\n\n\n\nEnabledForDevice: True when this disk is enabled forthe Device specified, false otherwise. This is only returned when a Device isspecified. Default=true\n\n\n\nActive: True if the DiskLocator is currently active,false otherwise. Default=false\n\n\n\nRebalanceEnabled: True when this Server canautomatically rebalance Devices, false otherwise. Default=false\n\n\n\nRebalanceTriggerPercent: Percent over fair load thattriggers a dynamic Device rebalance. Min=5, Max=5000, Default=25\n\n\n\nSubnetAffinity: Qualifier for subnet affinity whenassigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2, Default=0\n\n\n\nDiskUpdateDeviceId: GUID of the DiskUpdateDevicethat is used when updates are performed.Default=00000000-0000-0000-0000-000000000000\n\n\n\nDiskUpdateDeviceName: Name of the DiskUpdateDevicethat is used when updates are performed. Default=\"\"\n\n\n\nTemporaryVersionSet: Read-only true when temporaryversion(s) are set. Default=false\n\n\n\nPvsDiskLocator[]: If successful, the PvsDiskLocatorobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsDiskLocator for Farm\n\n\nGet all PvsDiskLocator for the Farm.\n\n\n\nGet-PvsDiskLocator\n\n\n\nEXAMPLE 2: Get PvsDiskLocator for Site\n\n\nGet all PvsDiskLocator for the Site named theSite.\n\n\n\nGet-PvsDiskLocator -SiteName theSite\n\n\n\nEXAMPLE 3: Get PvsDiskLocator for Site and Store\n\n\nGet all PvsDiskLocator for the Site named theSiteand Store named theStore.\n\n\n\nGet-PvsDiskLocator -SiteName theSite -StoreNametheStore\n\n\n\nEXAMPLE 4: Get PvsDiskLocator for DiskLocator\n\n\nGet the PvsDiskLocator for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 5: Get PvsDiskLocator and Enable\n\n\nGet all PvsDiskLocator that are not Enabled and thenEnables them.\n\n\n\nGet-PvsDiskLocator -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsDiskLocator\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nGet-PvsDiskLocatorCount\n\n\nGet count of Disk Locators for a Site and Type.\n\n\n\nOne of these required\n\n\n\nGuid SiteId: GUID of the Site to get the DiskLocator Count of.\n\n\n\nstring SiteName: Name of the Site to get the DiskLocator Count of.\n\n\n\nOne of these optional\n\n\n\nSwitchParameter Single: If -Single is specified,include single server connection. If this and All are not included, bothconnection types are included.\n\n\n\nSwitchParameter All: If -All is specified, includeall server connections for the store. If this and Single are not included, bothconnection types are included.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nSiteId\n\n\n\nUInt32: If successful, the numeric value is returned\n\n\n\nEXAMPLE 1: Get-PvsDiskLocatorCount Returns the Number (or Count) ofPvsDiskLocator in PvsSite\n\n\nGet-PvsDiskLocatorCount -SiteName theSite\n\n\n\nGet-PvsDiskLocatorLock\n\n\nGet the fields for all the locks of a Disk Locator.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to Get the Locks.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of DiskLocator to Get the Locks.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nExclusive: True when the lock is exclusive, falsewhen it is shared. Default=false\n\n\n\nDeviceId: GUID of the Device that has the lock, willbe 00000000-0000-0000-0000-000000000000 if a Server has the lock.\n\n\n\nDeviceName: Name of the Device that has the lock,will not be included if a Server has the lock.\n\n\n\nServerId: GUID of the Server that has the lock, willbe 00000000-0000-0000-0000-000000000000 if a Device has the lock.\n\n\n\nServerName: Name of the Server that has the lock,will not be included if a Device has the lock.\n\n\n\nReadOnly: True when lock is because file system isread only, false when file system is read write Default=false\n\n\n\nPvsDiskLocatorLock[]: If successful, thePvsDiskLocatorLock object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsDiskLocatorLock for DiskLocator\n\n\nGet all PvsDiskLocatorLock for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsDiskLocatorLock -Name theDiskLocator-SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nGet-PvsDiskUpdateDevice\n\n\nGet the fields and status for a Disk Update Device,or all Disk Update Devices for a Site, Server, DiskLocator or Farm. All DiskUpdate Devices are returned if no parameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or DeviceId: GUID of the Disk UpdateDevice to Get.\n\n\n\nstring[] Name or DeviceName: Name of Disk UpdateDevice to Get.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the DiskUpdate Device to Get.\n\n\n\nGuid[] ServerId: GUID of the Server to Get all DiskUpdate Devices for.\n\n\n\nstring[] ServerName: Name of the Server to Get allDisk Update Devices for.\n\n\n\nGuid[] DiskLocatorId: GUID of the DiskLocator to Getthe Disk Update Device for.\n\n\n\nGuid[] UpdateTaskId: GUID of the Update Task to Getall Disk Update Devices for.\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nor one of these optional ; resolutions\n\n\n\nstring[] DiskLocatorName: Name of the DiskLocator toGet the Disk Update Device for.\n\n\n\nstring[] UpdateTaskName: Name of the Update Task toGet all Disk Update Devices for.\n\n\n\nOptional\n\n\n\nSwitchParameter OnlyActive: If -OnlyActive isspecified, include only the active Disk Update Devices. Only active Disk UpdateDevices are always returned for ServerId or ServerName.\n\n\n\nuint MakLicenseActivated: Optional MAK licensingindicator value to only return active Disk Update Devices for. Values are: 0(MAK not used), 1 (Not Activated), 2 (Activated).\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId, ServerId, DiskLocatorId, UpdateTaskId orSiteId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or DeviceId: Read-only GUID that uniquelyidentifies this Device.\n\n\n\nName or DeviceName: Computer name with no spaces.ASCII computer name characters Max Length=15\n\n\n\nVirtualHostingPoolId: GUID of the Virtual HostingPool. It is not used with VirtualHostingPoolName. Default=00000000-0000-0000-0000-000000000000\n\n\n\nVirtualHostingPoolName: Name of the Virtual HostingPool.\n\n\n\nDiskLocatorId: GUID of the Disk Locator to updatewith this Device.\n\n\n\nDiskLocatorName: Name of the Disk Locator File toupdate with this Device.\n\n\n\nSiteId: GUID of the Site this Disk Update Device isto be a member of.\n\n\n\nSiteName: Name of the Site this Disk Update Deviceis to be a member of.\n\n\n\nStoreId: GUID of the Store that the Disk Locator isa member of.\n\n\n\nStoreName: Name of the Store that the Disk Locatoris a member of.\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nDeviceMac: Ethernet address can have the formXX-XX-XX-XX-XX-XX. Uniquely identifies the Device.\n\n\n\nPort: UDP port to use with Stream Service. Min=1025,Max=65534, Default=6901\n\n\n\nActive: True if the Device is currently active,false otherwise. Default=false\n\n\n\nAdTimestamp: The time the Active Directory machineaccount password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nAdSignature: The signature of the Active Directorymachine account password. Do not set this field, it is only set internally byPVS. Default=0\n\n\n\nLogLevel: Level to perform logging at. Values are: 0(None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6 (Trace).Min=0, Max=6, Default=0\n\n\n\nDomainName: Fully qualified name of the domain thatthe Device belongs to. Do not set this field, it is only set internally by PVS.Default=\"\" Max Length=255\n\n\n\nDomainObjectSID: The value of the objectSID ADattribute of the same name for the Device's computer account. Do not set thisfield, it is only set internally by PVS. Default=\"\" Max Length=186\n\n\n\nDomainControllerName: The name of the DC used tocreate the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000\n\n\n\nDomainTimeCreated: The time that the computeraccount was created. Has the date and time including milliseconds. Do not setthis field, it is only set internally by PVS. Default=Empty\n\n\n\nIp: Read-only IP of the Device. It is equal to0.0.0.0 if the Device is not active.\n\n\n\nServerPortConnection: Read-only Port of the Serverthat the Device is using. It is equal to 0 if the Device is not active.Default=0\n\n\n\nServerIpConnection: Read-only IP of the Server thatthe Device is using. It is equal to 0.0.0.0 if the Device is not active.\n\n\n\nServerId: Read-only GUID of the Server that theDevice is using. It is equal to 00000000-0000-0000-0000-000000000000 if theDevice is not active.\n\n\n\nServerName: Read-only Name of the Server that theDevice is using. It is equal to \"\" if the Device is not active.\n\n\n\nDiskVersion: Read-only version of the Disk LocatorFile that the Device is using. It is equal to 0 if the Device is not active.Default=0\n\n\n\nStatus: 1 or 2 numbers in the format n,n. They arethe number of retries and if ram cache is being used, ram cache percent used.It is equal to \"\" if the Device is not active.\n\n\n\nLicenseType: 0 when None, 1 for Desktop, 2 forServer, 5 for OEM SmartClient, 6 for XenApp, 7 for XenDesktop. It is equal to 0if the Device is not active. Default=0\n\n\n\nMakLicenseActivated: Read-only indicator if MAKlicensing is being used and is activated. Values are: 0 (MAK not used), 1 (NotActivated), 2 (Activated). It is equal to 0 if the Device is not active.Default=0\n\n\n\nModel: Oem Only: Read-only model of the computer.Values are OptiPlex 745, 755, 320, 760, FX160, or Default. It is equal to\"\" if the Device is not active.\n\n\n\nLicense: Oem Only: Read-only type of the license.Values are 0 when None, 1 or 2 when Desktop. It is equal to 0 if the Device isnot active. Default=0\n\n\n\nPvsDiskUpdateDevice[]: If successful, thePvsDiskUpdateDevice object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsDiskUpdateDevice for Farm\n\n\nGet all PvsDiskUpdateDevice for the Farm.\n\n\n\nGet-PvsDiskUpdateDevice\n\n\n\nEXAMPLE 2: Get PvsDiskUpdateDevice for Site\n\n\nGet all PvsDiskUpdateDevice for the Site namedtheSite.\n\n\n\nGet-PvsDiskUpdateDevice -SiteName theSite\n\n\n\nEXAMPLE 3: Get PvsDiskUpdateDevice for Server\n\n\nGet all PvsDiskUpdateDevice for the Server namedtheServer.\n\n\n\nGet-PvsDiskUpdateDevice -ServerName theServer\n\n\n\nEXAMPLE 4: Get PvsDiskUpdateDevice for DiskLocator\n\n\nGet all PvsDiskUpdateDevice for the DiskLocatornamed theDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsDiskUpdateDevice -DiskLocatorNametheDiskLocator -SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 5: Get PvsDiskUpdateDevice for Device\n\n\nGet the PvsDiskUpdateDevice for the Device namedtheDevice.\n\n\n\nGet-PvsDiskUpdateDevice -Name theDevice\n\n\n\nEXAMPLE 6: Get PvsDiskUpdateDevice for Device MAC\n\n\nGet the PvsDiskUpdateDevice for the Device with MAC02-50-F2-00-00-01.\n\n\n\nGet-PvsDiskUpdateDevice -DeviceMac\"02-50-F2-00-00-01\"\n\n\n\nEXAMPLE 7: Get PvsDiskUpdateDevice for UpdateTask\n\n\nGet the PvsDiskUpdateDevice for the UpdateTask namedtheUpdateTask in the Site named theSite.\n\n\n\nGet-PvsDiskUpdateDevice -UpdateTaskNametheUpdateTask -SiteName theSite\n\n\n\nUpdateTaskId can be used instead of UpdateTaskNameso that the SiteName or SiteId is not also needed.\n\n\n\nGet-PvsDiskUpdateStatus\n\n\nGet the status of an Update Task, or all UpdateTasks for a Site or Farm. All Disk Update Tasks are returned if no parametersare passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] UpdateTaskId: GUID of the Update Task to Get.\n\n\n\nGuid[] DeviceId: GUID of the Disk Update Device toGet Disk Update Status for.\n\n\n\nstring[] DeviceName: Name of the Disk Update Deviceto Get Disk Update Status for.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the DiskUpdate Device to Get Disk Update Status for.\n\n\n\nGuid[] Guid or DiskUpdateTaskId: GUID of the DiskUpdate Task and Device relationship to Get Disk Update Status for.\n\n\n\nGuid[] SiteId: GUID of the Site to Get all UpdateTasks for. Also used with UpdateTaskName.\n\n\n\nstring[] SiteName: Name of the Site to Get allUpdate Tasks for. Also used with UpdateTaskName.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] UpdateTaskName: Name of the Update Task toGet.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to Get all UpdateTasks for. Also used with UpdateTaskName.\n\n\n\nstring[] SiteName: Name of the Site to Get allUpdate Tasks for. Also used with UpdateTaskName.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nUpdateTaskId, DeviceId or SiteId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or DiskUpdateTaskId: GUID that uniquelyidentifies this Update Task and Device relationship.\n\n\n\nUpdateTaskId: GUID that uniquely identifies theUpdate Task.\n\n\n\nUpdateTaskName: Name of the Update Task.\n\n\n\nDescription: User description of the Update Task.\n\n\n\nDiskLocatorId: GUID of the Disk Locator to update.\n\n\n\nName or DiskLocatorName: Name of the Disk LocatorFile to update.\n\n\n\nVirtualHostingPoolId: GUID of the Virtual HostingPool being used for the update.\n\n\n\nVirtualHostingPoolName: Name of the Virtual HostingPool being used for the update.\n\n\n\nDeviceId: GUID that Device being used to do theupdate.\n\n\n\nDeviceName: Name of the Device being used to do theupdate.\n\n\n\nSiteId: GUID of the Site that this Update Task Nameis a member of.\n\n\n\nSiteName: Name of the Site that this Update TaskName is a member of.\n\n\n\nStoreId: GUID of the Store that the Disk Locator isa member of.\n\n\n\nStoreName: Name of the Store that the Disk Locatoris a member of.\n\n\n\nPreviousResult: Status of the last run. Values are:0 (Ready), 1 (Update Pending), 2 (Preparing Image), 3 (Starting VM), 4 (UpdateIn Progress), 5 (Stopping VM), 6 (Submitting Image), 7 (Reverting Image), 8(Invalid), 9 (Aborted), 10 (Completed Successfully), 11 (No Updates) Min=0,Max=11, Default=0\n\n\n\nPreviousResultMessage: Message string that includesthe results of the last run. Default=\"\" Max Length=255\n\n\n\nCurrentStatus: Current status of the update. Valuesare: 0 (Ready), 1 (Update Pending), 2 (Preparing Image), 3 (Starting VM), 4(Update In Progress), 5 (Stopping VM), 6 (Submitting Image), 7 (RevertingImage), 8 (Invalid), 9 (Aborted), 10 (Completed Successfully), 11 (No Updates)Min=0, Max=11, Default=0\n\n\n\nCurrentStatusMessage: Message string that includesthe results of the run. Default=\"\" Max Length=255\n\n\n\nPvsDiskUpdateStatus[]: If successful, thePvsDiskUpdateStatus object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsDiskUpdateStatus for Farm\n\n\nGet all PvsDiskUpdateStatus for the Farm.\n\n\n\nGet-PvsDiskUpdateStatus\n\n\n\nEXAMPLE 2: Get PvsDiskUpdateStatus for Site\n\n\nGet all PvsDiskUpdateStatus for the Site namedtheSite.\n\n\n\nGet-PvsDiskUpdateStatus -SiteName theSite\n\n\n\nEXAMPLE 3: Get PvsDiskUpdateStatus for Server\n\n\nGet all PvsDiskUpdateStatus for the Server namedtheServer.\n\n\n\nGet-PvsDiskUpdateStatus -ServerName theServer\n\n\n\nEXAMPLE 4: Get PvsDiskUpdateStatus for DiskLocator\n\n\nGet all PvsDiskUpdateStatus for the DiskLocatornamed theDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsDiskUpdateStatus -DiskLocatorNametheDiskLocator -SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 5: Get PvsDiskUpdateStatus for Device\n\n\nGet the PvsDiskUpdateStatus for the Device namedtheDevice.\n\n\n\nGet-PvsDiskUpdateStatus -Name theDevice\n\n\n\nEXAMPLE 6: Get PvsDiskUpdateStatus for Device MAC\n\n\nGet the PvsDiskUpdateStatus for the Device with MAC02-50-F2-00-00-01.\n\n\n\nGet-PvsDiskUpdateStatus -DeviceMac \"02-50-F2-00-00-01\"\n\n\n\nEXAMPLE 7: Get PvsDiskUpdateStatus for UpdateTask\n\n\nGet the PvsDiskUpdateStatus for the UpdateTask namedtheUpdateTask in the Site named theSite.\n\n\n\nGet-PvsDiskUpdateStatus -UpdateTaskNametheUpdateTask -SiteName theSite\n\n\n\nUpdateTaskId can be used instead of UpdateTaskNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 8: Get PvsDiskUpdateStatus for DiskUpdateTaskId\n\n\nGet the PvsDiskUpdateStatus for the Device namedtheDevice then uses the DiskUpdateTaskId of the PvsDiskUpdateStatus to get thefuture Get-PvsDiskUpdateStatus.\n\n\n\n$u = Get-PvsDiskUpdateStatus -DeviceName theDevice-Fields DiskUpdateTaskId\n\n\n\nGet-PvsDiskUpdateStatus -Guid $u.DiskUpdateTaskId\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGet-PvsDiskVersion\n\n\nGet the fields for a Disk Version or all DiskVersions for a Disk Locator.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to Get Disk Versions of.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator to Get Disk Versions of.\n\n\n\nOne of these optional\n\n\n\nuint Version: Specific Version to Get.\n\n\n\nuint Type: When set to 1, get the Maintenance orMaintenanceHighestVersion access version if it exists. When set to 2, get theTest access versions if any exist. When set to 3, get the Override accessversion if it exists.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\n(DiskLocatorId and Version) or DiskLocatorId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nVersion: Read-only version number. The base disk isversion 0, the other version numbers are in part of the file name. Default=0\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nType: Read-only type of the Disk Version. Valuesare: 0 (Base), 1 (Manual), 2 (Automatic), 3 (Merge), and 4 (MergeBase) Min=0,Max=4, Default=0\n\n\n\nCreateDate: Read-only Date/Time that the DiskVersion was created. Default=getdate\n\n\n\nScheduledDate: Date/Time that the Disk Version isscheduled to become available. Has the date, hour and minute. Empty when thedisk version is made available immediately. Default=Empty\n\n\n\nDeleteWhenFree: Read-only true if the Disk Versionis no longer needed because of a merge. If not current booted by a Device, itcan be deleted. Default=false\n\n\n\nAccess: Read-only access of the Disk Version. Valuesare: 0 (Production), 1 (Maintenance), 2 (MaintenanceHighestVersion), 3(Override), 4 (Merge), 5 (MergeMaintenance), 6 (MergeTest), and 7 (Test) Min=0,Max=7, Default=0\n\n\n\nName or DiskFileName: Name of the Disk Fileincluding the extension. Default=\"\"\n\n\n\nDeviceCount: Read-only count of Devices. Default=0\n\n\n\nGoodInventoryStatus: True when the up to date fileis accessible by all Servers, false otherwise. Default=false\n\n\n\nTaskId: When a Merge is occurring, this will be setwith the task number of the process that is occurring. Default=\"\"\n\n\n\nCanDelete: Read-only true when the version can bedeleted. Default=false\n\n\n\nCanMerge: Read-only true when the version can beupdate merged. Will be set for the highest version number. Default=false\n\n\n\nCanMergeBase: Read-only true when the version can bebase merged. Will be set for the highest version number. Default=false\n\n\n\nCanPromote: Read-only true when the version can bepromoted. Default=false\n\n\n\nCanRevertTest: Read-only true when the version canbe reverted to Test Access. Default=false\n\n\n\nCanRevertMaintenance: Read-only true when theversion can be reverted to Maintenance Access. Default=false\n\n\n\nCanSetScheduledDate: Read-only true when the versioncan have the scheduled date modified. Default=false\n\n\n\nCanOverride: Read-only true when the version can beset as the Override. Default=false\n\n\n\nIsPending: Read-only true when the versionScheduledDate has not occurred. Default=false\n\n\n\nTemporaryVersionSet: Read-only true when temporaryversion(s) are set. Some changes cannot be made to the version when this isset. Default=false\n\n\n\nPvsDiskVersion[]: If successful, the PvsDiskVersionobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsDiskVersion for DiskLocator\n\n\nGet all PvsDiskVersion for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsDiskVersion -Name theDiskLocator -SiteNametheSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Get PvsDiskVersion for DiskLocator\n\n\nGet the first base PvsDiskVersion for theDiskLocator named theDiskLocator in Site named theSite and Store namedtheStore.\n\n\n\nGet-PvsDiskVersion -Name theDiskLocator -Version 0-SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 3: Get Maintenance PvsDiskVersion for DiskLocator\n\n\nGet the Maintenance PvsDiskVersion for theDiskLocator named theDiskLocator in Site named theSite and Store namedtheStore.\n\n\n\nGet-PvsDiskVersion -Name theDiskLocator -Type 1-SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 4: Get Test PvsDiskVersion for DiskLocator\n\n\nGet all Test PvsDiskVersion for the DiskLocatornamed theDiskLocator in Site named theSite and Store named theStore.\n\n\n\nGet-PvsDiskVersion -Name theDiskLocator -Type 2-SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 5: Get Override PvsDiskVersion for DiskLocator\n\n\nGet the Override PvsDiskVersion for the DiskLocatornamed theDiskLocator in Site named theSite and Store named theStore.\n\n\n\nGet-PvsDiskVersion -Name theDiskLocator -Type 3-SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nGet-PvsExists\n\n\nReturn true if a Site, Server, Collection, View,Device, Store, Update Task or Virtual Hosting Pool Name is already used. If aCollectionName, SiteViewName, UpdateTaskName or VirtualHostingPoolName isspecified, SiteName or SiteId must be included.\n\n\n\nOne of these required\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nstring ServerName: Server name, to see if it isalready used in the Farm.\n\n\n\nstring FarmViewName: Farm View name, to see if it isalready used in the Farm.\n\n\n\nstring DeviceName: Device name, to see if it isalready used in the Farm.\n\n\n\nPvsPhysicalAddress[] DeviceMac: Device MAC, to seeif it is already used in the Farm.\n\n\n\nstring StoreName: Store name, to see if it isalready used.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring CollectionName: Collection name, to see if itis already used in a Site.\n\n\n\nstring SiteViewName: Site View name, to see if it isalready used in the Site.\n\n\n\nstring VirtualHostingPoolName: Virtual Hosting Poolname, to see if it is already used in a Site.\n\n\n\nstring UpdateTaskName: Update Task name, to see ifit is already used in a Site.\n\n\n\nstring DiskLocatorName: DiskLocator name, to see ifit is already used in a Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring StoreName: Store name, to see if it isalready used.\n\n\n\nBoolean: If successful, $true or $false is returned.\n\n\n\nEXAMPLE 1: Get-PvsExists Determine if SiteName Already Exists\n\n\nGet-PvsExists -SiteName theName\n\n\n\nEXAMPLE 2: Get-PvsExists Determine if ServerName Already Exists\n\n\nGet-PvsExists -ServerName theName\n\n\n\nEXAMPLE 3: Get-PvsExists Determine if FarmViewName Already Exists\n\n\nGet-PvsExists -FarmViewName theName\n\n\n\nEXAMPLE 4: Get-PvsExists Determine if DeviceName Already Exists\n\n\nGet-PvsExists -DeviceName theName\n\n\n\nEXAMPLE 5: Get-PvsExists Determine if DeviceMac Already Exists\n\n\nGet-PvsExists -DeviceMac\"00-11-22-33-44-55\"\n\n\n\nEXAMPLE 6: Get-PvsExists Determine if StoreName Already Exists\n\n\nGet-PvsExists -StoreName theName\n\n\n\nEXAMPLE 7: Get-PvsExists Determine if CollectionName Already Exists\n\n\nGet-PvsExists -CollectionName theName -SiteNametheSite\n\n\n\nSiteId can be used instead of SiteName.\n\n\n\nEXAMPLE 8: Get-PvsExists Determine if SiteViewName Already Exists\n\n\nGet-PvsExists -SiteViewName theName -SiteNametheSite\n\n\n\nSiteId can be used instead of SiteName.\n\n\n\nEXAMPLE 9: Get-PvsExists Determine if VirtualHostingPoolName Already Exists\n\n\nGet-PvsExists -VirtualHostingPoolName theName-SiteName theSite\n\n\n\nSiteId can be used instead of SiteName.\n\n\n\nEXAMPLE 10: Get-PvsExists Determine if UpdateTaskName Already Exists\n\n\nGet-PvsExists -UpdateTaskName theName -SiteNametheSite\n\n\n\nSiteId can be used instead of SiteName.\n\n\n\nEXAMPLE 11: Get-PvsExists Determine if DiskLocatorName Already Exists\n\n\nGet-PvsExists -DiskLocatorName theName -SiteNametheSite -StoreName theStore\n\n\n\nSiteId can be used instead of SiteName, and StoreIdcan be used instead of StoreName.\n\n\n\nGet-PvsFarm\n\n\nGet the fields for the Farm.\n\n\n\nOptional\n\n\n\nGuid[] Guid or FarmId: GUID of the Farm to Get. Thisis optional since there is only one Farm.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nFarmId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or FarmId: Read-only GUID that uniquelyidentifies this Farm.\n\n\n\nName or FarmName: Name of the Farm.Default=\"\" Max Length=50\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nAutoAddEnabled: True when Auto Add is enabled, falseotherwise. Default=false\n\n\n\nAuditingEnabled: True when Auditing is enabled,false otherwise. Default=false\n\n\n\nLastAuditArchiveDate: Last date of Audit Trail datathat was Archived. Has the date. Default=Empty\n\n\n\nDefaultSiteId: GUID of the Site to place new Devicesinto automatically. Not used with defaultSiteName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nDefaultSiteName: Name of the Site to place newDevices into automatically. Not used with DefaultSiteId. Default=\"\"\n\n\n\nOfflineDatabaseSupportEnabled: True when OfflineDatabase Support is enabled, false otherwise. Default=false\n\n\n\nAdGroupsEnabled: Active Directory groups are usedfor authorization, when set to true. Windows groups are used when set to false.Default=false\n\n\n\nLicenseServer: License server name.Default=\"\" Max Length=255\n\n\n\nLicenseServerPort: License server port. Min=1025,Max=65534, Default=27000\n\n\n\nAutomaticMergeEnabled: True when Automatic Merge isenabled, false otherwise. If the number of versions becomes more than theMaxVersions value, a merge will occur at the end of PromoteDiskVersion.Default=true\n\n\n\nMaxVersions: Maximum number a versions of a Diskthat can exist before a merge will automatically occur. Min=3, Max=50,Default=5\n\n\n\nMergeMode: Mode to place the version in after amerge has occurred. Values are: 0 (Production), 1 (Test) and 2 (Maintenance).Min=0, Max=2, Default=2\n\n\n\nDatabaseServerName: Read-only name of the databaseserver.\n\n\n\nDatabaseInstanceName: Read-only name of the databaseinstance.\n\n\n\nDatabaseName: Read-only name of the database.\n\n\n\nFailoverPartnerServerName: Read-only name of thedatabase server.\n\n\n\nFailoverPartnerInstanceName: Read-only name of thedatabase server instance.\n\n\n\nMultiSubnetFailover: Read-only DatabaseMultiSubnetFailover value\n\n\n\nRole: Read-only Role of the user for this item. 100is Farm Administrator, and 999 is read-only. Default=999\n\n\n\nPvsFarm[]: If successful, the PvsFarm object(s) arereturned.\n\n\n\nEXAMPLE 1: Get PvsFarm\n\n\nGet the PvsFarm.\n\n\n\nGet-PvsFarm\n\n\n\nGet-PvsFarmView\n\n\nGet the fields for a Farm View or all Farm Views inthe Farm. All Farm Views are returned if no parameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or FarmViewId: GUID of the Farm View toGet.\n\n\n\nstring[] Name or FarmViewName: Name of the Farm Viewto Get.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nFarmViewId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or FarmViewId: Read-only GUID that uniquelyidentifies this Farm View.\n\n\n\nName or FarmViewName: name of the Farm View. MaxLength=50\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nDeviceCount: Read-only count of Devices in this FarmView. Default=0\n\n\n\nActiveDeviceCount: Read-only count of active Devicesin this Farm View. Default=0\n\n\n\nMakActivateNeededCount: Read-only count of activeDevices that need MAK activation in this Farm View. Default=0\n\n\n\nPvsFarmView[]: If successful, the PvsFarmViewobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsFarmView for Farm\n\n\nGet all PvsFarmView for the Farm.\n\n\n\nGet-PvsFarmView\n\n\n\nEXAMPLE 2: Get PvsFarmView\n\n\nGet the PvsFarmView for the FarmView namedtheFarmView.\n\n\n\nGet-PvsFarmView -Name theFarmView\n\n\n\nGet-PvsGroup\n\n\nGet the fields for the Groups for the user or theSystem.\n\n\n\nOptional\n\n\n\nstring[] Domain: Domain of user (may be the name ofthe local computer).\n\n\n\nstring[] User: Name of user.\n\n\n\nSwitchParameter AdGroupsEnabled: Get ActiveDirectory groups, when set to true. Get Windows groups, when set to false. Ifnot included, the Farm AdGroupsEnabled setting is used.\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nName: Name of the Group.\n\n\n\nGuid: GUID of the Active Directory group.00000000-0000-0000-0000-000000000000 for Windows groups.\n\n\n\nPvsGroup[]: If successful, the PvsGroup object(s)are returned.\n\n\n\nEXAMPLE 1: Get PvsGroup for System\n\n\nGet all PvsGroup for the System.\n\n\n\nGet-PvsGroup\n\n\n\nEXAMPLE 2: Get PvsGroup for User\n\n\nGet all the PvsGroup in the Domain named theDomainfor the User named theUser.\n\n\n\nGet-PvsGroup -Domain theDomain -User theUser\n\n\n\nEXAMPLE 3: Get Active Directory PvsGroup\n\n\nGet all the Active Directory PvsGroup in the System.\n\n\n\nGet-PvsGroup -AdGroupsEnabled\n\n\n\nEXAMPLE 4: Get Windows Groups PvsGroup\n\n\nGet all the Windows Groups PvsGroup in the System.\n\n\n\nGet-PvsGroup -AdGroupsEnabled:$false\n\n\n\nGet-PvsLocalServer\n\n\nReturn one record with the local server's NetBiosname\n\n\n\nPvsLocalServer[]: If successful, the PvsLocalServerobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsLocalServer\n\n\nGet the PvsLocalServer for the PVS SoapServerconnected to.\n\n\n\nGet-PvsLocalServer\n\n\n\nGet-PvsMaintenanceVersionExists\n\n\nReturn true if the if the DiskLocator has amaintenance version, false otherwise.\n\n\n\nThis required\n\n\n\nGuid Guid or DiskLocatorId: DiskLocator GUID, to seeif it has a maintenance version.\n\n\n\nor this required ; resolution\n\n\n\nstring Name or DiskLocatorName: DiskLocator name, tosee if it has a maintenance version.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nBoolean: If successful, $true or $false is returned.\n\n\n\nEXAMPLE 1: Get-PvsMaintenanceVersionExists for Name\n\n\nGet-PvsMaintenanceVersionExists -Name theDiskLocator-SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that the SiteNameor SiteId and StoreName or StoreId are not also needed.\n\n\n\nGet-PvsMinimumLastAutoAddDeviceNumber\n\n\nGet the minimum that the Device Number of the lastAuto Added Device can be.\n\n\n\nThis required\n\n\n\nGuid CollectionId: GUID of the Collection to get theMinimum LastAutoAddDeviceNumber for.\n\n\n\nor this required ; resolution\n\n\n\nstring CollectionName: Name of the Collection to getthe Minimum LastAutoAddDeviceNumber for.\n\n\n\nOptional\n\n\n\nstring AutoAddPrefix: The string put before theDevice Number for Auto Add.\n\n\n\nstring AutoAddSuffix: The string put after theDevice Number for Auto Add.\n\n\n\nuint AutoAddNumberLength: The maximum length of theDevice Number for Auto Add. This length plus the AutoAddPrefix length plus theAutoAddSuffix length must be less than 16.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nCollectionId\n\n\n\nUInt32: If successful, the numeric value is returned\n\n\n\nEXAMPLE 1: Get-PvsMinimumLastAutoAddDeviceNumber\n\n\nThis example gets the highest auto-add number usedso far for a PvsDevice that starts with the AutoAddPrefix and AutoAddSuffix ofthe PVsCollection.\n\n\n\nGet-PvsMinimumLastAutoAddDeviceNumber-CollectionName theCollection -SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Get-PvsMinimumLastAutoAddDeviceNumber for AutoAddPrefix withAutoAddSuffix and AutoAddNumberLength\n\n\nThis example gets the highest auto-add number usedso far for a PvsDevice with name length up to 10 characters and starts with theAutoAddPrefix and AutoAddSuffix specified.\n\n\n\nGet-PvsMinimumLastAutoAddDeviceNumber -CollectionNametheCollection -SiteName theSite -AutoAddPrefix \"P\" -AutoAddSuffix\"S\" -AutoAddNumberLength 10\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nGet-PvsMountedDisk\n\n\nGet the mounted disk, if there is one.\n\n\n\nOne of these optional\n\n\n\nGuid ServerId: GUID of the Server.\n\n\n\nstring ServerName: Name of the Server.\n\n\n\nOne of these optional\n\n\n\nGuid StoreId: GUID of the Store.\n\n\n\nstring StoreName: Name of the Store.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId or StoreId\n\n\n\nPvsDiskLocator: If successful, the mappedPvsDiskLocator is returned.\n\n\n\nEXAMPLE 1: Get-PvsMountedDisk\n\n\nThis example gets the PvsMappedDisk. If no disk ismapped, null is returned.\n\n\n\n$thePvsDiskLocator = Get-PvsMappedDisk\n\n\n\nif ($thePvsDiskLocator -ne $null)\n\n\n\n{\n\n\n\n$thePvsDiskLocator.Name    #display the name of the mapped PvsDiskLocator\n\n\n\n}\n\n\n\nEXAMPLE 2: Get-PvsMountedDisk for ServerName\n\n\nThis example gets any mapped disk for theServerName. If no disk is mapped, null is returned.\n\n\n\n$thePvsDiskLocator = Get-PvsMappedDisk -ServerNametheServer\n\n\n\nif ($thePvsDiskLocator -ne $null)\n\n\n\n{\n\n\n\n$thePvsDiskLocator.Name    #display the name of the mapped PvsDiskLocator\n\n\n\n}\n\n\n\nEXAMPLE 3: Get-PvsMountedDisk for StoreName\n\n\nThis example gets any mapped disk for the StoreName.If no disk is mapped, null is returned.\n\n\n\n$thePvsDiskLocator = Get-PvsMappedDisk -StoreNametheStore\n\n\n\nif ($thePvsDiskLocator -ne $null)\n\n\n\n{\n\n\n\n$thePvsDiskLocator.Name    #display the name of the mapped PvsDiskLocator\n\n\n\n}\n\n\n\nGet-PvsMountedDriveLetter\n\n\nIf there is currently a Mounted Drive, return theLetter of the Drive.\n\n\n\nString: If successful, the String value is returned.\n\n\n\nEXAMPLE 1: Get-PvsMountedDriveLetter\n\n\nThis example gets any mapped disk drive letter. Ifno disk is mapped, a string with length greater than 0 is returned.\n\n\n\n$theDriveLetter = Get-PvsMappedDisk\n\n\n\nif ($theDriveLetter -ne $null -and$theDriveLetter.length -gt 0)\n\n\n\n{\n\n\n\n$theDriveLetter    # display thedrive letter\n\n\n\n}\n\n\n\nGet-PvsNewDiskVersion\n\n\nGet new Disk versions for the Store on the Serverspecified.\n\n\n\nOne of these required\n\n\n\nGuid[] ServerId: GUID of the Server to look for newDisk versions.\n\n\n\nstring[] ServerName: Name of the Server to look fornew Disk versions.\n\n\n\nOne of these required\n\n\n\nGuid[] StoreId: GUID of the Store that the Serverservices to look for new Disk versions.\n\n\n\nstring[] StoreName: Name of the Store that theServer services to look for new Disk versions.\n\n\n\nOptional\n\n\n\nSwitchParameter AutoAddEnabled: If -AutoAddEnabledis specified, undefined Disk versions found will be automatically added.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId or StoreId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nName: Name of the disk file without the extension.\n\n\n\nStatus: Status of the disk file. Values are: 0(Valid), 1 (Missing Properties File), 2 (Access Denied), 3 (Access Denied andMissing Properties File), 4 (Invalid Disk File), 5 (Manifest Invalid)\n\n\n\nPvsNewDiskVersion[]: If successful, thePvsNewDiskVersion object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsNewDiskVersion\n\n\nGet all PvsNewDiskVersion in the Store namedtheStore using the Server named theServer.\n\n\n\nGet-PvsNewDiskVersion -ServerName theServer-StoreName theStore\n\n\n\nEXAMPLE 2: Get PvsNewDiskVersion with AutoAdd\n\n\nGet all PvsNewDiskVersion and Auto Adds them in theStore named theStore using the Server named theServer.\n\n\n\nGet-PvsNewDiskVersion -ServerName theServer-StoreName theStore -AutoAddEnabled\n\n\n\nGet-PvsServer\n\n\nGet the fields for a Server, all Servers in a Sitethat use a Store, service a DiskLocator, or for the whole Farm. All Servers arereturned if no parameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or ServerId: GUID of the Server to Get.\n\n\n\nstring[] Name or ServerName: Name of the Server toGet.\n\n\n\nGuid[] SiteId: GUID of the Site to Get all Servers.\n\n\n\nstring[] SiteName: Name of the Site to Get allServers.\n\n\n\nGuid[] DiskLocatorId: GUID of the Disk Locator toGet all Servers.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] DiskLocatorName: Name of the Disk LocatorFile to Get all Servers.\n\n\n\nOne of these optional ; resolutions\n\n\n\nGuid[] StoreId: GUID of the Store to Get all Servers.\n\n\n\nstring[] StoreName: Name of the Store to Get allServers.\n\n\n\nOptional\n\n\n\nSwitchParameter All: If -All is specified, withStoreId or StoreName all Servers for the Store including ones with invalidpaths will be returned.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to Get all Servers.\n\n\n\nstring[] SiteName: Name of the Site to Get allServers.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store to Get allServers.\n\n\n\nstring[] StoreName: Name of the Store to Get allServers.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId, SiteId, DiskLocatorId or StoreId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or ServerId: Read-only GUID that uniquelyidentifies this Server.\n\n\n\nName or ServerName: Computer name with no spaces.ASCII computer name characters Max Length=21\n\n\n\nSiteId: GUID of the Site this Server is to be amember of. It is not used with SiteName.\n\n\n\nSiteName: Name of the Site this Server is to be amember of. It is not used with SiteId.\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nAdMaxPasswordAge: Number of days before a passwordexpires. Min=1, Max=30, Default=7\n\n\n\nLicenseTimeout: Amount of seconds before a licensetimes out. Min=15, Max=300, Default=30\n\n\n\nVDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0\n\n\n\nFirstPort: Number of the first UDP port for use bythe Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910\n\n\n\nLastPort: Number of the last UDP port for use by theStream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930\n\n\n\nThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs) \n<\n= 1000.Min=1, Max=60, Default=8\n\n\n\nBuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24\n\n\n\nServerCacheTimeout: Number of seconds to wait beforeconsidering another Server is down. Min=5, Max=60, Default=8\n\n\n\nIoBurstSize: Number of bytes read/writes can send ina burst of packets. Required that IoBurstSize/(MaxTransmissionUnits-76)\n<\n=32.Min=4096, Max=61440, Default=32768\n\n\n\nMaxTransmissionUnits: Ethernet maximum transmissionunit size for the protocol for use for Server and Device. Required thatIoBurstSize/(MaxTransmissionUnits-76)\n<\n=32. Min=502, Max=16426, Default=1506\n\n\n\nMaxBootDevicesAllowed: Maximum number of Devicesallowed to boot simultaneously. Min=1, Max=1000, Default=500\n\n\n\nMaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60\n\n\n\nBootPauseSeconds: Number of seconds that a Devicewill pause during login if its server busy. Min=1, Max=60, Default=10\n\n\n\nAdMaxPasswordAgeEnabled: Age the password, when setto true. Default=false\n\n\n\nEventLoggingEnabled: Enable event logging, when setto true. Default=false\n\n\n\nNonBlockingIoEnabled: Use non-Blocking IO, when setto true. Default=true\n\n\n\nRole: Read-only Role of the user for this item. 100is Farm Administrator, and 200 is Site Administrator. Default=999\n\n\n\nIp: One or more streaming ip addresses.\n\n\n\nInitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000,Default=50\n\n\n\nInitialTransactionConnectionPoolSize: Initial sizeof database connection pool for transactional queries. Min=1, Max=1000,Default=50\n\n\n\nMaxQueryConnectionPoolSize: Maximum size of databaseconnection pool for non-transactional queries. Min=1, Max=32767, Default=1000\n\n\n\nMaxTransactionConnectionPoolSize: Maximum size ofdatabase connection pool for transactional queries. Min=1, Max=32767,Default=1000\n\n\n\nRefreshInterval: Interval, in number of seconds, theserver should wait before refreshing settings. If set to 0, unused databaseconnections are never released. Min=0, Max=32767, Default=300\n\n\n\nUnusedDbConnectionTimeout: Interval, in number ofseconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300\n\n\n\nBusyDbConnectionRetryCount: Number of times a faileddatabase connection will be retried. Min=0, Max=32767, Default=2\n\n\n\nBusyDbConnectionRetryInterval: Interval, in numberof milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25\n\n\n\nLocalConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are local. A value of 0 disables thefeature. Min=0, Max=128, Default=4\n\n\n\nRemoteConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are remote. A value of 0 disables thefeature. Min=0, Max=128, Default=4\n\n\n\nRamDiskIpAddress: IP address to use for transferringthe RAM Disk. When equal to 0.0.0.0 the server IP is used with the first partreplaced with 233. Default=0.0.0.0\n\n\n\nRamDiskTimeToLive: Time to live for the invitationpacket sent to Devices. Min=1, Max=255, Default=1\n\n\n\nRamDiskInvitationType: Either false for Fixed, ortrue for Variable. Default=false\n\n\n\nRamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10\n\n\n\nActive: 1 if the Server is currently active, 2 ifunknown, and 0 otherwise. Min=0, Max=2, Default=0\n\n\n\nLogLevel: Level to perform logging at. Values are: 0(None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6 (Trace).Min=0, Max=6, Default=4\n\n\n\nLogFileSizeMax: Maximum size log files can reach inMegabytes. Min=1, Max=50, Default=5\n\n\n\nLogFileBackupCopiesMax: Maximum number of log filebackups. Min=1, Max=50, Default=4\n\n\n\nPowerRating: A strictly relative rating of thisServer's capabilities when compared to other Servers in the Store(s) it belongstoo; can be used to help tune load balancing. Min=0.1, Max=1000, Default=1\n\n\n\nServerFqdn: Read-only fully qualified domain name.Default=\"\" Max Length=1024\n\n\n\nManagementIp: IP address used for management communicationsbetween Servers. Default=0.0.0.0\n\n\n\nLastCeipUploadAttempt: Time that this server lastattempted a CEIP upload. Default=Empty\n\n\n\nLastBugReportAttempt: Time that this server lastattempted to upload or generate a bug report bundle. Default=Empty\n\n\n\nLastBugReportStatus: Status of the last bug reporton this server. Default=\"\" Max Length=250\n\n\n\nLastBugReportResult: Status of the last bug reporton this server. Default=\"\" Max Length=4000\n\n\n\nLastBugReportSummary: Summary of the last bug reporton this server. Default=\"\" Max Length=250\n\n\n\nPvsServer[]: If successful, the PvsServer object(s)are returned.\n\n\n\nEXAMPLE 1: Get PvsServer for Farm\n\n\nGet all PvsServer for the Farm.\n\n\n\nGet-PvsServer\n\n\n\nEXAMPLE 2: Get PvsServer for Site\n\n\nGet all PvsServer for the Site named theSite.\n\n\n\nGet-PvsServer -SiteName theSite\n\n\n\nEXAMPLE 3: Get PvsServer for Site and Store\n\n\nGet all PvsServer for the Site named theSite andStore named theStore.\n\n\n\nGet-PvsServer -SiteName theSite -StoreName theStore\n\n\n\nEXAMPLE 4: Get PvsServer for DiskLocator\n\n\nGet the PvsServer for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsServer -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 5: Get PvsServer for Server\n\n\nGet the PvsServer for the Server named theServer.\n\n\n\nGet-PvsServer -Name theServer\n\n\n\nEXAMPLE 6: Get PvsServer Not Active and Start\n\n\nGet all PvsServer that are not Active and then Startthem.\n\n\n\nGet-PvsServer -Fields Active | Where-Object{$_.Active -eq 0} | Start-PvsStreamService\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGet-PvsServerBiosBootstrap\n\n\nOem Only: Get the bootstrap fields for the Serverdell_bios.bin BIOS bootstrap file.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server to Getthe dell_bios.bin BIOS bootstrap file from.\n\n\n\nstring[] Name or ServerName: Name of the Server toGet the dell_bios.bin BIOS bootstrap file from.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nEnabled: Automatically update the BIOS on the targetdevice with these setting when set to true, otherwise do not use thesesettings. Default=false\n\n\n\nDhcpEnabled: Use DHCP to retrieve target device IPwhen set to true, otherwise use the static domain, dnsIpAddresstrue anddnsIpAddress2 settings. Default=true\n\n\n\nLookup: Use DNS to find the Server when set to truewith the ServerName host value, otherwise use the bootservertrue_Ip,bootservertrue_Port, bootserver2_Ip, bootserver2_Port, bootserver3_Ip,bootserver3_Port, bootserver4_Ip, and bootserver4_Port settings. Default=true\n\n\n\nVerboseMode: Display verbose diagnostic informationwhen set to true. Default=false\n\n\n\nInterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false\n\n\n\nPaeMode: PAE mode (use if PAE enabled in boot.ini oftarget device) when set to true. Default=false\n\n\n\nBootFromHdOnFail: For network recovery reboot tohard drive when set to true, restore network connection when set to false.Default=false\n\n\n\nRecoveryTime: When bootFromHdOnFail is 1, this isthe number of seconds to wait before reboot to hard drive. Min=10, Max=60000,Default=50\n\n\n\nPollingTimeout: Login polling timeout in milliseconds.Min=1000, Max=60000, Default=5000\n\n\n\nGeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nName or ServerName: Host to use for DNS lookup. Onlyused when Lookup is true. Default=IMAGESERVER1\n\n\n\nBootserver1_Ip: 1st boot server IP. Only used whenLookup is false.\n\n\n\nBootserver1_Port: 1st boot server port. Only usedwhen Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nBootserver2_Ip: 2nd boot server IP. Only used whenLookup is false. Default=0.0.0.0\n\n\n\nBootserver2_Port: 2nd boot server port. Only usedwhen Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nBootserver3_Ip: 3rd boot server IP. Only used whenLookup is false. Default=0.0.0.0\n\n\n\nBootserver3_Port: 3rd boot server port. Only usedwhen Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nBootserver4_Ip: 4th boot server IP. Only used whenLookup is false. Default=0.0.0.0\n\n\n\nBootserver4_Port: 4th boot server port. Only usedwhen Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nDomain: Domain of the primary and secondary DNSservers. Only used when DhcpEnabled is false.\n\n\n\nDnsIpAddress1: Primary DNS server IP. Only used whenDhcpEnabled is false.\n\n\n\nDnsIpAddress2: Secondary DNS server IP. Only usedwhen DhcpEnabled is false.\n\n\n\nPvsServerBiosBootstrap[]: If successful, the PvsServerBiosBootstrapobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsServerBiosBootstrap for Server\n\n\nGet all PvsServerBiosBootstrap for the Server namedtheServer.\n\n\n\nGet-PvsServerBiosBootstrap -Name theServer\n\n\n\nGet-PvsServerBootstrap\n\n\nGet the bootstrap fields for the Server and namedbootstrap file specified.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server to Getthe named bootstrap file from.\n\n\n\nstring[] ServerName: Name of the Server to Get thenamed bootstrap file from.\n\n\n\nThis required\n\n\n\nstring[] Name: Name of the bootstrap file.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\n(ServerId and Name) or ServerId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nBootserver1_Ip: 1st boot server IP.\n\n\n\nBootserver1_Netmask: 1st boot server netmask.Default=0.0.0.0\n\n\n\nBootserver1_Gateway: 1st boot server gateway.Default=0.0.0.0\n\n\n\nBootserver1_Port: 1st boot server port. Min=1025,Max=65536, Default=6910\n\n\n\nBootserver2_Ip: 2nd boot server IP. Default=0.0.0.0\n\n\n\nBootserver2_Netmask: 2nd boot server netmask.Default=0.0.0.0\n\n\n\nBootserver2_Gateway: 2nd boot server gateway.Default=0.0.0.0\n\n\n\nBootserver2_Port: 2nd boot server port. Min=1025,Max=65536, Default=6910\n\n\n\nBootserver3_Ip: 3rd boot server IP. Default=0.0.0.0\n\n\n\nBootserver3_Netmask: 3rd boot server netmask.Default=0.0.0.0\n\n\n\nBootserver3_Gateway: 3rd boot server gateway.Default=0.0.0.0\n\n\n\nBootserver3_Port: 3rd boot server port. Min=1025,Max=65536, Default=6910\n\n\n\nBootserver4_Ip: 4th boot server IP. Default=0.0.0.0\n\n\n\nBootserver4_Netmask: 4th boot server netmask.Default=0.0.0.0\n\n\n\nBootserver4_Gateway: 4th boot server gateway.Default=0.0.0.0\n\n\n\nBootserver4_Port: 4th boot server port. Min=1025,Max=65536, Default=6910\n\n\n\nVerboseMode: Display verbose diagnostic informationwhen set to true. Default=false\n\n\n\nInterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false\n\n\n\nPaeMode: PAE mode (use if PAE enabled in boot.ini oftarget device) when set to true. Default=false\n\n\n\nBootFromHdOnFail: For network recovery reboot tohard drive when set to true, restore network connection when set to false.Default=false\n\n\n\nRecoveryTime: When bootFromHdOnFail is 1, this isthe number of seconds to wait before reboot to hard drive. Min=10, Max=60000,Default=50\n\n\n\nPollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nGeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nPvsServerBootstrap[]: If successful, thePvsServerBootstrap object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsServerBootstrap\n\n\nGet the PvsServerBootstrap for the Bootstrap namedtheBootstrap on the Server named theServer.\n\n\n\nGet-PvsServerBootstrap -ServerName theServer -NametheBootstrap\n\n\n\nGet-PvsServerBootstrapName\n\n\nGet the bootstrap names for a Server.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server to Getbootstrap names for.\n\n\n\nstring[] Name or ServerName: Name of the Server toGet bootstrap names for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId\n\n\n\nPvsServerBootstrapName[]: If successful, thePvsServerBootstrapName object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsServerBootstrapName for Server\n\n\nGet all PvsServerBootstrapName for the Server namedtheServer.\n\n\n\nGet-PvsServerBootstrapName -Name theServer\n\n\n\nGet-PvsServerCount\n\n\nGet count of Servers in a Site.\n\n\n\nOne of these required\n\n\n\nGuid Guid or SiteId: GUID of the Site to get theServer Count of.\n\n\n\nstring Name or SiteName: Name of the Site to get theServer Count of.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nSiteId\n\n\n\nUInt32: If successful, the numeric value is returned\n\n\n\nEXAMPLE 1: Get-PvsServerCount Returns the Number (or Count) of PvsServer inPvsSite\n\n\nGet-PvsServerCount -Name theSite\n\n\n\nGet-PvsServerInfo\n\n\nGet the fields and status for a Server, all Serversin a Site that use a Store, service a DiskLocator, or for the whole Farm. AllServers are returned if no parameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or ServerId: GUID of the Server to Get.\n\n\n\nstring[] Name or ServerName: Name of the Server toGet.\n\n\n\nGuid[] SiteId: GUID of the Site to Get all Servers.\n\n\n\nstring[] SiteName: Name of the Site to Get allServers.\n\n\n\nGuid[] DiskLocatorId: GUID of the Disk Locator toGet all Servers.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] DiskLocatorName: Name of the Disk LocatorFile to Get all Servers.\n\n\n\nOne of these optional ; resolutions\n\n\n\nGuid[] StoreId: GUID of the Store to Get allServers.\n\n\n\nstring[] StoreName: Name of the Store to Get allServers.\n\n\n\nOptional\n\n\n\nSwitchParameter All: If -All is specified, withStoreId or StoreName all Servers for the Store including ones with invalidpaths will be returned.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to Get all Servers.\n\n\n\nstring[] SiteName: Name of the Site to Get all Servers.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store to Get allServers.\n\n\n\nstring[] StoreName: Name of the Store to Get allServers.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId, SiteId, DiskLocatorId or StoreId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or ServerId: Read-only GUID that uniquely identifiesthis Server.\n\n\n\nName or ServerName: Computer name with no spaces.ASCII computer name characters Max Length=21\n\n\n\nSiteId: GUID of the Site this Server is to be amember of. It is not used with SiteName.\n\n\n\nSiteName: Name of the Site this Server is to be a memberof. It is not used with SiteId.\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nAdMaxPasswordAge: Number of days before a passwordexpires. Min=1, Max=30, Default=7\n\n\n\nLicenseTimeout: Amount of seconds before a licensetimes out. Min=15, Max=300, Default=30\n\n\n\nVDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0\n\n\n\nFirstPort: Number of the first UDP port for use bythe Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910\n\n\n\nLastPort: Number of the last UDP port for use by theStream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930\n\n\n\nThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs) \n<\n= 1000.Min=1, Max=60, Default=8\n\n\n\nBuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24\n\n\n\nServerCacheTimeout: Number of seconds to wait beforeconsidering another Server is down. Min=5, Max=60, Default=8\n\n\n\nIoBurstSize: Number of bytes read/writes can send ina burst of packets. Required that IoBurstSize/(MaxTransmissionUnits-76)\n<\n=32.Min=4096, Max=61440, Default=32768\n\n\n\nMaxTransmissionUnits: Ethernet maximum transmissionunit size for the protocol for use for Server and Device. Required thatIoBurstSize/(MaxTransmissionUnits-76)\n<\n=32. Min=502, Max=16426, Default=1506\n\n\n\nMaxBootDevicesAllowed: Maximum number of Devicesallowed to boot simultaneously. Min=1, Max=1000, Default=500\n\n\n\nMaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60\n\n\n\nBootPauseSeconds: Number of seconds that a Devicewill pause during login if its server busy. Min=1, Max=60, Default=10\n\n\n\nAdMaxPasswordAgeEnabled: Age the password, when setto true. Default=false\n\n\n\nEventLoggingEnabled: Enable event logging, when setto true. Default=false\n\n\n\nNonBlockingIoEnabled: Use non-Blocking IO, when setto true. Default=true\n\n\n\nRole: Read-only Role of the user for this item. 100is Farm Administrator, and 200 is Site Administrator. Default=999\n\n\n\nIp: One or more streaming ip addresses.\n\n\n\nInitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000,Default=50\n\n\n\nInitialTransactionConnectionPoolSize: Initial sizeof database connection pool for transactional queries. Min=1, Max=1000,Default=50\n\n\n\nMaxQueryConnectionPoolSize: Maximum size of databaseconnection pool for non-transactional queries. Min=1, Max=32767, Default=1000\n\n\n\nMaxTransactionConnectionPoolSize: Maximum size ofdatabase connection pool for transactional queries. Min=1, Max=32767,Default=1000\n\n\n\nRefreshInterval: Interval, in number of seconds, theserver should wait before refreshing settings. If set to 0, unused databaseconnections are never released. Min=0, Max=32767, Default=300\n\n\n\nUnusedDbConnectionTimeout: Interval, in number ofseconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300\n\n\n\nBusyDbConnectionRetryCount: Number of times a faileddatabase connection will be retried. Min=0, Max=32767, Default=2\n\n\n\nBusyDbConnectionRetryInterval: Interval, in numberof milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25\n\n\n\nLocalConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are local. A value of 0 disables thefeature. Min=0, Max=128, Default=4\n\n\n\nRemoteConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are remote. A value of 0 disables thefeature. Min=0, Max=128, Default=4\n\n\n\nRamDiskIpAddress: IP address to use for transferringthe RAM Disk. When equal to 0.0.0.0 the server IP is used with the first partreplaced with 233. Default=0.0.0.0\n\n\n\nRamDiskTimeToLive: Time to live for the invitationpacket sent to Devices. Min=1, Max=255, Default=1\n\n\n\nRamDiskInvitationType: Either false for Fixed, ortrue for Variable. Default=false\n\n\n\nRamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10\n\n\n\nActive: 1 if the Server is currently active, 2 ifunknown, and 0 otherwise. Min=0, Max=2, Default=0\n\n\n\nLogLevel: Level to perform logging at. Values are: 0(None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6 (Trace).Min=0, Max=6, Default=4\n\n\n\nLogFileSizeMax: Maximum size log files can reach inMegabytes. Min=1, Max=50, Default=5\n\n\n\nLogFileBackupCopiesMax: Maximum number of log filebackups. Min=1, Max=50, Default=4\n\n\n\nPowerRating: A strictly relative rating of thisServer's capabilities when compared to other Servers in the Store(s) it belongstoo; can be used to help tune load balancing. Min=0.1, Max=1000, Default=1\n\n\n\nServerFqdn: Read-only fully qualified domain name.Default=\"\" Max Length=1024\n\n\n\nManagementIp: IP address used for managementcommunications between Servers. Default=0.0.0.0\n\n\n\nLastCeipUploadAttempt: Time that this server lastattempted a CEIP upload. Default=Empty\n\n\n\nLastBugReportAttempt: Time that this server lastattempted to upload or generate a bug report bundle. Default=Empty\n\n\n\nLastBugReportStatus: Status of the last bug reporton this server. Default=\"\" Max Length=250\n\n\n\nLastBugReportResult: Status of the last bug reporton this server. Default=\"\" Max Length=4000\n\n\n\nLastBugReportSummary: Summary of the last bug reporton this server. Default=\"\" Max Length=250\n\n\n\nContactIp: Read-only contact IP for the Server.\n\n\n\nContactPort: Read-only contact port for the Server.\n\n\n\nDeviceCount: Read-only count of Devices. Default=0\n\n\n\nPvsServerInfo[]: If successful, the PvsServerInfoobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsServerInfo for Farm\n\n\nGet all PvsServerInfo for the Farm.\n\n\n\nGet-PvsServerInfo\n\n\n\nEXAMPLE 2: Get PvsServerInfo for Site\n\n\nGet all PvsServerInfo for the Site named theSite.\n\n\n\nGet-PvsServerInfo -SiteName theSite\n\n\n\nEXAMPLE 3: Get PvsServerInfo for Site and Store\n\n\nGet all PvsServerInfo for the Site named theSite andStore named theStore.\n\n\n\nGet-PvsServerInfo -SiteName theSite -StoreNametheStore\n\n\n\nEXAMPLE 4: Get PvsServerInfo for DiskLocator\n\n\nGet the PvsServerInfo for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.\n\n\n\nGet-PvsServerInfo -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 5: Get PvsServerInfo for Server\n\n\nGet the PvsServerInfo for the Server named theServer.\n\n\n\nGet-PvsServerInfo -Name theServer\n\n\n\nEXAMPLE 6: Get PvsServerInfo Not Active and Start\n\n\nGet all PvsServerInfo that are not Active and thenStart them.\n\n\n\nGet-PvsServerInfo -Fields Active | Where-Object{$_.Active -eq 0} | Start-PvsStreamService\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGet-PvsServerName\n\n\nReturn the name of the Server the SoapServer isrunning on.\n\n\n\nString: If successful, the String value is returned.\n\n\n\nEXAMPLE 1: Get-PvsServerName\n\n\nGet-PvsServerName\n\n\n\nGet-PvsServerStatus\n\n\nGet the Server Status fields for a Server.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server to Getstatus for.\n\n\n\nstring[] Name or ServerName: Name of Server to Getstatus for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or ServerId: Read-only GUID of the Server. Canbe used with Get Server.\n\n\n\nName or ServerName: Read-only Name of the Server.Can be used with Get Server.\n\n\n\nIp: Read-only contact IP for the Server.\n\n\n\nPort: Read-only contact port for the Server.\n\n\n\nDeviceCount: Read-only count of Devices. Default=0\n\n\n\nStatus: Status of the server, 0 if down, 1 if up and2 if unknown. Default=0\n\n\n\nPvsServerStatus[]: If successful, thePvsServerStatus object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsServerStatus for Server\n\n\nGet the PvsServerStatus for the Server namedtheServer.\n\n\n\nGet-PvsServerStatus -Name theServer\n\n\n\nGet-PvsServerStore\n\n\nGet the directory and cache paths of a Server forone or all Stores.\n\n\n\nOne of these required\n\n\n\nGuid[] ServerId: GUID of a Server.\n\n\n\nstring[] ServerName: Name of a Server.\n\n\n\nOne of these optional\n\n\n\nGuid[] StoreId: GUID of the Store.\n\n\n\nstring[] StoreName: Name of the Store.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\n(ServerId and StoreId), ServerId or StoreId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nStoreId: GUID of the Store. StoreName can be usedinstead.\n\n\n\nStoreName: Name of the Store. StoreId can be usedinstead.\n\n\n\nServerId: GUID of the server that uses the Store.ServerName can be used instead.\n\n\n\nServerName: Name of the server that uses the Store.ServerId can be used instead.\n\n\n\nPath: Directory path that the Server uses to accessthe Store. Default=\"\" Max Length=255\n\n\n\nCachePath: Cache path(s) that the Server uses withthe Store. If none are specified the caches will be placed in the StorecachePath. Default=None\n\n\n\nPvsServerStore[]: If successful, the PvsServerStoreobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsServerStore for Server\n\n\nGet all PvsServerStore for the Server namedtheServer.\n\n\n\nGet-PvsServerStore -ServerName theServer\n\n\n\nEXAMPLE 2: Get PvsServerStore for Server and Store\n\n\nGet the PvsServerStore for the Server namedtheServer and Store named theStore.\n\n\n\nGet-PvsServerStore -ServerName theServer -StoreNametheStore\n\n\n\nGet-PvsServerStoreActiveDeviceCount\n\n\nGet the count of Devices currently connected to anyvdisk served from the Store by the Server.\n\n\n\nOne of these required\n\n\n\nGuid ServerId: GUID of the Server.\n\n\n\nstring ServerName: Name of the Server.\n\n\n\nOne of these required\n\n\n\nGuid StoreId: GUID of the Store.\n\n\n\nstring StoreName: Name of the Store.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId or StoreId\n\n\n\nUInt32: If successful, the numeric value is returned\n\n\n\nEXAMPLE 1: Get-PvsServerStoreActiveDeviceCount Returns the Number (orCount) of PvsDevice Served from PvsStore by PvsServer\n\n\nGet-PvsServerStoreActiveDeviceCount -ServerNametheServer -StoreName theStore\n\n\n\nGet-PvsSite\n\n\nGet the fields for a Site or all Sites. All Sitesare returned if no parameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or SiteId: GUID of the Site to Get.\n\n\n\nstring[] Name or SiteName: Name of the Site to Get.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nSiteId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or SiteId: Read-only GUID that uniquelyidentifies this Site.\n\n\n\nName or SiteName: Name of the Site. Max Length=50\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nDefaultCollectionId: GUID of the Collection to placenew Devices into automatically. Not used with defaultCollectionName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nDefaultCollectionName: Name of the Collection toplace new Devices into automatically. Not used with DefaultCollectionId. Default=\"\"\n\n\n\nInventoryFilePollingInterval: The number of secondsbetween polls for Disk changes in the Stores. Min=1, Max=600, Default=60\n\n\n\nEnableDiskUpdate: True when Disk Updated is enabledfor the Site, false otherwise. Default=false\n\n\n\nDiskUpdateServerId: GUID of the Disk Update Serverfor the Site. Not used with DiskUpdateServerName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nDiskUpdateServerName: Name of the Disk Update Serverfor the Site. Not used with DiskUpdateServerId. Default=\"\"\n\n\n\nMakUser: User name used for MAK activation.Default=\"\" Max Length=64\n\n\n\nMakPassword: User password used for MAK activation.Default=\"\" Max Length=64\n\n\n\nRole: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, and 999 is read-only.Default=999\n\n\n\nPvsSite[]: If successful, the PvsSite object(s) arereturned.\n\n\n\nEXAMPLE 1: Get PvsSite for Farm\n\n\nGet all PvsSite for the Farm.\n\n\n\nGet-PvsSite\n\n\n\nEXAMPLE 2: Get PvsSite\n\n\nGet the PvsSite for the Site named theSite.\n\n\n\nGet-PvsSite -Name theSite\n\n\n\nGet-PvsSiteView\n\n\nGet the fields for a Site View or all Site Views ina Site or the whole Farm. All Site Views are returned if no parameters arepassed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or SiteViewId: GUID of the Site View toGet.\n\n\n\nGuid[] SiteId: GUID of the Site to Get all Views for.\n\n\n\nstring[] SiteName: Name of the Site to Get all Viewsfor.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] Name or SiteViewName: Name of the Site Viewto Get.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to Get all Viewsfor.\n\n\n\nstring[] SiteName: Name of the Site to Get all Viewsfor.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nSiteViewId or SiteId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or SiteViewId: Read-only GUID that uniquelyidentifies this Site View.\n\n\n\nName or SiteViewName: Name of the Site View. MaxLength=50\n\n\n\nSiteId: GUID of the Site this View is to be a memberof. It is not used with SiteName.\n\n\n\nSiteName: Name of the Site this View is to be amember of. It is not used with SiteId.\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nDeviceCount: Read-only count of Devices in this SiteView. Default=0\n\n\n\nDeviceWithPVDCount: Read-only count of Devices withPersonal vDisk in this Site View. Default=0\n\n\n\nActiveDeviceCount: Read-only count of active Devicesin this Site View. Default=0\n\n\n\nMakActivateNeededCount: Read-only count of activeDevices that need MAK activation in this Site View. Default=0\n\n\n\nRole: Read-only Role of the user for this item. 100is Farm Administrator, and 200 is Site Administrator. Default=999\n\n\n\nPvsSiteView[]: If successful, the PvsSiteViewobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsSiteView for Farm\n\n\nGet all PvsSiteView for the Farm.\n\n\n\nGet-PvsSiteView\n\n\n\nEXAMPLE 2: Get PvsSiteView for Site\n\n\nGet all PvsSiteView for the Site named theSite.\n\n\n\nGet-PvsSiteView -SiteName theSite\n\n\n\nEXAMPLE 3: Get PvsSiteView\n\n\nGet the PvsSiteView for the SiteView namedtheSiteView in the Site named theSite.\n\n\n\nGet-PvsSiteView -Name theSiteView -SiteName theSite\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nGet-PvsStore\n\n\nGet the fields for a Store or all Stores for aServer, Site or the Farm. All Stores are returned if no parameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or StoreId: GUID of the Store to Get.\n\n\n\nstring[] Name or StoreName: Name of the Store toGet.\n\n\n\nGuid[] ServerId: GUID of the Server to Get allStores for.\n\n\n\nstring[] ServerName: Name of the Server to Get allStores for.\n\n\n\nGuid[] SiteId: GUID of the Site to Get all Storesfor.\n\n\n\nstring[] SiteName: Name of the Site to Get allStores for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nStoreId, ServerId or SiteId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or StoreId: Read-only GUID that uniquelyidentifies this Store.\n\n\n\nName or StoreName: Name of the Store. Max Length=50\n\n\n\nSiteId: GUID of the Site where Administrators ofthat Site can change this Store. Not used for Farm Stores. SiteName can be usedinstead. Default=00000000-0000-0000-0000-000000000000\n\n\n\nSiteName: Name of the Site where Administrators ofthat Site can change this Store. Not used for Farm Stores. SiteId can be usedinstead. Default=\"\"\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nPath: Default directory path that the Servers use toaccess this Store. Max Length=255\n\n\n\nCachePath: Default Cache path(s) that the Serversuse with this Store. If none are specified the caches will be placed in theWriteCache subdirectory of the Store path. Default=None\n\n\n\nRole: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, and 999 is read-only.Default=999\n\n\n\nPathType: Read-only field indicating if the vdisksare on a server's local hard disk or on a remote share.\n\n\n\nPvsStore[]: If successful, the PvsStore object(s)are returned.\n\n\n\nEXAMPLE 1: Get PvsStore for Farm\n\n\nGet all PvsStore for the Farm.\n\n\n\nGet-PvsStore\n\n\n\nEXAMPLE 2: Get PvsStore for Site\n\n\nGet all PvsStore for the Site named theSite.\n\n\n\nGet-PvsStore -SiteName theSite\n\n\n\nEXAMPLE 3: Get PvsStore for Server\n\n\nGet all PvsStore for the Server named theServer.\n\n\n\nGet-PvsStore -ServerName theServer\n\n\n\nEXAMPLE 4: Get PvsStore\n\n\nGet the PvsStore for the Store named theStore.\n\n\n\nGet-PvsStore -Name theStore -SiteName theSite\n\n\n\nGet-PvsStoreFreeSpace\n\n\nGet the free megabytes available in the Store.\n\n\n\nOne of these required ; resolutions\n\n\n\nGuid Guid or StoreId: GUID of the Store.\n\n\n\nstring Name or StoreName: Name of the Store.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid ServerId: GUID of the Server to use todetermine the free space in the Store.\n\n\n\nstring ServerName: Name of the Server to use to determinethe free space in the Store.\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nUInt32: If successful, the numeric value is returned\n\n\n\nEXAMPLE 1: Get-PvsStoreFreeSpace for Name with ServerName\n\n\nGet-PvsStoreFreeSpace -Name theStore -ServerNametheServer\n\n\n\nEXAMPLE 2: Get-PvsStoreFreeSpace for Name with SiteName\n\n\nGet-PvsStoreFreeSpace -Name theStore -SiteNametheSite\n\n\n\nGet-PvsStoreSharedOrServerPath\n\n\nGet the Stores and paths for the ServerNamespecified or Stores with only shared UNC paths.\n\n\n\nOne of these required\n\n\n\nGuid[] SiteId: GUID of a Site used for authorizationcheck.\n\n\n\nstring[] SiteName: Name of a Site used forauthorization check.\n\n\n\nOptional\n\n\n\nstring[] ServerName: Name of a Server to also getlocal Store paths for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nSiteId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nStoreId: GUID of the Store.\n\n\n\nStoreName: Name of the Store.\n\n\n\nPath: Directory path that the Servers use to accessthis Store.\n\n\n\nPvsStoreSharedOrServerPath[]: If successful, thePvsStoreSharedOrServerPath object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsStoreSharedOrServerPath with Sharded UNC Paths\n\n\nGet PvsStoreSharedOrServerPath with shared UNC pathsfor the Farm.\n\n\n\nGet-PvsStoreSharedOrServerPath -SiteName theSite\n\n\n\nEXAMPLE 2: Get PvsStoreSharedOrServerPath with Sharded UNC Paths and ServerLocal Paths\n\n\nGet PvsStoreSharedOrServerPath with shared UNC pathsfor the Farm with local paths for the Server named theServer.\n\n\n\nGet-PvsStoreSharedOrServerPath -SiteName theSite-StoreName theServer\n\n\n\nGet-PvsTask\n\n\nGet the current Task fields for select, or allactive and completed un-cleared tasks.\n\n\n\nOne of these optional\n\n\n\nuint TaskId: ID of the Task to get.\n\n\n\nGuid[] SiteId: GUID of the Site to get Tasks for.\n\n\n\nstring[] SiteName: Name of the Site to get Tasksfor.\n\n\n\nOptional\n\n\n\nuint State: The TaskState to get Tasks for. Valuesare: 0 (Processing), 1 (Cancelled), and 2 (Complete).\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nTaskId or SiteId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nTaskId: Unique ID of the task.\n\n\n\nSiteId: GUID of the Site that this Task is beingprocessed in. Default=00000000-0000-0000-0000-000000000000\n\n\n\nSiteName: Name of the Site that that this Task isbeing processed in.\n\n\n\nHandle: Handle to a running function.\n\n\n\nServerFqdn: Qualified name of the server.Default=\"\" Max Length=1024\n\n\n\nIp: IP Address of the remote host.\n\n\n\nPort: Port number of the remote service.\n\n\n\nStartTime: Time the task was started. Has the dateand time without milliseconds.\n\n\n\nExpirationTime: Time the task record may be removedfrom the database if the task does not complete. Has the date and time withoutmilliseconds.\n\n\n\nState: State of the Task. Values are: 0(Processing), 1 (Cancelled), and 2 (Complete). Min=0, Max=2\n\n\n\nCommandType: Type of the command. Values are: Add,Delete, Get, Info, Run, RunWithReturn, Set and SetList. Default=\"\"Max Length=13\n\n\n\nCommand: Command being processed.Default=\"\" Max Length=50\n\n\n\nMapiException: Exception result in XML format.Default=\"\"\n\n\n\nResults: Result in XML format. Default=\"\"\n\n\n\nPvsTask[]: If successful, the PvsTask object(s) arereturned.\n\n\n\nEXAMPLE 1: Get PvsTask for Farm\n\n\nGet all PvsTask for the Farm.\n\n\n\nGet-PvsTask\n\n\n\nEXAMPLE 2: Get PvsTask for Site\n\n\nGet all PvsTask for the Site named theSite.\n\n\n\nGet-PvsTask -SiteName theSite\n\n\n\nEXAMPLE 3: Get PvsTask Currently Processing\n\n\nGet PvsTask that are currently in Processing statefor the Farm.\n\n\n\nGet-PvsTask -State 0\n\n\n\nEXAMPLE 4: Get PvsTask\n\n\nGet PvsTask for TaskId 101.\n\n\n\nGet-PvsTask -TaskId 101\n\n\n\nGet-PvsTaskStatus\n\n\nGet the status of a Task in percent complete.\n\n\n\nThis required\n\n\n\nuint TaskId: Id of the Task to get the Status of.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nTaskId\n\n\n\nUInt32: If successful, the numeric value is returned\n\n\n\nEXAMPLE 1: Get-PvsTaskStatus for Start-PvsBoot to PvsTask\n\n\n$thePvsTask = Start-PvsBoot -NametheDevice                    #start the task\n\n\n\nwhile ($thePvsTask.State -eq0)                                #while the task is processing\n\n\n\n{\n\n\n\n%percentFinished = Get-PvsTaskStatus -Object$thePvsTask   # get percent finished\n\n\n\n%percentFinished.ToString() + \"%finished\"                 #display percent finished\n\n\n\nStart-Sleep -seconds 10                                    #wait 10 seconds more\n\n\n\n$thePvsTask = Get-PvsTask -Object$thePvsTask              #get the current PvsTask object\n\n\n\n}\n\n\n\nif ($thePvsTask.State -eq2)                                   #check to see if completed\n\n\n\n{\n\n\n\n\"Successful\"\n\n\n\n}\n\n\n\nelse\n\n\n\n{\n\n\n\n\"Cancelled\"\n\n\n\n}\n\n\n\nEXAMPLE 2: Get-PvsTaskStatus for taskId\n\n\nGet-PvsTaskStatus -taskId 101\n\n\n\nGet-PvsUndefinedDisk\n\n\nGet undefined Disks for the Store on the Serverspecified.\n\n\n\nOne of these required\n\n\n\nGuid[] ServerId: GUID of the Server to look forundefined Disks.\n\n\n\nstring[] ServerName: Name of the Server to look forundefined Disks.\n\n\n\nOne of these required\n\n\n\nGuid[] StoreId: GUID of the Store that the Serverservices to look for undefined Disks.\n\n\n\nstring[] StoreName: Name of the Store that theServer services to look for undefined Disks.\n\n\n\nOptional\n\n\n\nSwitchParameter AutoAddEnabled: If -AutoAddEnabledis specified, then undefined Disks found will be automatically added.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId or StoreId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nName: Name of the disk file without the extension.\n\n\n\nStatus: Status of the disk file. Values are: 0(Valid), 1 (Missing Properties File), 2 (Access Denied), 3 (Access Denied andMissing Properties File), 4 (Invalid Disk File), 5 (Manifest Missing orInvalid), 6 (Both VHD and VHDX)\n\n\n\nVHDX: If VHDX is true, the format of the image isVHDX. Otherwise it is VHD. Default=false\n\n\n\nPvsUndefinedDisk[]: If successful, thePvsUndefinedDisk object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsUndefinedDisk\n\n\nGet all PvsUndefinedDisk in the Store named theStoreusing the Server named theServer.\n\n\n\nGet-PvsUndefinedDisk -ServerName theServer-StoreName theStore\n\n\n\nEXAMPLE 2: Get PvsUndefinedDisk with AutoAdd\n\n\nGet all PvsUndefinedDisk and Auto Adds them in theStore named theStore using the Server named theServer.\n\n\n\nGet-PvsUndefinedDisk -ServerName theServer-StoreName theStore -AutoAddEnabled\n\n\n\nGet-PvsUpdateTask\n\n\nGet the fields for an Update Task or all UpdateTasks in a Site or the whole Farm. All Update Tasks are returned if noparameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or UpdateTaskId: GUID of the Update Taskto Get.\n\n\n\nGuid[] SiteId: GUID of the Site to Get all UpdateTasks for.\n\n\n\nstring[] SiteName: Name of the Site to Get allUpdate Tasks for.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] Name or UpdateTaskName: Name of the UpdateTask to Get.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to Get all UpdateTasks for.\n\n\n\nstring[] SiteName: Name of the Site to Get allUpdate Tasks for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nUpdateTaskId or SiteId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or UpdateTaskId: Read-only GUID that uniquelyidentifies this Update Task.\n\n\n\nName or UpdateTaskName: Name of the Update Task. Itis unique within the Site. Max Length=50\n\n\n\nSiteId: GUID of the Site that this Update Task is amember of. It is not used with SiteName.\n\n\n\nSiteName: Name of the Site that this Update Task isa member of. It is not used with SiteId.\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nEnabled: True when it will be processed, falseotherwise. Default=true\n\n\n\nHour: The hour of the day to perform the task.Min=0, Max=23, Default=0\n\n\n\nMinute: The minute of the hour to perform the task.Min=0, Max=59, Default=0\n\n\n\nRecurrence: The update will reoccur on thisschedule. 0 = None, 1 = Daily, 2 = Every Weekday, 3 = Weekly, 4 = Monthly Date,5 = Monthly Type. Min=0, Max=5, Default=0\n\n\n\nDayMask: Days selected values. 1 = Monday, 2 =Tuesday, 4 = Wednesday, 8 = Thursday, 16 = Friday, 32 = Saturday, 64 = Sunday,128 = Day. Default=0. This is used with Weekly and Monthly Type recurrence.Min=1, Max=255, Default=4\n\n\n\nDate: Days of the month. Numbers from 1-31 are theonly valid values. This is used with Monthly Date recurrence.Default=\"\" Max Length=83\n\n\n\nMonthlyOffset: When to happen monthly. 0 = None, 1 =First, 2 = Second, 3 = Third, 4 = Forth, 5 = Last. This is used with MonthlyType recurrence. Min=0, Max=5, Default=3\n\n\n\nEsdType: Esd to use. Valid values are SCCM or WSUS.If no value, a custom script is run on the client. Default=\"\" MaxLength=50\n\n\n\nPreUpdateScript: Script file to run before theupdate starts. Default=\"\" Max Length=255\n\n\n\nPreVmScript: Script file to run before the VM isloaded. Default=\"\" Max Length=255\n\n\n\nPostUpdateScript: Script file to run after theupdate finishes. Default=\"\" Max Length=255\n\n\n\nPostVmScript: Script file to run after the VM isunloaded. Default=\"\" Max Length=255\n\n\n\nDomain: Domain to add the Disk Update Device(s) to.If not included, the first Domain Controller found on the Server is used.Default=\"\" Max Length=255\n\n\n\nOrganizationUnit: Organizational Unit to add theDisk Update Device(s) to. This parameter is optional. If it is not specified,the device is added to the built in Computers container. Child OU's should bedelimited with forward slashes, e.g. \"ParentOU/ChildOU\". Specialcharacters in an OU name, such as '\"', '#', '+', ',', ';', '>', '=',must be escaped with a backslash. For example, an OU called \"commaIn,TheMiddle\"must be specified as \"commaIn\\,TheMiddle\". The old syntax ofdelimiting child OU's with a comma is still supported, but deprecated. Notethat in this case, the child OU comes first, e.g. \"ChildOU,ParentOU\".Default=\"\" Max Length=255\n\n\n\nPostUpdateApprove: Access to place the version inafter the update has occurred. 0 = Production, 1 = Test, 2 = Maintenance.Min=0, Max=2, Default=0\n\n\n\nPvsUpdateTask[]: If successful, the PvsUpdateTaskobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsUpdateTask for Farm\n\n\nGet all PvsUpdateTask for the Farm.\n\n\n\nGet-PvsUpdateTask\n\n\n\nEXAMPLE 2: Get PvsUpdateTask for Site\n\n\nGet all PvsUpdateTask for the Site named theSite.\n\n\n\nGet-PvsUpdateTask -SiteName theSite\n\n\n\nEXAMPLE 3: Get PvsUpdateTask\n\n\nGet PvsUpdateTask for UpdateTask named theUpdateTaskin Site named theSite.\n\n\n\nGet-PvsUpdateTask -Name theUpdateTask -SiteNametheSite\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nGet-PvsUploadCeip\n\n\nPerform a one time upload of CEIP data. Returnupload Id if successful.\n\n\n\nThis optional\n\n\n\nstring OneTimeUpload: If -OneTimeUpload isspecified, perform a one time upload.\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to have confirmationwithout the Confirm parameter.\n\n\n\nString: If successful, the String value is returned.\n\n\n\nGet-PvsVersion\n\n\nGet the version information.\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nMapiVersion: Version of the system inmajor.minor.point.build format.\n\n\n\nDbVersion: Version of the database schema as anumber. Default=0\n\n\n\nType: Type of system. Values are 0 (Normal), 1(OROM), and 2 (Secure). Default=0\n\n\n\nDbEdition: Edition of the database. If 'ExpressEdition', monitor dbSize.\n\n\n\nDbSize: Size of the database in MB. Monitor thisvalue if the edition is 'Express Edition' and this value is close to reachingthe 4000 MB maximum. Default=0\n\n\n\nMapiVersionNumber: Internal version number of thesystem. It is a number that is increaed by 100 for each major and minorrelease. Point releases are the numbers between each 100. Value is 0 when thesystem does not support MapiVersionNumber. Default=0\n\n\n\nPvsVersion[]: If successful, the PvsVersionobject(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsVersion\n\n\nGet the PvsVersion for the PVS SoapServer connectedto.\n\n\n\nGet-PvsVersion\n\n\n\nEXAMPLE 2: Get the PvsVersion MapiVersion\n\n\nGet the PvsVersion for the PVS SoapServer connectedto.\n\n\n\nGet-PvsVersion -Fields MapiVersion\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGet-PvsVirtualHostingPool\n\n\nGet the fields for a Virtual Hosting Pool or allVirtual Hosting Pools in a Site or the whole Farm. All Virtual Hosting Poolsare returned if no parameters are passed.\n\n\n\nOne of these optional\n\n\n\nGuid[] Guid or VirtualHostingPoolId: GUID of theVirtual Hosting Pool to Get.\n\n\n\nGuid[] SiteId: GUID of the Site to Get all VirtualHosting Pools for.\n\n\n\nstring[] SiteName: Name of the Site to Get allVirtual Hosting Pools for.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] Name or VirtualHostingPoolName: Name of theVirtual Hosting Pool to Get.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to Get all VirtualHosting Pools for.\n\n\n\nstring[] SiteName: Name of the Site to Get allVirtual Hosting Pools for.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nVirtualHostingPoolId or SiteId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or VirtualHostingPoolId: Read-only GUID thatuniquely identifies this Virtual Hosting Pool.\n\n\n\nName or VirtualHostingPoolName: Name of the VirtualHosting Pool. It is unique within the Site. Max Length=50\n\n\n\nSiteId: GUID of the Site that this Virtual HostingPool is a member of. It is not used with SiteName.\n\n\n\nSiteName: Name of the Site that this Virtual HostingPool is a member of. It is not used with SiteId.\n\n\n\nType: Type of the Virtual Hosting Pool. 0 = CitrixXenServer, 1 = Microsoft SCVMM/Hyper-V, 2 = VMWare vSphere/ESX. Min=0, Max=2,Default=0\n\n\n\nDescription: User description. Default=\"\"Max Length=250\n\n\n\nServer: Name or IP of the Host Server. MaxLength=255\n\n\n\nPort: Port of the Host Server. Min=80, Max=65534,Default=80\n\n\n\nDatacenter: Datacenter of the Virtual Hosting Pool.Default=\"\" Max Length=250\n\n\n\nUpdateLimit: Number of updates at the same time.Min=2, Max=1000, Default=1000\n\n\n\nUpdateTimeout: Timeout for updates. Min=2, Max=240,Default=60\n\n\n\nShutdownTimeout: Timeout for shutdown. Min=2,Max=30, Default=10\n\n\n\nUserName: Name to use when logging into the Server.\n\n\n\nPassword: Password to use when logging into theServer.\n\n\n\nXdHostingUnitUuid: UUID of XenDesktop Hosting UnitDefault=00000000-0000-0000-0000-000000000000\n\n\n\nXsPvsProxyEnabled: Enable XenServer PVS proxy whenset to true Default=false\n\n\n\nPrepopulateEnabled: Enable prepopulate when set totrue Default=false\n\n\n\nXsPvsSiteUuid: UUID of XenServerPVS_site  Default=00000000-0000-0000-0000-000000000000\n\n\n\nPvsVirtualHostingPool[]: If successful, thePvsVirtualHostingPool object(s) are returned.\n\n\n\nEXAMPLE 1: Get PvsVirtualHostingPool for Farm\n\n\nGet all PvsVirtualHostingPool for the Farm.\n\n\n\nGet-PvsVirtualHostingPool\n\n\n\nEXAMPLE 2: Get PvsVirtualHostingPool for Site\n\n\nGet all PvsVirtualHostingPool for the Site namedtheSite.\n\n\n\nGet-PvsVirtualHostingPool -SiteName theSite\n\n\n\nEXAMPLE 3: Get PvsVirtualHostingPool\n\n\nGet PvsVirtualHostingPool for VirtualHostingPoolnamed theVirtualHostingPool in Site named theSite.\n\n\n\nGet-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nGet-PvsXDSite\n\n\nGet the fields for a XenDesktop Site or allXenDesktop Sites. All XenDisktop Sites are returned if no parameters arepassed.\n\n\n\nThis optional\n\n\n\nGuid[] Guid or XdSiteId: GUID of the XenDesktop Siteto Get.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nXdSiteId\n\n\n\nIf only selected fields are needed, pass them in theFields parameter as a string array.\n\n\n\nGuid or XdSiteId: GUID of the XenDesktop Site.\n\n\n\nConfigServices: XenDesktop Server addresses. MaxLength=2000\n\n\n\nPvsXDSite[]: If successful, the PvsXDSite object(s)are returned.\n\n\n\nEXAMPLE 1: Get PvsXDSite for Farm\n\n\nGet all PvsXDSite for the Farm.\n\n\n\nGet-PvsXDSite\n\n\n\nEXAMPLE 2: Get PvsXDSite\n\n\nGet the PvsXDSite for the XDSite with Guid45687f34-c9ec-4852-9d55-337a1af41405.\n\n\n\nGet-PvsXDSite -Guid \"45687f34-c9ec-4852-9d55-337a1af41405\"\n\n\n\nGrant-PvsAuthGroup\n\n\nAssign an AuthGroup to have Farm, Site or CollectionAuthorization. If no Site or Collection is specified, the AuthGroup is givenFarm Authorization.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or AuthGroupId: GUID of the AuthGroup toassign Authorization for.\n\n\n\nstring[] Name or AuthGroupName: Name of theAuthGroup to assign Authorization for.\n\n\n\nOne of these optional\n\n\n\nGuid[] SiteId: GUID of the Site to assignAuthorization to for the AuthGroup.\n\n\n\nstring[] SiteName: Name of the Site to assignAuthorization to for the AuthGroup.\n\n\n\nGuid[] CollectionId: GUID of the Collection toassign Authorization to for the AuthGroup.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] CollectionName: Name of the Collection toassign Authorization to for the AuthGroup.\n\n\n\nOptional\n\n\n\nuint Role: Authorization Role for the Collection.300 or 400 can be used. Role can only be used with CollectionId orCollectionName. 300 is Collection Administrator, and 400 is CollectionOperator. Default=400\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to assignAuthorization to for the AuthGroup.\n\n\n\nstring[] SiteName: Name of the Site to assignAuthorization to for the AuthGroup.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nAuthGroupId, SiteId or CollectionId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Grant-PvsAuthGroup for PvsAuthGroup to PvsFarm\n\n\nGrant-PvsAuthGroup -Name theAuthGroup\n\n\n\nEXAMPLE 2: Grant-PvsAuthGroup for PvsAuthGroup Using Pipe\n\n\nThe Get-PvsAuthGroup output is piped to theGrant-PvsAuthGroup.\n\n\n\nGet-PvsAuthGroup -Name theAuthGroup -Fields Guid |Grant-PvsAuthGroup\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Grant-PvsAuthGroup for PvsAuthGroup to PvsSite\n\n\nGrant-PvsAuthGroup -Name theAuthGroup -SiteNametheSite\n\n\n\nEXAMPLE 4: Grant-PvsAuthGroup for PvsAuthGroup Using Pipe\n\n\nThe Get-PvsAuthGroup output is piped to theGrant-PvsAuthGroup.\n\n\n\nGet-PvsAuthGroup -Name theAuthGroup -Fields Guid |Grant-PvsAuthGroup -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 5: Grant-PvsAuthGroup for PvsSite Using Pipe\n\n\nThe Get-PvsSite output is piped to theGrant-PvsAuthGroup.\n\n\n\nGet-PvsSite -Name theSite -Fields Guid |Grant-PvsAuthGroup -Name theAuthGroup\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 6: Grant-PvsAuthGroup for PvsAuthGroup to PvsCollection\n\n\nGrant-PvsAuthGroup -Name theAuthGroup-CollectionName theCollection -SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 7: Grant-PvsAuthGroup for PvsAuthGroup Using Pipe\n\n\nThe Get-PvsAuthGroup output is piped to theGrant-PvsAuthGroup.\n\n\n\nGet-PvsAuthGroup -Name theAuthGroup -Fields Guid |Grant-PvsAuthGroup -CollectionName theCollection -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 8: Grant-PvsAuthGroup for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theGrant-PvsAuthGroup.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Grant-PvsAuthGroup -Name theAuthGroup\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 9: Grant-PvsAuthGroup for PvsAuthGroup to PvsCollection\n\n\nGrant-PvsAuthGroup -Name theAuthGroup-CollectionName theCollection -SiteName theSite -Role 300\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 10: Grant-PvsAuthGroup for PvsAuthGroup Using Pipe\n\n\nThe Get-PvsAuthGroup output is piped to theGrant-PvsAuthGroup.\n\n\n\nGet-PvsAuthGroup -Name theAuthGroup -Fields Guid |Grant-PvsAuthGroup -CollectionName theCollection -SiteName theSite -Role 300\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 11: Grant-PvsAuthGroup for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theGrant-PvsAuthGroup.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Grant-PvsAuthGroup -Name theAuthGroup -Role 300\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nImport-PvsDevices\n\n\nImport Devices from the contents of the comma or tabdelimited fileName specified. Each record needs to have Device Name, MacAddress, Site Name, Collection Name, optional Description and optional Type.Description must exist for Type to be included, but it can have 0 length. Typecan be 1 when it performs test of Disks, 2 when it performs maintenance onDisks, and 0 otherwise.\n\n\n\nThis required\n\n\n\nstring[] Name or FileName: Name of the file toimport the Devices from. This must be a full file path name.\n\n\n\nOne of these optional\n\n\n\nGuid[] CollectionId: GUID of the Collection toimport the Devices into.\n\n\n\nGuid[] SiteId: GUID of the Site to import theDevices into.\n\n\n\nstring[] SiteName: Name of the Site to import theDevices into.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] CollectionName: Name of the Collection toimport the Devices into.\n\n\n\nOptional\n\n\n\nSwitchParameter CopyTemplate: If -CopyTemplate isspecified, the Template Device for the collection, if it exists, will be usedfor the property settings of the imported Devices.\n\n\n\nSwitchParameter DoNotCreateNewSites: If-DoNotCreateNewSites is specified, new Sites found in the file will not becreated.\n\n\n\nSwitchParameter DoNotCreateNewCollections: If-DoNotCreateNewCollections is specified, new Collections found in the file willnot be created.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to import theDevices into.\n\n\n\nstring[] SiteName: Name of the Site to import theDevices into.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nCollectionId or SiteId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of this operationis \"medium\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Import-PvsDevices\n\n\nImport-PvsDevices -Name \"C:\\import\\theFileName\"\n\n\n\nEXAMPLE 2: Import-PvsDevices\n\n\nImport-PvsDevices -CopyTemplate -DoNotCreateNewSites-DoNotCreateNewCollections -Name \"C:\\import\\theFileName\"\n\n\n\nEXAMPLE 3: Import-PvsDevices for SiteName\n\n\nImport-PvsDevices -SiteName theSite -Name\"C:\\import\\theFileName\"\n\n\n\nEXAMPLE 4: Import-PvsDevices for SiteName with CopyTemplate andDoNotCreateNewCollections\n\n\nImport-PvsDevices -SiteName theSite -CopyTemplate-DoNotCreateNewCollections -Name \"C:\\import\\theFileName\"\n\n\n\nEXAMPLE 5: Import-PvsDevices for PvsSite Using Pipe\n\n\nThe Get-PvsSite output is piped to theImport-PvsDevices.\n\n\n\nGet-PvsSite -Name theSite -Fields Guid |Import-PvsDevices -Name \"C:\\import\\theFileName\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 6: Import-PvsDevices for CollectionName\n\n\nImport-PvsDevices -CollectionName theCollection-SiteName theSite -Name \"C:\\import\\theFileName\"\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 7: Import-PvsDevices for CollectionName with CopyTemplate\n\n\nImport-PvsDevices -CollectionName theCollection-SiteName theSite -CopyTemplate -Name \"C:\\import\\theFileName\"\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 8: Import-PvsDevices for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theImport-PvsDevices.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Import-PvsDevices -Name \"C:\\import\\theFileName\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nImport-PvsDisk\n\n\nImport a Disk. It will add a Disk Locator for theDisk to the Site. A manifest file must exist in the Store. If successful, thenew PvsDiskLocator is returned.\n\n\n\nThis required ; resolution\n\n\n\nstring Name or DiskLocatorName: Name of the DiskLocator File. It is unique within the Store. ASCII Max Length=52\n\n\n\nOne of these optional\n\n\n\nGuid ServerId: GUID of the single Server that thisDisk Locator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring ServerName: Name of the single Server thatthis Disk Locator is assigned to. It is not used with ServerId.Default=\"\"\n\n\n\nOptional\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring MenuText: Text that is displayed in the BootMenu. If this field has no value, the name value is used. Default=\"\"ASCII Max Length=64\n\n\n\nSwitchParameter Enabled: True when this disk can bebooted, false otherwise. Default=true\n\n\n\nSwitchParameter RebalanceEnabled: True when thisServer can automatically rebalance Devices, false otherwise. Default=false\n\n\n\nuint RebalanceTriggerPercent: Percent over fair loadthat triggers a dynamic Device rebalance. Min=5, Max=5000, Default=25\n\n\n\nuint SubnetAffinity: Qualifier for subnet affinitywhen assigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2, Default=0\n\n\n\nSwitchParameter VHDX: If -VHDX is specified, VHDXwill be used for the format of the image. VHDX has a Block size of 32 MB. VHDis the default.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsDiskLocator: If successful, the newPvsDiskLocator object is returned.\n\n\n\nEXAMPLE 1: Import-PvsDisk for VHDX to PvsDiskLocator\n\n\nThis example imports a VHDX Disk and uses thedefault settings for all other optional parameters.\n\n\n\n$thePvsDiskLocator = Import-PvsDisk -NametheDiskLocator -SiteName theSite -StoreName theStore -VHDX\n\n\n\nif ($thePvsDiskLocator -eq$null)      # check that the PvsDiskLocator wasreturned\n\n\n\n{\n\n\n\n$thePvsDiskLocator.Name            #display the name\n\n\n\n}\n\n\n\nEXAMPLE 2: Import-PvsDisk for VHD to PvsDiskLocator\n\n\nThis example imports a VHD Disk and sets all of theother optional parameters to non-default values.\n\n\n\n$thePvsDiskLocator = Import-PvsDisk -Name theDiskLocator-SiteName theSite -StoreName theStore -ServerName theServer -Description\"The VHD disk.\" -MenuText \"The VHD disk.\" -Enabled-RebalanceEnabled -rebalanceTriggerPercent 50 -SubnetAffinity 2\n\n\n\nif ($thePvsDiskLocator -eq$null)      # check that the PvsDiskLocator wasreturned\n\n\n\n{\n\n\n\n$thePvsDiskLocator.Name            #display the name\n\n\n\n}\n\n\n\nImport-PvsOemLicenses\n\n\nOem Only: Import the Oem Licenses from the contentsof the fileName specified.\n\n\n\nThis required\n\n\n\nstring[] Name or FileName: Name of the file toimport the Oem Licenses from. This must be a full file path name.\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Import-PvsOemLicenses\n\n\nImport-PvsOemLicenses -Name\"C:\\import\\theFileName\"\n\n\n\nInvoke-PvsActivateDeviceMAK\n\n\nProxy Activate with a Multiple Activation Key and/orapply the Confirmation ID to remote activate a Device DiskLocator pair.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device toActivate.\n\n\n\nstring[] Name or DeviceName: Name of the Device toActivate.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toActivate.\n\n\n\nThis required\n\n\n\nstring[] MakUsedToActivate: Multiple Activation Keyto Activate the Device with.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Invoke-ActivateDeviceMAK for Name\n\n\nInvoke-ActivateDeviceMAK -Name theDevice-MakUsedToActivate \"2FKWD-NYFC7-VH8G3-BK3GD-7T667\"\n\n\n\nEXAMPLE 2: Invoke-ActivateDeviceMAK for DeviceMac\n\n\nInvoke-ActivateDeviceMAK -DeviceMac\"00-11-22-33-44-55\" -MakUsedToActivate\"2FKWD-NYFC7-VH8G3-BK3GD-7T667\"\n\n\n\nEXAMPLE 3: Invoke-ActivateDeviceMAK for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theInvoke-ActivateDeviceMAK.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid |Invoke-ActivateDeviceMAK -MakUsedToActivate\"2FKWD-NYFC7-VH8G3-BK3GD-7T667\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nInvoke-PvsMarkDown\n\n\nMark Down a Device, Collection, View, Server orSite.\n\n\n\nOne of these required\n\n\n\nGuid[] DeviceId: GUID of the Device to Mark Down.\n\n\n\nstring[] DeviceName: Name of the Device to MarkDown.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toMark Down.\n\n\n\nGuid[] CollectionId: GUID of the Collection to MarkDown all Devices.\n\n\n\nGuid[] SiteViewId: GUID of the Site View to MarkDown all Devices.\n\n\n\nGuid[] SiteId: GUID of the Site. Can be used aloneto Mark Down all Servers and Devices in the Site.\n\n\n\nstring[] SiteName: Name of the Site. Can be usedalone to Mark Down all Servers and Devices in the Site.\n\n\n\nGuid[] FarmViewId: GUID of the Farm View to MarkDown all Devices.\n\n\n\nstring[] FarmViewName: Name of the Farm View to MarkDown all Devices.\n\n\n\nGuid[] DiskLocatorId: GUID of the DiskLocator toMark Down all Devices.\n\n\n\nGuid[] ServerId: GUID of the Server to Mark Down.\n\n\n\nstring[] ServerName: Name of the Server to MarkDown.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring[] CollectionName: Name of the Collection toMark Down all Devices.\n\n\n\nstring[] SiteViewName: Name of the Site View to MarkDown all Devices.\n\n\n\nstring[] DiskLocatorName: Name of the DiskLocator toMark Down all Devices.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site. Can be used aloneto Mark Down all Servers and Devices in the Site.\n\n\n\nstring[] SiteName: Name of the Site. Can be usedalone to Mark Down all Servers and Devices in the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId, CollectionId, SiteViewId, SiteId,FarmViewId, DiskLocatorId or ServerId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Invoke-PvsMarkDown for SiteName\n\n\nInvoke-PvsMarkDown -SiteName theSite\n\n\n\nEXAMPLE 2: Invoke-PvsMarkDown for PvsSite Using Pipe\n\n\nThe Get-PvsSite output is piped to theInvoke-PvsMarkDown.\n\n\n\nGet-PvsSite -Name theSite -Fields Guid |Invoke-PvsMarkDown\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Invoke-PvsMarkDown for ServerName\n\n\nInvoke-PvsMarkDown -ServerName theServer\n\n\n\nEXAMPLE 4: Invoke-PvsMarkDown for PvsServer Using Pipe\n\n\nThe Get-PvsServer output is piped to theInvoke-PvsMarkDown.\n\n\n\nGet-PvsServer -Name theServer -Fields Guid |Invoke-PvsMarkDown\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 5: Invoke-PvsMarkDown for DeviceName\n\n\nInvoke-PvsMarkDown -DeviceName theDevice\n\n\n\nEXAMPLE 6: Invoke-PvsMarkDown for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theInvoke-PvsMarkDown.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid |Invoke-PvsMarkDown\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 7: Invoke-PvsMarkDown for DeviceMac\n\n\nInvoke-PvsMarkDown -DeviceMac\"00-11-22-33-44-55\"\n\n\n\nEXAMPLE 8: Invoke-PvsMarkDown for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theInvoke-PvsMarkDown.\n\n\n\nGet-PvsDevice -DeviceMac\"00-11-22-33-44-55\" -Fields Guid | Invoke-PvsMarkDown\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 9: Invoke-PvsMarkDown for FarmViewName\n\n\nInvoke-PvsMarkDown -FarmViewName theFarmView\n\n\n\nEXAMPLE 10: Invoke-PvsMarkDown for PvsFarmView Using Pipe\n\n\nThe Get-PvsFarmView output is piped to theInvoke-PvsMarkDown.\n\n\n\nGet-PvsFarmView -Name theFarmView -Fields Guid | Invoke-PvsMarkDown\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 11: Invoke-PvsMarkDown for CollectionName\n\n\nInvoke-PvsMarkDown -CollectionName theCollection-SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 12: Invoke-PvsMarkDown for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theInvoke-PvsMarkDown.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Invoke-PvsMarkDown\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 13: Invoke-PvsMarkDown for SiteViewName\n\n\nInvoke-PvsMarkDown -SiteViewName theSiteView-SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 14: Invoke-PvsMarkDown for PvsSiteView Using Pipe\n\n\nThe Get-PvsSiteView output is piped to theInvoke-PvsMarkDown.\n\n\n\nGet-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Invoke-PvsMarkDown\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 15: Invoke-PvsMarkDown for DiskLocatorName\n\n\nInvoke-PvsMarkDown -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 16: Invoke-PvsMarkDown for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theInvoke-PvsMarkDown.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsMarkDown\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nInvoke-PvsPromoteDiskVersion\n\n\nCommit the changes made in the current Maintenanceor a Test version. Promotes the Maintenance version or a Test version to a Testor new Production version.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator File to Promote the Disk Version of.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Promote the Disk Version of.\n\n\n\nOptional\n\n\n\nDateTime ScheduledDate: Date/Time the new diskversion will become available. Uses only the date, hour and minute.\n\n\n\nuint TestVersion: Specifies the Test version numberthat should be Promoted to Production.\n\n\n\nSwitchParameter Test: If -Test is specified, set themode of the Maintenance version to Test.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to have confirmationwithout the Confirm parameter.\n\n\n\nEXAMPLE 1: Invoke-PvsPromoteDiskVersion to Production\n\n\nInvoke-PvsPromoteDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Invoke-PvsPromoteDiskVersion to Production Using Pipe\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsPromoteDiskVersion\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 3: Invoke-PvsPromoteDiskVersion to Test\n\n\nInvoke-PvsPromoteDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore -Test\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 4: Invoke-PvsPromoteDiskVersion to Test Using Pipe\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsPromoteDiskVersion -Test\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 5: Invoke-PvsPromoteDiskVersion Test to Production\n\n\nInvoke-PvsPromoteDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore -TestVersion 4\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 6: Invoke-PvsPromoteDiskVersion Test to Production Using Pipe\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsPromoteDiskVersion-TestVersion 4\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 7: Invoke-PvsPromoteDiskVersion to Production, for Future\n\n\nInvoke-PvsPromoteDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore -ScheduledDate \"2016/01/01\"\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 8: Invoke-PvsPromoteDiskVersion to Production, for Future UsingPipe\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsPromoteDiskVersion-ScheduledDate \"2016/01/01\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nInvoke-PvsRebalanceDevices\n\n\nRebalance Devices for a Server. When successful,returns the number of Devices affected.\n\n\n\nOne of these required\n\n\n\nGuid Guid or ServerId: GUID of the Server toRebalance Devices on, ServerName.\n\n\n\nstring Name or ServerName: Name of the Server toRebalance Devices on, ServerId.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nUInt32: If successful, the numeric value is returned\n\n\n\nEXAMPLE 1: Invoke-PvsRebalanceDevices for Name\n\n\nInvoke-PvsRebalanceDevices -Name theServer\n\n\n\nInvoke-PvsRevertDiskVersion\n\n\nSet the existing highest version disk to Maintenanceor Test mode. A specified version can be reverted to Test mode if there are noProduction versions higher than it. If the mode is Test, it can be set toMaintenance.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator File to Revert.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Revert.\n\n\n\nOptional\n\n\n\nuint Version: Specifies the version number thatshould be Reverted to Test mode.\n\n\n\nSwitchParameter Test: If -Test is specified, whenreverting the highest version, the access will be set to Test, otherwise set itto Maintenance.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Invoke-PvsRevertDiskVersion to Maintenance\n\n\nInvoke-PvsRevertDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Invoke-PvsRevertDiskVersion to Maintenance Using Pipe\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsRevertDiskVersion\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 3: Invoke-PvsRevertDiskVersion to Test\n\n\nInvoke-PvsRevertDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore -Test\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 4: Invoke-PvsRevertDiskVersion to Test Using Pipe\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsRevertDiskVersion -Test\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that the SiteNameor SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 5: Invoke-PvsRevertDiskVersion Production to Test\n\n\nInvoke-PvsRevertDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore -Version 4\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 6: Invoke-PvsRevertDiskVersion Production to Test Using Pipe\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsRevertDiskVersion -Version4\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nMerge-PvsDisk\n\n\nMerge the Disk.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator File to Merge.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Merge.\n\n\n\nOptional\n\n\n\nuint Access: Access to set the version to when mergeis finished. Default value is found in the Farm MergeMode setting. Values are:0 (Production), 1 (Test) and 2 (Maintenance), Min=0, Max=2\n\n\n\nSwitchParameter NewBase: If -NewBase is specified,create a new base from last base plus all updates from that base. The defaultis to merge all updates from the last base by default.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the members belowcan be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or \"low\"to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Merge-PvsDisk for Name\n\n\nMerge-PvsDisk -Name theDiskLocator -SiteName theSite-StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Merge-PvsDisk for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theMerge-PvsDisk.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Merge-PvsDisk\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 3: Merge-PvsDisk for Name with Access and NewBase\n\n\nMerge-PvsDisk -Name theDiskLocator -SiteName theSite-StoreName theStore -Access 2 -NewBase\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 4: Merge-PvsDisk for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theMerge-PvsDisk.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Merge-PvsDisk -Access 2 -NewBase\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nMount-PvsDisk\n\n\nMount a disk. If successful, the drive letter or anempty string is returned. An empty string can be returned if a drive letter wasnot assigned by the operating system before the maxDiskLetterWaitSeconds isused up.\n\n\n\nThis required\n\n\n\nGuid Guid or DiskLocatorId: GUID of the Disk Locatorto Mount the Disk.\n\n\n\nor this required ; resolution\n\n\n\nstring Name or DiskLocatorName: Name of the DiskLocator to Mount the Disk.\n\n\n\nOne of these optional\n\n\n\nGuid ServerId: Specific Server GUID to use to Mountthe Disk.\n\n\n\nstring ServerName: Specific Server Name to use toMount the Disk.\n\n\n\nOptional\n\n\n\nuint MaxDiskLetterWaitSeconds: Once mapping a diskis successful, this is the maximum amount of seconds spent waiting for theoperating system to return a drive letter. If the operating system does notreturn a drive letter before the maximum wait time, then an empty string isreturned. Default=30\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId or ServerId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nString: If successful, the String value is returned.\n\n\n\nEXAMPLE 1: Mount-PvsDisk\n\n\n$theDriveLetter = Start-PvsMapDisk -NametheDiskLocator -SiteName theSite -StoreName theStore\n\n\n\nif ($theDriveLetter -ne $null -and$theDriveLetter.length -gt 0)\n\n\n\n{\n\n\n\n$theDriveLetter    # display thedrive letter\n\n\n\n}\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Mount-PvsDisk for PvsServer with MaxDiskLetterWaitSeconds\n\n\n$theDriveLetter = Start-PvsMapDisk -NametheDiskLocator -SiteName theSite -StoreName theStore -ServerName theServer-MaxDiskLetterWaitSeconds 60\n\n\n\nif ($theDriveLetter -ne $null -and$theDriveLetter.length -gt 0)\n\n\n\n{\n\n\n\n$theDriveLetter    # display thedrive letter\n\n\n\n}\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nMove-PvsDeviceToCollection\n\n\nMove a Device to a Collection. Personal vDiskDevices cannot be moved to a Collection in another Site.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device to Move.\n\n\n\nstring[] Name or DeviceName: Name of the Device toMove.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toMove.\n\n\n\nThis required\n\n\n\nGuid[] CollectionId: GUID of the Collection to Movea Device to. The Device is moved from whatever Collection it is currently in,to the Collection specified.\n\n\n\nor this required ; resolution\n\n\n\nstring[] CollectionName: Name of the Collection toMove a Device to. The Device is moved from whatever Collection it is currentlyin, to the Collection specified.\n\n\n\nOptional\n\n\n\nSwitchParameter CopyTemplate: If -CopyTemplate isspecified, the Template Device for the Collection, if it exists, will be usedfor the property settings of the moved Device.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId or CollectionId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Move-PvsDeviceToCollection for PvsDevice to PvsCollection\n\n\nMove-PvsDeviceToCollection -Name theDevice-CollectionName theCollection -SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Move-PvsDeviceToCollection for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theMove-PvsDeviceToCollection.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid |Move-PvsDeviceToCollection -CollectionName thetheCollection -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 3: Move-PvsDeviceToCollection for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theMove-PvsDeviceToCollection.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Move-PvsDeviceToCollection -Name theDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nMove-PvsServerToSite\n\n\nMove a Server to a Site.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server toAssign.\n\n\n\nstring[] Name or ServerName: Name of the Server toAssign.\n\n\n\nOne of these required\n\n\n\nGuid[] SiteId: GUID of the Site to Assign a Server.\n\n\n\nstring[] SiteName: Name of the Site to Assign aServer.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId or SiteId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Move-PvsServerToSite for PvsServer to PvsSite\n\n\nMove-PvsServerToSite -Name theServer -SiteNametheSite\n\n\n\nEXAMPLE 2: Move-PvsServerToSite for PvsServer Using Pipe\n\n\nThe Get-PvsServer output is piped to theMove-PvsServerToSite.\n\n\n\nGet-PvsServer -Name theServer -Fields Guid |Move-PvsServerToSite -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Move-PvsServerToSite for PvsSite Using Pipe\n\n\nThe Get-PvsSite output is piped to theMove-PvsServerToSite.\n\n\n\nGet-PvsSite -Name theSite -Fields Guid |Move-PvsServerToSite -Name theServer\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nNew-PvsAuthGroup\n\n\nCreate a new authorization AuthGroup for an ActiveDirectory or Windows Group.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or AuthGroupName: Name of the ActiveDirectory or Windows Group. Max Length=450\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsAuthGroup: If successful, the new PvsAuthGroupobject is returned.\n\n\n\nEXAMPLE 1: Create PvsAuthGroup with Minimum Fields\n\n\nCreates a PvsAuthGroup for the\"AD\\PVSFarmAdminGroup\" Active Directory security group.\n\n\n\nNew-PvsAuthGroup -Name\"AD\\PVSFarmAdminGroup\"\n\n\n\nEXAMPLE 2: Create PvsAuthGroup with All Fields\n\n\nCreates a PvsAuthGroup for the\"AD\\PVSFarmAdminGroup\" Active Directory security group with\"Farm AuthGroup\" as the description.\n\n\n\nNew-PvsAuthGroup -Name\"AD\\PVSFarmAdminGroup\" -Description \"Farm AuthGroup\"\n\n\n\nEXAMPLE 3: Create PvsAuthGroup and Assign to Site\n\n\nCreates a PvsAuthGroup for the\"AD\\PVSSiteAdminGroup\" Active Directory security group and Assigns itto theSite.\n\n\n\nNew-PvsAuthGroup -Name\"AD\\PVSSiteAdminGroup\" | Grant-PvsAuthGroup -SiteName theSite\n\n\n\nNew-PvsCeipData\n\n\nCreate a new entry for CeipData table.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nuint Enabled: 1 if CEIP is enabled, otherwise 0.Min=0, Max=1\n\n\n\nDateTime NextUpload: Date and time next CEIP uploadis due if enabled is 1. Default=Empty\n\n\n\nuint InProgress: 1 if an upload is currently inprogress, otherwise 0. Default=0\n\n\n\nGuid ServerId: ID of server that is currentlyuploading, null if InProgress is 0.Default=00000000-0000-0000-0000-000000000000\n\n\n\nuint OneTimeUpload: 1 to perform a one time upload.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsCeipData: If successful, the new PvsCeipDataobject is returned.\n\n\n\nEXAMPLE 1: Create PvsCeipData with Minimum Fields\n\n\nCreates a PvsCeipData with enabled as false.\n\n\n\nNew-PvsCeipData -Enabled 0\n\n\n\nEXAMPLE 2: Create PvsCeipData with All Fields\n\n\nCreates a PvsCeipData with enabled as true and withall fields set different than defaults.\n\n\n\nNew-PvsCeipData -Enabled 1 -NextUpload\"2016-01-14 15:52:00\"\n\n\n\nNew-PvsCisData\n\n\nCreate a new entry for CisData table.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring UserName: Username used to obtain the tokenMax Length=255\n\n\n\nstring Path: Path where the last problem reportbundle was saved Default=\"\" Max Length=255\n\n\n\nstring Password: Password of the user required toobtain the token. This is required only by Set and Add\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsCisData: If successful, the new PvsCisData objectis returned.\n\n\n\nEXAMPLE 1: Create PvsCisData with Minimum Fields\n\n\nCreates a PvsCisData with userName as userName andwith all fields set different than defaults.\n\n\n\nNew-PvsCisData -UserName userName\n\n\n\nNew-PvsCollection\n\n\nCreate a new Collection for a Site.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or CollectionName: Name of theCollection. It is unique within the Site. Max Length=50\n\n\n\nGuid SiteId: GUID of the Site that this Collectionis a member of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site that thisCollection is a member of. It is not used with SiteId.\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nuint LastAutoAddDeviceNumber: The Device Number ofthe last Auto Added Device. Default=0\n\n\n\nSwitchParameter Disabled: If -Disabled is specified,the Devices in the Collection can not be booted. By default the Devices can bebooted.\n\n\n\nstring AutoAddPrefix: The string put before theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno end digit Max Length=12\n\n\n\nstring AutoAddSuffix: The string put after theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno begin digit Max Length=12\n\n\n\nSwitchParameter NoAutoAddZeroFill: If-NoAutoAddZeroFill is specified, zeros will not be placed before the DeviceNumber up to the AutoAddNumberLength for Auto Add.\n\n\n\nuint AutoAddNumberLength: The maximum length of theDevice Number for Auto Add. This length plus the AutoAddPrefix length plus theAutoAddSuffix length must be less than 16. Required that ((lenautoAddPrefix+lenautoAddSuffix)+AutoAddNumberLength)\n<\n=15.Min=3, Max=9, Default=4\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to have confirmationwithout the Confirm parameter.\n\n\n\nPvsCollection: If successful, the new PvsCollectionobject is returned.\n\n\n\nEXAMPLE 1: Create PvsCollection with Minimum Fields\n\n\nCreates a PvsCollection named theCollection intheSite.\n\n\n\nNew-PvsCollection -Name theCollection -SiteNametheSite\n\n\n\nEXAMPLE 2: Create PvsCollection with All Fields\n\n\nCreates a PvsCollection named theCollection intheSite with \"XenServer Collection\" as the description that isDisabled and has all AutoAdd settings different than defaults.\n\n\n\nNew-PvsCollection -Name theCollection -SiteNametheSite -Description \"XenServer Collection\" -Disabled-LastAutoAddDeviceNumber 100 -AutoAddPrefix A -AutoAddSuffix A-NoAutoAddZeroFill -AutoAddNumberLength 3\n\n\n\nEXAMPLE 3: Create PvsCollection and Assign AuthGroup to it\n\n\nCreates a PvsCollection named theCollection intheSite and Assigns AuthGroup \"AD\\PVSCollectionAdminGroup\" to it.\n\n\n\nNew-PvsCollection -Name theCollection -SiteNametheSite | Grant-PvsAuthGroup -AuthGroupName\"AD\\PVSCollectionAdminGroup\"\n\n\n\nNew-PvsDevice\n\n\nAdd a new Device to a Collection.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15\n\n\n\nGuid CollectionId: GUID of the Collection thisDevice is to be a member of. It is not used with CollectionName.\n\n\n\nstring CollectionName: Name of the Collection thisDevice is to be a member of. SiteName or SiteId must also be used.\n\n\n\nGuid SiteId: GUID of the Site the CollectionName isto be a member of. This or SiteName is used with CollectionName.\n\n\n\nstring SiteName: Name of the Site the CollectionNameis to be a member of. This or SiteId is used with CollectionName.\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nPvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.\n\n\n\nuint BootFrom: Device to boot from. Choices are 1for vDisk, 2 for Hard Disk, and 3 for Floppy. Min=1, Max=3, Default=1\n\n\n\nstring ClassName: Used by Automatic Update featureto match new versions of Disks to a Device. Default=\"\" Max Length=41\n\n\n\nuint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901\n\n\n\nSwitchParameter Disabled: If -Disabled is specified,the Device can not be booted. By default the Device can be booted.\n\n\n\nSwitchParameter LocalDiskEnabled: If-LocalDiskEnabled is specified, there will be a local disk menu choice for theDevice.\n\n\n\nuint Authentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. Min=0,Max=2, Default=0\n\n\n\nstring User: Name of user to authenticate before theboot process continues. Default=\"\" ASCII Max Length=20\n\n\n\nstring Password: Password of user to authenticatebefore the boot process continues. Default=\"\" ASCII Max Length=100\n\n\n\nSwitchParameter CopyTemplate: If -CopyTemplate isspecified, the Template Device for the collection, if it exists, will be usedfor the property settings of the new Device.\n\n\n\nuint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0\n\n\n\nstring DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255\n\n\n\nstring DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186\n\n\n\nstring DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000\n\n\n\nDateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty\n\n\n\nuint Type: 1 when it performs test of Disks, 2 whenit performs maintenance on Disks, 0 otherwise. Min=0, Max=2, Default=0\n\n\n\nuint LocalWriteCacheDiskSize: The size in GB toformat the Device cache file disk. If the value is 0, then the disk is notformatted. Min=0, Max=2048, Default=0\n\n\n\nGuid VirtualHostingPoolId: GUID that uniquelyidentifies the Virtual Hosting Pool for a VM. This is needed when Adding a VM device.Default=00000000-0000-0000-0000-000000000000\n\n\n\nSwitchParameter BdmBoot: If -BdmBoot is 0, use PXE,1 use BDM. PXE boot is used by default.\n\n\n\nuint BdmType: Use PXE boot when set to 0, BDM (Bios)boot when set to 1 and BDM (Uefi) boot when set to 2.  Default=0\n\n\n\nuint BdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3use USB. Default=0\n\n\n\nDateTime BdmUpdated: Timestamp of the last BDM bootdisk update. Default=Empty\n\n\n\nDateTime BdmCreated: Timstamp when BDM device wascreated  Default=Empty\n\n\n\nGuid XsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000\n\n\n\nSwitchParameter XsPvsProxyEnabled: Enable XenServerPVS proxy when set to true Default=false\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsDevice: If successful, the new PvsDevice objectis returned.\n\n\n\nEXAMPLE 1: Create PvsDevice with Minimum Fields\n\n\nCreates a PvsDevice named theDevice in theCollectionof theSite.\n\n\n\nNew-PvsDevice -Name theDevice -DeviceMac\"00-11-22-33-44-55\" -SiteName theSite -CollectionName theCollection\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Create PvsDevice with All Fields\n\n\nCreates a PvsDevice named theDevice in theCollectionof theSite with all fields set different than defaults.\n\n\n\nNew-PvsDevice -Name theDevice -DeviceMac\"00-11-22-33-44-55\" -SiteName theSite -CollectionName theCollection-Description \"XenServer Device\" -BootFrom 2 -ClassName C -Port 6000-Disabled -LocalDiskEnabled -Authentication 1 -User U -Password P -CopyTemplate-LogLevel 3 -Type 2 -LocalWriteCacheDiskSize 100 -BdmBoot -VirtualHostingPoolId\"15e0544e-4cf9-449e-b47f-8d836b16026f\"\n\n\n\nDo not set AdTimestamp, AdSignature, DomainName,DomainObjectSID, DomainControllerName and DomainTimeCreated. They are only setinternally by PVS.\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 3: Create PvsDevice and Boot it\n\n\nCreates a PvsDevice named theDevice in theCollectionof theSite and Boots it.\n\n\n\nNew-PvsDevice -Name theDevice -DeviceMac\"00-11-22-33-44-55\" -SiteName theSite -CollectionName theCollection |Start-PvsBoot\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nNew-PvsDeviceWithPersonalvDisk\n\n\nAdd a new Device with Personal vDisk to acollection.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15\n\n\n\nGuid CollectionId: GUID of the Collection thisDevice with Personal vDisk is to be a member of. It is not used withCollectionName.\n\n\n\nstring CollectionName: Name of the Collection thisDevice with Personal vDisk is to be a member of. SiteName or SiteId must alsobe used.\n\n\n\nGuid DiskLocatorId: GUID of the Disk Locator toupdate with this Device.\n\n\n\nGuid SiteId: GUID of the Site the CollectionName isto be a member of. This or SiteName is used with CollectionName.\n\n\n\nstring SiteName: Name of the Site the CollectionNameis to be a member of. This or SiteId is used with CollectionName.\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nPvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device with PersonalvDisk.\n\n\n\nuint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901\n\n\n\nuint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0\n\n\n\nstring DomainName: Fully qualified name of thedomain that the Device with Personal vDisk belongs to. Do not set this field,it is only set internally by PVS. Default=\"\" Max Length=255\n\n\n\nstring DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device with Personal vDisk's computeraccount. Do not set this field, it is only set internally by PVS.Default=\"\" Max Length=186\n\n\n\nstring DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000\n\n\n\nDateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty\n\n\n\nuint Type: 3 when it has a Personal vDisk, 4 when ithas a Personal vDisk and performs tests. Min=3, Max=4, Default=3\n\n\n\nstring PvdDriveLetter: Personal vDisk Drive letter.Range is F to Z. Default=\"\" Max Length=1\n\n\n\nuint LocalWriteCacheDiskSize: The size in GB toformat the Device cache file disk. If the value is 0, then the disk is notformatted. Min=0, Max=2048, Default=0\n\n\n\nSwitchParameter BdmBoot: If -BdmBoot is specified,user BDM instead of PXE boot. PXE boot is used by default.\n\n\n\nGuid XdSiteId: GUID of the XenDesktop Site.Default=00000000-0000-0000-0000-000000000000\n\n\n\nuint XdCatalogId: Integer identifier of theXenDesktop Catalog. Default=\"\"\n\n\n\nGuid VirtualHostingPoolId: GUID that uniquelyidentifies the Virtual Hosting Pool for a VM. This is needed when Adding a VMdevice. Default=00000000-0000-0000-0000-000000000000\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsDeviceWithPersonalvDisk: If successful, the newPvsDeviceWithPersonalvDisk object is returned.\n\n\n\nEXAMPLE 1: Create PvsDeviceWithPersonalvDisk with Minimum Fields\n\n\nCreates a PvsDeviceWithPersonalvDisk with PersonalvDisk named theDevice in theCollection of theSite.\n\n\n\nNew-PvsDeviceWithPersonalvDisk -Name theDevice -DeviceMac\"00-11-22-33-44-55\" -SiteName theSite -CollectionName theCollection\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Create PvsDeviceWithPersonalvDisk with All Fields\n\n\nCreates a PvsDeviceWithPersonalvDisk named theDevicein theCollection of theSite with all fields set different than defaults.\n\n\n\nNew-PvsDeviceWithPersonalvDisk -Name theDevice-DeviceMac \"00-11-22-33-44-55\" -SiteName theSite -CollectionNametheCollection -Description \"XenServer Device\" -ClassName C -Port 6000-LogLevel 3 -Type 4 -PvdDriveLetter G -LocalWriteCacheDiskSize 100 -BdmBootXdSiteId \"bd712b52-a262-4aa2-9c36-1602efe07f57\" -XdCatalogId 5-VirtualHostingPoolId \"15e0544e-4cf9-449e-b47f-8d836b16026f\"\n\n\n\nDo not set AdTimestamp, AdSignature, DomainName,DomainObjectSID, DomainControllerName and DomainTimeCreated. They are only setinternally by PVS.\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 3: Create PvsDeviceWithPersonalvDisk and Boot it\n\n\nCreates a PvsDeviceWithPersonalvDisk with PersonalvDisk named theDevice in theCollection of theSite and Boots it.\n\n\n\nNew-PvsDeviceWithPersonalvDisk -Name theDevice-DeviceMac \"00-11-22-33-44-55\" -SiteName theSite -CollectionNametheCollection | Start-PvsBoot\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nNew-PvsDirectory\n\n\nCreate a Directory on the Server specified.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server tocreate a Directory on.\n\n\n\nstring[] Name or ServerName: Name of the Server tocreate a Directory on.\n\n\n\nThis required\n\n\n\nstring[] Path: Path of the new Directory to create.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: New-PvsDirectory for Name\n\n\nNew-PvsDirectory -Name theServer -Path\"C:\\directory\\subdirectory\"\n\n\n\nEXAMPLE 2: New-PvsDirectory for PvsServer Using Pipe\n\n\nThe Get-PvsServer output is piped to theNew-PvsDirectory.\n\n\n\nGet-PvsServer -Name theServer -Fields Guid |New-PvsDirectory -Path \"C:\\directory\\subdirectory\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nNew-PvsDiskLocator\n\n\nCreate a new Disk Locator for a Site. The Disk filemust already exist.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or DiskLocatorName: Name of the DiskLocator File. It is unique within the Store. ASCII Max Length=52\n\n\n\nGuid SiteId: GUID of the Site this DiskLocator is tobe a member of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site this DiskLocatoris to be a member of. It is not used with SiteId.\n\n\n\nGuid StoreId: GUID of the Store that this DiskLocator is a member of. SiteName or SiteId must also be used. It is not usedwith StoreName.\n\n\n\nstring StoreName: Name of the Store that this DiskLocator is a member of. SiteName or SiteId must also be used. It is not usedwith StoreId.\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring MenuText: Text that is displayed in the BootMenu. If this field has no value, the name value is used. Default=\"\"ASCII Max Length=64\n\n\n\nGuid ServerId: GUID of the single Server that thisDisk Locator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring ServerName: Name of the single Server thatthis Disk Locator is assigned to. It is not used with ServerId.Default=\"\"\n\n\n\nSwitchParameter Disabled: If -Disabled is specified,the disk can not be booted. By default the disk can be booted.\n\n\n\nSwitchParameter RebalanceEnabled: If-RebalanceEnabled is specified, this Server can automatically rebalanceDevices.\n\n\n\nuint RebalanceTriggerPercent: Percent over fair loadthat triggers a dynamic Device rebalance. Min=5, Max=5000, Default=25\n\n\n\nuint SubnetAffinity: Qualifier for subnet affinitywhen assigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2,Default=0\n\n\n\nstring NewDiskWriteCacheType: The WriteCacheTypethat if a new Disk will be created, it will be set with. It is only used when anew Disk is being created. Value are: 0 (Private), (other values are standardimage) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache on Device HardDisk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9 (Cache inDevice RAM with Overflow on Hard Disk) Default=0\n\n\n\nSwitchParameter VHDX: If -VHDX is specified, theformat of the image the DiskLocator is being added for that has never been addedto the Farm is VHDX. Otherwise it is assumed to be VHD.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsDiskLocator: If successful, the newPvsDiskLocator object is returned.\n\n\n\nEXAMPLE 1: Create PvsDiskLocator with Minimum Fields\n\n\nCreates a PvsDiskLocator named theDiskLocator intheSite and theStore.\n\n\n\nNew-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore\n\n\n\nEXAMPLE 2: Create PvsDiskLocator with All Fields\n\n\nCreates a PvsDiskLocator named theDiskLocator intheSite and theStore with all fields set different than defaults.\n\n\n\nNew-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Description \"XenServer DiskLocator\"-MenuText \"XenServer Disk\" -ServerName theServer -Disabled-RebalanceEnabled -RebalanceTriggerPercent -50 -SubnetAffinity -1-NewDiskWriteCacheType 9 -VHDX\n\n\n\n-NewDiskWriteCacheType 9 (Cache in Device RAM withOverflow on Hard Disk) is an important parameter since this is the most optimalcache type.\n\n\n\nNew-PvsDiskMaintenanceVersion\n\n\nCreate a Maintenance version for the Disk Locator.Returns a PvsDiskVersion when successful.\n\n\n\nThis required\n\n\n\nGuid Guid or DiskLocatorId: GUID of the Disk LocatorFile to Enable Disk Maintenance on.\n\n\n\nor this required ; resolution\n\n\n\nstring Name or DiskLocatorName: Name of the DiskLocator File to Enable Disk Maintenance on.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsDiskVersion: If successful, the newPvsDiskVersion object is returned.\n\n\n\nEXAMPLE 1: New-PvsDiskMaintenanceVersion\n\n\nThis example create a maintenance version for anexisting DiskLocator. It returns a PvsDiskVersion when successful.\n\n\n\n$thePvsDiskVersion = New-PvsDiskMaintenanceVersion-Name theDiskLocator -SiteName theSite -StoreName theStore\n\n\n\nif ($thePvsDiskVersion -ne $null)\n\n\n\n{\n\n\n\n$thePvsDiskVersion.Name    #display the name of the version file\n\n\n\n}\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nNew-PvsDiskUpdateDevice\n\n\nAdd a new Device related to a Disk that can beupdated.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15\n\n\n\nGuid VirtualHostingPoolId: GUID of the VirtualHosting Pool. It is not used with VirtualHostingPoolName.\n\n\n\nstring VirtualHostingPoolName: Name of the VirtualHosting Pool.\n\n\n\nGuid DiskLocatorId: GUID of the Disk Locator toupdate with this Device.\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nPvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.\n\n\n\nuint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901\n\n\n\nuint AdTimestamp: The time the Active Directory machineaccount password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0\n\n\n\nstring DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255\n\n\n\nstring DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186\n\n\n\nstring DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000\n\n\n\nDateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsDiskUpdateDevice: If successful, the newPvsDiskUpdateDevice object is returned.\n\n\n\nEXAMPLE 1: Create PvsDiskUpdateDevice with Minimum Fields\n\n\nCreates a PvsDiskUpdateDevice named theDevice forthe DiskLocatorId 2888f183-2f48-4771-b8dd-e5a44b2ee59b.\n\n\n\nNew-PvsDiskUpdateDevice -Name theDevice -DeviceMac\"00-11-22-33-44-55\" -VirtualHostingPoolName theVirtualHostingPool-DiskLocatorId \"2888f183-2f48-4771-b8dd-e5a44b2ee59b\"\n\n\n\nEXAMPLE 2: Create PvsDiskUpdateDevice with All Fields\n\n\nCreates a PvsDiskUpdateDevice named theDevice forthe DiskLocatorId 2888f183-2f48-4771-b8dd-e5a44b2ee59b with all fields setdifferent than defaults.\n\n\n\nNew-PvsDiskUpdateDevice -Name theDevice -DeviceMac\"00-11-22-33-44-55\" -VirtualHostingPoolName theVirtualHostingPool-DiskLocatorId \"2888f183-2f48-4771-b8dd-e5a44b2ee59b\" -Description\"DiskUpdate Device\" -Port 6000 -LogLevel 3\n\n\n\nDo not set AdTimestamp, AdSignature, DomainName,DomainObjectSID, DomainControllerName and DomainTimeCreated. They are only setinternally by PVS.\n\n\n\nNew-PvsFarmView\n\n\nCreate a new View for the Farm.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or FarmViewName: name of the Farm View. MaxLength=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to have confirmationwithout the Confirm parameter.\n\n\n\nPvsFarmView: If successful, the new PvsFarmViewobject is returned.\n\n\n\nEXAMPLE 1: Create PvsFarmView with Minimum Fields\n\n\nCreates a PvsFarmView named theFarmView.\n\n\n\nNew-PvsFarmView -Name theFarmView\n\n\n\nEXAMPLE 2: Create PvsFarmView with All Fields\n\n\nCreates a PvsFarmView named theFarmView with\"XenServer FarmView\" as the description.\n\n\n\nNew-PvsFarmView -Name theFarmView -Description\"XenServer FarmView\"\n\n\n\nNew-PvsServer\n\n\nAdd a new Server to a Site.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or ServerName: Computer name with nospaces. ASCII computer name characters Max Length=21\n\n\n\nGuid SiteId: GUID of the Site this Server is to be amember of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site this Server is tobe a member of. It is not used with SiteId.\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nuint AdMaxPasswordAge: Number of days before apassword expires. Min=1, Max=30, Default=7\n\n\n\nuint LicenseTimeout: Amount of seconds before alicense times out. Min=15, Max=300, Default=30\n\n\n\nuint VDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0\n\n\n\nuint FirstPort: Number of the first UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910\n\n\n\nuint LastPort: Number of the last UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930\n\n\n\nuint ThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs) \n<\n= 1000.Min=1, Max=60, Default=8\n\n\n\nuint BuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24\n\n\n\nuint ServerCacheTimeout: Number of seconds to waitbefore considering another Server is down. Min=5, Max=60, Default=8\n\n\n\nuint IoBurstSize: Number of bytes read/writes cansend in a burst of packets. Required thatIoBurstSize/(MaxTransmissionUnits-76)\n<\n=32. Min=4096, Max=61440,Default=32768\n\n\n\nuint MaxTransmissionUnits: Ethernet maximumtransmission unit size for the protocol for use for Server and Device. Requiredthat IoBurstSize/(MaxTransmissionUnits-76)\n<\n=32. Min=502, Max=16426,Default=1506\n\n\n\nuint MaxBootDevicesAllowed: Maximum number ofDevices allowed to boot simultaneously. Min=1, Max=1000, Default=500\n\n\n\nuint MaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60\n\n\n\nuint BootPauseSeconds: Number of seconds that aDevice will pause during login if its server busy. Min=1, Max=60, Default=10\n\n\n\nSwitchParameter AdMaxPasswordAgeEnabled: If-AdMaxPasswordAgeEnabled is specified, Age the password.\n\n\n\nSwitchParameter EventLoggingEnabled: If-EventLoggingEnabled is specified, event logging is enabled.\n\n\n\nSwitchParameter NonBlockingIoDisabled: If-NonBlockingIoDisabled is specified, do not use non-Blocking IO.\n\n\n\nstring[] Ip: One or more streaming ip addresses.\n\n\n\nuint InitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000, Default=50\n\n\n\nuint InitialTransactionConnectionPoolSize: Initialsize of database connection pool for transactional queries. Min=1, Max=1000,Default=50\n\n\n\nuint MaxQueryConnectionPoolSize: Maximum size ofdatabase connection pool for non-transactional queries. Min=1, Max=32767,Default=1000\n\n\n\nuint MaxTransactionConnectionPoolSize: Maximum sizeof database connection pool for transactional queries. Min=1, Max=32767,Default=1000\n\n\n\nuint RefreshInterval: Interval, in number ofseconds, the server should wait before refreshing settings. If set to 0, unuseddatabase connections are never released. Min=0, Max=32767, Default=300\n\n\n\nuint UnusedDbConnectionTimeout: Interval, in numberof seconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300\n\n\n\nuint BusyDbConnectionRetryCount: Number of times afailed database connection will be retried. Min=0, Max=32767, Default=2\n\n\n\nuint BusyDbConnectionRetryInterval: Interval, innumber of milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25\n\n\n\nuint LocalConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are local. A value of 0 disables thefeature. Min=0, Max=128, Default=4\n\n\n\nuint RemoteConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are remote. A value of 0 disables thefeature. Min=0, Max=128, Default=4\n\n\n\nstring RamDiskIpAddress: IP address to use fortransferring the RAM Disk. When equal to 0.0.0.0 the server IP is used with thefirst part replaced with 233. Default=0.0.0.0\n\n\n\nuint RamDiskTimeToLive: Time to live for theinvitation packet sent to Devices. Min=1, Max=255, Default=1\n\n\n\nSwitchParameter RamDiskInvitationVariable: If-RamDiskInvitationVariable is specified, the Invitation Type is Variable. Bydefault it is Fixed.\n\n\n\nuint RamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=4\n\n\n\nuint LogFileSizeMax: Maximum size log files canreach in Megabytes. Min=1, Max=50, Default=5\n\n\n\nuint LogFileBackupCopiesMax: Maximum number of logfile backups. Min=1, Max=50, Default=4\n\n\n\nfloat PowerRating: A strictly relative rating ofthis Server's capabilities when compared to other Servers in the Store(s) itbelongs too; can be used to help tune load balancing. Min=0.1, Max=1000,Default=1\n\n\n\nDateTime LastCeipUploadAttempt: Time that thisserver last attempted a CEIP upload. Default=Empty\n\n\n\nDateTime LastBugReportAttempt: Time that this serverlast attempted to upload or generate a bug report bundle. Default=Empty\n\n\n\nstring LastBugReportStatus: Status of the last bugreport on this server. Default=\"\" Max Length=250\n\n\n\nstring LastBugReportResult: Status of the last bugreport on this server. Default=\"\" Max Length=4000\n\n\n\nstring LastBugReportSummary: Summary of the last bugreport on this server. Default=\"\" Max Length=250\n\n\n\nSwitchParameter Confirm: The impact of this operationis \"low\". If -Confirm is specified, the operation will be confirmed.$ConfirmPreference can be set to \"low\" to have confirmation withoutthe Confirm parameter.\n\n\n\nPvsServer: If successful, the new PvsServer objectis returned.\n\n\n\nEXAMPLE 1: Create PvsServer with Minimum Fields\n\n\nCreates a PvsServer named theServer in theSite.\n\n\n\nNew-PvsServer -Name theServer -SiteName theSite -Ip192.168.0.33 192.168.0.34\n\n\n\nEXAMPLE 2: Create PvsServer with All Fields\n\n\nCreates a PvsServer named theServer in theSite withall fields set different than defaults.\n\n\n\nNew-PvsServer -Name theServer -SiteName theSite -Ip192.168.0.33 192.168.0.34 -Description \"XenServer Server\"-AdMaxPasswordAge 10 -LicenseTimeout 60 -VDiskCreatePacing 5 -FirstPort 7910-LastPort 7930 -ThreadsPerPort 16 -BuffersPerThread 48 -ServerCacheTimeout 15-IoBurstSize 13632 -MaxTransmissionUnits 502 -MaxBootDevicesAllowed 1000-MaxBootSeconds 120 -BootPauseSeconds 20 -AdMaxPasswordAgeEnabled-EventLoggingEnabled -NonBlockingIoDisabled -InitialQueryConnectionPoolSize 100-InitialTransactionConnectionPoolSize 100 -MaxQueryConnectionPoolSize 2000-MaxTransactionConnectionPoolSize 2000 -RefreshInterval 500-UnusedDbConnectionTimeout 500 -BusyDbConnectionRetryCount 5-BusyDbConnectionRetryInterval 50 -LocalConcurrentIoLimit 5-RemoteConcurrentIoLimit 5 -RamDiskIpAddress 192.168.5.5 -RamDiskTimeToLive 2-RamDiskInvitationVariable -RamDiskInvitationPeriod 20 -LogLevel 3-LogFileSizeMax 10 -LogFileBackupCopiesMax 5 -PowerRating 1.5\n\n\n\nNew-PvsSite\n\n\nCreate a new Site for the Farm.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or SiteName: Name of the Site. MaxLength=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nuint InventoryFilePollingInterval: The number ofseconds between polls for Disk changes in the Stores. Min=1, Max=600,Default=60\n\n\n\nSwitchParameter EnableDiskUpdate: If-EnableDiskUpdate is specified, the Disk Update will be enabled for the Site.By default Disk Update is disabled.\n\n\n\nGuid DiskUpdateServerId: GUID of the Disk UpdateServer for the Site. Not used with DiskUpdateServerName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring DiskUpdateServerName: Name of the Disk UpdateServer for the Site. Not used with DiskUpdateServerId. Default=\"\"\n\n\n\nstring MakUser: User name used for MAK activation.Default=\"\" Max Length=64\n\n\n\nstring MakPassword: User password used for MAKactivation. Default=\"\" Max Length=64\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsSite: If successful, the new PvsSite object isreturned.\n\n\n\nEXAMPLE 1: Create PvsSite with Minimum Fields\n\n\nCreates a PvsSite named theSite.\n\n\n\nNew-PvsSite -Name theSite\n\n\n\nEXAMPLE 2: Create PvsSite with All Fields\n\n\nCreates a PvsSite named theSite with all fields setdifferent than defaults.\n\n\n\nNew-PvsSite -Name theSite -Description\"XenServer Site\" -InventoryFilePollingInterval 100 -EnableDiskUpdate-DiskUpdateServerName theServer -MakUser theMakUser -MakPassword theMakPassword\n\n\n\nEXAMPLE 3: Create PvsSite and Assign AuthGroup to it\n\n\nCreates a PvsSite named theSite and AssignsAuthGroup \"AD\\PVSSiteAdminGroup\" to it.\n\n\n\nNew-PvsSite -Name theSite | Grant-PvsAuthGroup-AuthGroupName \"AD\\PVSSiteAdminGroup\"\n\n\n\nNew-PvsSiteView\n\n\nCreate a new View for a Site.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or SiteViewName: Name of the Site View.Max Length=50\n\n\n\nGuid SiteId: GUID of the Site this View is to be amember of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site this View is to bea member of. It is not used with SiteId.\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsSiteView: If successful, the new PvsSiteViewobject is returned.\n\n\n\nEXAMPLE 1: Create PvsSiteView with Minimum Fields\n\n\nCreates a PvsSiteView named theSiteView in theSite.\n\n\n\nNew-PvsSiteView -Name theSiteView -SiteName theSite\n\n\n\nEXAMPLE 2: Create PvsSiteView with All Fields\n\n\nCreates a PvsSiteView named theSiteView in theSitewith \"XenServer SiteView\" as the description.\n\n\n\nNew-PvsSiteView -Name theSiteView -SiteName theSite-Description \"XenServer SiteView\"\n\n\n\nNew-PvsStore\n\n\nCreate a new Store for the Farm.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or StoreName: Name of the Store. MaxLength=50\n\n\n\nGuid SiteId: GUID of the Site where Administratorsof that Site can change this Store. Not used for Farm Stores. SiteName can beused instead. Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring SiteName: Name of the Site whereAdministrators of that Site can change this Store. Not used for Farm Stores.SiteId can be used instead. Default=\"\"\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring Path: Default directory path that the Serversuse to access this Store. Max Length=255\n\n\n\nstring[] CachePath: Default Cache path(s) that theServers use with this Store. If none are specified the caches will be placed inthe WriteCache subdirectory of the Store path. Default=None\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsStore: If successful, the new PvsStore object isreturned.\n\n\n\nEXAMPLE 1: Create PvsStore with Minimum Fields\n\n\nCreates a PvsStore named theStore with network sharepath.\n\n\n\nNew-PvsStore -Name theStore -Path\"\\\\thePath\\subDirectory\"\n\n\n\nEXAMPLE 2: Create PvsStore with All Fields\n\n\nCreates a PvsStore named theStore that only theSiteadministrators can change with all fields set different than defaults.\n\n\n\nNew-PvsStore -Name theStore -Path\"c:\\thePath\" -SiteName theSite -Description \"Local Server PathStore\" -CachePath \"c:\\thePath\\sub1\" \"c:\\thePath\\sub2\"\n\n\n\nNew-PvsUpdateTask\n\n\nCreate a new Update Task for a Store.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or UpdateTaskName: Name of the UpdateTask. It is unique within the Site. Max Length=50\n\n\n\nGuid SiteId: GUID of the Site that this Update Taskis a member of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site that this UpdateTask is a member of. It is not used with SiteId.\n\n\n\nstring Description: User description. Default=\"\"Max Length=250\n\n\n\nSwitchParameter Disabled: If -Disabled is specified,the updates will not be processed. By default the updates will be processed.\n\n\n\nuint Hour: The hour of the day to perform the task.Min=0, Max=23, Default=0\n\n\n\nuint Minute: The minute of the hour to perform thetask. Min=0, Max=59, Default=0\n\n\n\nuint Recurrence: The update will reoccur on thisschedule. 0 = None, 1 = Daily, 2 = Every Weekday, 3 = Weekly, 4 = Monthly Date,5 = Monthly Type. Min=0, Max=5, Default=0\n\n\n\nuint DayMask: Days selected values. 1 = Monday, 2 =Tuesday, 4 = Wednesday, 8 = Thursday, 16 = Friday, 32 = Saturday, 64 = Sunday,128 = Day. Default=0. This is used with Weekly and Monthly Type recurrence.Min=1, Max=255, Default=4\n\n\n\nuint[] Date: Days of the month. Numbers from 1-31are the only valid values. This is used with Monthly Date recurrence.Default=\"\" Max Length=83\n\n\n\nuint MonthlyOffset: When to happen monthly. 0 =None, 1 = First, 2 = Second, 3 = Third, 4 = Forth, 5 = Last. This is used withMonthly Type recurrence. Min=0, Max=5, Default=3\n\n\n\nstring EsdType: Esd to use. Valid values are SCCM orWSUS. If no value, a custom script is run on the client. Default=\"\"Max Length=50\n\n\n\nstring PreUpdateScript: Script file to run beforethe update starts. Default=\"\" Max Length=255\n\n\n\nstring PreVmScript: Script file to run before the VMis loaded. Default=\"\" Max Length=255\n\n\n\nstring PostUpdateScript: Script file to run afterthe update finishes. Default=\"\" Max Length=255\n\n\n\nstring PostVmScript: Script file to run after the VMis unloaded. Default=\"\" Max Length=255\n\n\n\nstring Domain: Domain to add the Disk UpdateDevice(s) to. If not included, the first Domain Controller found on the Serveris used. Default=\"\" Max Length=255\n\n\n\nstring OrganizationUnit: Organizational Unit to addthe Disk Update Device(s) to. This parameter is optional. If it is notspecified, the device is added to the built in Computers container. Child OU'sshould be delimited with forward slashes, e.g. \"ParentOU/ChildOU\".Special characters in an OU name, such as '\"', '#', '+', ',', ';', '>','=', must be escaped with a backslash. For example, an OU called\"commaIn,TheMiddle\" must be specified as\"commaIn\\,TheMiddle\". The old syntax of delimiting child OU's with acomma is still supported, but deprecated. Note that in this case, the child OUcomes first, e.g. \"ChildOU,ParentOU\". Default=\"\" MaxLength=255\n\n\n\nuint PostUpdateApprove: Access to place the versionin after the update has occurred. 0 = Production, 1 = Test, 2 = Maintenance.Min=0, Max=2, Default=0\n\n\n\nSwitchParameter Confirm: The impact of this operationis \"low\". If -Confirm is specified, the operation will be confirmed.$ConfirmPreference can be set to \"low\" to have confirmation withoutthe Confirm parameter.\n\n\n\nPvsUpdateTask: If successful, the new PvsUpdateTaskobject is returned.\n\n\n\nEXAMPLE 1: Create PvsUpdateTask with Minimum Fields\n\n\nCreates a PvsUpdateTask named theUpdateTask intheSite. Since no EsdType is set, the update.bat in the client installdirectory will be executed for this task.\n\n\n\nNew-PvsUpdateTask -Name theUpdateTask -SiteNametheSite\n\n\n\nEXAMPLE 2: Create PvsUpdateTask for Daily Updates\n\n\nCreates a PvsUpdateTask named theUpdateTask intheSite for SCCM that occurs every day at midnight.\n\n\n\nNew-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Description \"Every day at Midnight\" -Recurrence 1 -Hour 0-Minute 0 -EsdType SCCM\n\n\n\nEXAMPLE 3: Create PvsUpdateTask for Weekday Updates\n\n\nCreates a PvsUpdateTask named theUpdateTask intheSite for WSUS that occurs every weekday at midnight.\n\n\n\nNew-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Description \"Every weekday at Midnight\" -Recurrence 2 -Hour0 -Minute 0 -EsdType WSUS\n\n\n\nEXAMPLE 4: Create PvsUpdateTask for Weekly Updates\n\n\nCreates a PvsUpdateTask named theUpdateTask intheSite for SCCM that occurs every week on Monday and Friday at 3 AM.\n\n\n\nNew-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Description \"Every week on Monday and Friday at 3 AM\"-Recurrence 3 -Hour 3 -Minute 0 -DayMask 17 -EsdType SCCM\n\n\n\nEXAMPLE 5: Create PvsUpdateTask for Monthly Updates\n\n\nCreates a PvsUpdateTask named theUpdateTask intheSite for WSUS that occurs every month on the 1st and 15th at midnight.\n\n\n\nNew-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Description \"Every month on the 1st and 15th at Midnight\"-Recurrence 4 -Hour 0 -Minute 0 -Date 1 15 -EsdType WSUS\n\n\n\nEXAMPLE 6: Create PvsUpdateTask for Monthly Type Updates\n\n\nCreates a PvsUpdateTask named theUpdateTask intheSite for SCCM that is disabled and occurs every month on the 2nd Tuesday andThusday at Midnight.\n\n\n\nNew-PvsUpdateTask -Name theUpdateTask -SiteName theSite-Description \"Every month on the 2nd Tuesday and Thusday at Midnight\"-Disabled -Recurrence 5 -Hour 0 -Minute 0 -DayMask 10 -MonthlyOffset 2 -EsdTypeSCCM\n\n\n\nNew-PvsVirtualHostingPool\n\n\nAdd a new Virtual Hosting Pool to a Site.\n\n\n\nAll parameters that do not have a Default arerequired, unless only a few of a group are required.\n\n\n\nstring Name or VirtualHostingPoolName: Name of theVirtual Hosting Pool. It is unique within the Site. Max Length=50\n\n\n\nGuid SiteId: GUID of the Site that this VirtualHosting Pool is a member of. It is not used with SiteName.\n\n\n\nstring SiteName: Name of the Site that this VirtualHosting Pool is a member of. It is not used with SiteId.\n\n\n\nuint Type: Type of the Virtual Hosting Pool. 0 =Citrix XenServer, 1 = Microsoft SCVMM/Hyper-V, 2 = VMWare vSphere/ESX. Min=0,Max=2, Default=0\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring Server: Name or IP of the Host Server. MaxLength=255\n\n\n\nuint Port: Port of the Host Server. Min=80,Max=65534, Default=80\n\n\n\nstring Datacenter: Datacenter of the Virtual HostingPool. Default=\"\" Max Length=250\n\n\n\nuint UpdateLimit: Number of updates at the sametime. Min=2, Max=1000, Default=1000\n\n\n\nuint UpdateTimeout: Timeout for updates. Min=2,Max=240, Default=60\n\n\n\nuint ShutdownTimeout: Timeout for shutdown. Min=2,Max=30, Default=10\n\n\n\nstring UserName: Name to use when logging into theServer.\n\n\n\nstring Password: Password to use when logging intothe Server.\n\n\n\nGuid XdHostingUnitUuid: UUID of XenDesktop HostingUnit Default=00000000-0000-0000-0000-000000000000\n\n\n\nSwitchParameter XsPvsProxyEnabled: Enable XenServerPVS proxy when set to true Default=false\n\n\n\nSwitchParameter PrepopulateEnabled: Enableprepopulate when set to true Default=false\n\n\n\nGuid XsPvsSiteUuid: UUID of XenServerPVS_site  Default=00000000-0000-0000-0000-000000000000\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsVirtualHostingPool: If successful, the newPvsVirtualHostingPool object is returned.\n\n\n\nEXAMPLE 1: Create PvsVirtualHostingPool with Minimum Fields\n\n\nCreates a PvsVirtualHostingPool namedtheVirtualHostingPool in theSite.\n\n\n\nNew-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite -Server 192.168.0.33 -UserNametheUserName -Password thePassword\n\n\n\nEXAMPLE 2: Create PvsVirtualHostingPool with All Fields\n\n\nCreates a PvsVirtualHostingPool namedtheVirtualHostingPool in theSite with all fields set different than defaults.\n\n\n\nNew-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite -Server 192.168.0.33 -UserNametheUserName -Password thePassword -Type 1 -Description \"AVirtualHostingPool\" -Port 180 -Datacenter Data -UpperLimit 500-UpdateTimeout 120 -ShutdownTimeout 20\n\n\n\nRemove-PvsAuthGroup\n\n\nRemove one or more AuthGroup Active Directory orWindows Group names.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or AuthGroupId: GUID of the AuthGroup toDelete.\n\n\n\nstring[] Name or AuthGroupName: Name of theAuthGroup to Delete.\n\n\n\nOptional\n\n\n\nSwitchParameter Force: If -Force is specified, theAuthGroup will be Deleted even if being used, otherwise an error is returned ifbeing used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the members belowcan be used as the Object parameter or from a pileline:\n\n\n\nAuthGroupId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsAuthGroup with Name theAuthGroup\n\n\nThis example removes the PvsAuthGroup namedtheAuthGroup.\n\n\n\nRemove-PvsAuthGroup -Name theAuthGroup\n\n\n\nEXAMPLE 2: Remove the PvsAuthGroup with Name theAuthGroup using Pipe\n\n\nThis example uses Get-PvsAuthGroup that returns thePvsAuthGroup named theAuthGroup that is piped to Remove-PvsAuthGroup forremoval.\n\n\n\nGet-PvsAuthGroup -Name theAuthGroup |Remove-PvsAuthGroup\n\n\n\nEXAMPLE 3: Remove All PvsAuthGroup in a Collection Even When Still Used\n\n\nThis example removes all PvsAuthGroup in theCollection named theCollection of the Site named theSite even when thePvsAuthGroup is still being used.\n\n\n\nRemove-PvsAuthGroup -SiteName theSite-CollectionName theCollection -Force\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 4: Remove All Operator PvsAuthGroup in a Collection using Pipe\n\n\nThis example uses Get-PvsAuthGroup that returns alist of Role 400 PvsAuthGroup in the Collection named theCollection of the Sitenamed theSite that is piped to Remove-PvsAuthGroup for removal.\n\n\n\nGet-PvsAuthGroup -SiteName theSite -CollectionNametheCollection -Fields Role | Where-Object {$_.Role -eq 400} |Remove-PvsAuthGroup\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"Where-Object {$_.Role -eq 400}\" onlyincludes PvsAuthGroup with Role equal to 400 (Collection Operator).\n\n\n\nRemove-PvsCollection\n\n\nRemove one or more Collections.\n\n\n\nThis required\n\n\n\nGuid[] Guid or CollectionId: GUID of the Collectionto Delete.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or CollectionName: Name of theCollection to Delete.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nCollectionId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or \"low\"to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsCollection with Name theCollection\n\n\nThis example removes the PvsCollection namedtheCollection in the Site named theSite.\n\n\n\nRemove-PvsCollection -Name theCollection -SiteName theSite\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Remove the PvsCollection with Name theCollection using Pipe\n\n\nThis example uses Get-PvsCollection that returns thePvsCollection named theCollection in the Site named theSite that is piped toRemove-PvsCollection for removal.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite | Remove-PvsCollection\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nRemove-PvsDevice\n\n\nRemove one or more Devices.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device toDelete.\n\n\n\nstring[] Name or DeviceName: Name of the Device toDelete.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toDelete.\n\n\n\nGuid[] CollectionId: GUID of the Collection todelete all Devices.\n\n\n\nor this required ; resolution\n\n\n\nstring[] CollectionName: Name of the Collection todelete all Devices.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId or CollectionId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsDevice with Name theDevice\n\n\nThis example removes the PvsDevice named theDevice.\n\n\n\nRemove-PvsDevice -Name theDevice\n\n\n\nEXAMPLE 2: Remove the PvsDevice with Name theDevice using Pipe\n\n\nThis example uses Get-PvsDevice that returns thePvsDevice named theDevice that is piped to Remove-PvsDevice for removal.\n\n\n\nGet-PvsDevice -Name theDevice | Remove-PvsDevice\n\n\n\nEXAMPLE 3: Remove All PvsDevice in a Collection\n\n\nThis example removes all PvsDevice in the Collectionnamed theCollection of the Site named theSite.\n\n\n\nRemove-PvsDevice -SiteName theSite -CollectionNametheCollection\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 4: Remove All Not Active PvsDevice in a Collection using Pipe\n\n\nThis example uses Get-PvsDevice that returns a listof not Active PvsDevice in the Collection named theCollection of the Site namedtheSite that is piped to Remove-PvsDevice for removal.\n\n\n\nGet-PvsDevice -SiteName theSite -CollectionNametheCollection -Fields Active | Where-Object {$_.Active -eq $false} |Remove-PvsDevice\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"Where-Object {$_.Active -eq $false}\"only includes PvsDevice with Active equal to false.\n\n\n\nRemove-PvsDeviceDiskCacheFile\n\n\nRemove one or more Disk cache files for Devices.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device toDelete Disk cache files.\n\n\n\nstring[] Name or DeviceName: Name of the Device to DeleteDisk cache files.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toDelete Disk cache files.\n\n\n\nThis required\n\n\n\nGuid[] DiskLocatorId: GUID of the Disk Locator toDelete Disk cache files.\n\n\n\nor this required ; resolution\n\n\n\nstring[] DiskLocatorName: Name of the Disk LocatorFile to Delete Disk cache files.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId or DiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsDeviceDiskCacheFile for Device with Name theDevice\n\n\nThis example removes the PvsDeviceDiskCacheFile forthe Device named theDevice.\n\n\n\nRemove-PvsDeviceDiskCacheFile -Name theDevice\n\n\n\nEXAMPLE 2: Remove the PvsDeviceDiskCacheFile for the Devices that use theDiskLocator with Name theDiskLocator\n\n\nThis example removes the PvsDeviceDiskCacheFile forthe Devices that use DiskLocator named theDiskLocator in Site named theSite andStore named theStore.\n\n\n\nRemove-PvsDeviceDiskCacheFile -DiskLocatorNametheDiskLocator -SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nRemove-PvsDeviceFromDomain\n\n\nRemove a Device, all Devices in a Collection or Viewfrom a Domain.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device toRemove from the Domain.\n\n\n\nstring[] Name or DeviceName: Name of the Device toRemove from the Domain.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toRemove from the Domain.\n\n\n\nGuid[] CollectionId: GUID of the Collection toRemove all Devices from the Domain.\n\n\n\nGuid[] SiteViewId: GUID of the Site View to Removeall Devices from the Domain.\n\n\n\nGuid[] FarmViewId: GUID of the Farm View to Removeall Devices from the Domain.\n\n\n\nstring[] FarmViewName: Name of the Farm ViewtoRemove all Devices from the Domain.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring[] CollectionName: Name of the Collection toRemove all Devices from the Domain.\n\n\n\nstring[] SiteViewName: Name of the Site View toRemove all Devices from the Domain.\n\n\n\nOptional\n\n\n\nstring[] Domain: Domain to remove the Device(s)from. If not included, the first Domain Controller found on the Server is used.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId, CollectionId, SiteViewId or FarmViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove-PvsDeviceFromDomain for Name\n\n\nRemove-PvsDeviceFromDomain -Name theDevice\n\n\n\nEXAMPLE 2: Remove-PvsDeviceFromDomain for Name with Domain\n\n\nRemove-PvsDeviceFromDomain -Name theDevice -DomaintheDomain\n\n\n\nEXAMPLE 3: Remove-PvsDeviceFromDomain for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theRemove-PvsDeviceFromDomain.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid |Remove-PvsDeviceFromDomain -Domain theDomain -OrganizationUnittheOrganizationUnit\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 4: Remove-PvsDeviceFromDomain for FarmViewName\n\n\nRemove-PvsDeviceFromDomain -FarmViewName theFarmView\n\n\n\nEXAMPLE 5: Remove-PvsDeviceFromDomain for FarmViewName with Domain\n\n\nRemove-PvsDeviceFromDomain -FarmViewName theFarmView-Domain theDomain\n\n\n\nEXAMPLE 6: Remove-PvsDeviceFromDomain for PvsFarmView Using Pipe\n\n\nThe Get-PvsFarmView output is piped to theRemove-PvsDeviceFromDomain.\n\n\n\nGet-PvsFarmView -Name theFarmView -Fields Guid |Remove-PvsDeviceFromDomain -Domain theDomain -OrganizationUnittheOrganizationUnit\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 7: Remove-PvsDeviceFromDomain for CollectionName\n\n\nRemove-PvsDeviceFromDomain -CollectionNametheCollection -SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 8: Remove-PvsDeviceFromDomain for CollectionName with Domain\n\n\nRemove-PvsDeviceFromDomain -CollectionNametheCollection -SiteName theSite -Domain theDomain\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 9: Remove-PvsDeviceFromDomain for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theRemove-PvsDeviceFromDomain.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Remove-PvsDeviceFromDomain -Domain theDomain-OrganizationUnit theOrganizationUnit\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 10: Remove-PvsDeviceFromDomain for SiteViewName\n\n\nRemove-PvsDeviceFromDomain -SiteViewName theSiteView-SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 11: Remove-PvsDeviceFromDomain for SiteViewName with Domain\n\n\nRemove-PvsDeviceFromDomain -SiteViewName theSiteView-SiteName theSite -Domain theDomain\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 12: Remove-PvsDeviceFromDomain for PvsSiteView Using Pipe\n\n\nThe Get-PvsSiteView output is piped to theRemove-PvsDeviceFromDomain.\n\n\n\nGet-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Remove-PvsDeviceFromDomain -Domain theDomain -OrganizationUnittheOrganizationUnit\n\n\n\nThe -Fields parameter with only the needed fields specifiedmakes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nRemove-PvsDeviceFromView\n\n\nRemove a Device from a View.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device toRemove.\n\n\n\nstring[] Name or DeviceName: Name of the Device toRemove.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toRemove.\n\n\n\nOne of these required\n\n\n\nGuid[] SiteViewId: GUID of the Site View to Removethe Devices from.\n\n\n\nGuid[] FarmViewId: GUID of the Farm View to Removethe Devices from.\n\n\n\nstring[] FarmViewName: Name of the Farm View toRemove the Devices from.\n\n\n\nor this required ; resolution\n\n\n\nstring[] SiteViewName: Name of the Site View toRemove the Devices from.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId, SiteViewId or FarmViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove-PvsDeviceFromView for PvsDevice to PvsFarmView\n\n\nRemove-PvsDeviceFromView -Name theDevice-PvsFarmViewName thePvsFarmView\n\n\n\nEXAMPLE 2: Remove-PvsDeviceFromView for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to the Remove-PvsDeviceFromView.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid |Remove-PvsDeviceFromView -PvsFarmViewName thePvsFarmView\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Remove-PvsDeviceFromView for PvsFarmView Using Pipe\n\n\nThe Get-PvsFarmView output is piped to theRemove-PvsDeviceFromView.\n\n\n\nGet-PvsFarmView -Name theFarmView -Fields Guid |Remove-PvsDeviceFromView -Name theDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 4: Remove-PvsDeviceFromView for PvsDevice to PvsSiteView\n\n\nRemove-PvsDeviceFromView -Name theDevice-SiteViewName theSiteView -SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 5: Remove-PvsDeviceFromView for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theRemove-PvsDeviceFromView.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid | Remove-PvsDeviceFromView-SiteViewName theSiteView -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 6: Remove-PvsDeviceFromView for PvsSiteView Using Pipe\n\n\nThe Get-PvsSiteView output is piped to theRemove-PvsDeviceFromView.\n\n\n\nGet-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Remove-PvsDeviceFromView -Name theDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nRemove-PvsDirectory\n\n\nRemove a Directory on the Server specified.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server toremove a Directory from. The directory must be empty to be removed.\n\n\n\nstring[] Name or ServerName: Name of the Server toremove a Directory from. The directory must be empty to be removed.\n\n\n\nThis required\n\n\n\nstring[] Path: Path of the Directory to remove.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove-PvsDirectory for Name\n\n\nRemove-PvsDirectory -Name theServer -Path\"C:\\directory\\subdirectory\"\n\n\n\nEXAMPLE 2: Remove-PvsDirectory for PvsServer Using Pipe\n\n\nThe Get-PvsServer output is piped to theRemove-PvsDirectory.\n\n\n\nGet-PvsServer -Name theServer -Fields Guid |Remove-PvsDirectory -Path \"C:\\directory\\subdirectory\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nRemove-PvsDiskFromUpdateTask\n\n\nRemove a Disk from an Update Task.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to Remove.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Remove.\n\n\n\nOne of these optional\n\n\n\nGuid[] UpdateTaskId: GUID of the Update Task toRemove a Disk.\n\n\n\nstring[] UpdateTaskName: Name of the Update Task toRemove a Disk.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId or UpdateTaskId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove-DiskFromUpdateTask for PvsDiskLocator to PvsUpdateTask\n\n\nRemove-DiskFromUpdateTask -Name theDiskLocator-UpdateTaskName theUpdateTask -SiteName theSite -StoreName theStore\n\n\n\nUpdateTaskId can be used instead of UpdateTaskNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Remove-DiskFromUpdateTask for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to the Remove-DiskFromUpdateTask.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Remove-DiskFromUpdateTask-UpdateTaskName theUpdateTask -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Remove-DiskFromUpdateTask for PvsUpdateTask Using Pipe\n\n\nThe Get-PvsUpdateTask output is piped to theRemove-DiskFromUpdateTask.\n\n\n\nGet-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Fields Guid | Remove-DiskFromUpdateTask -Name theDiskLocator -SiteNametheSite -StoreName theStore\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nRemove-PvsDiskLocator\n\n\nRemove one or more Disk Locators.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to Delete.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Delete.\n\n\n\nGuid[] StoreId: GUID of the Store to delete allDiskLocators.\n\n\n\nstring[] StoreName: Name of the Store to delete allDiskLocators.\n\n\n\nOptional\n\n\n\nSwitchParameter DeleteDiskFile: If -DiskFile isspecified, the Disk File will be deleted.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store to delete allDiskLocators.\n\n\n\nstring[] StoreName: Name of the Store to delete allDiskLocators.\n\n\n\nInstead of a parameter that matches one of the memberslisted\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId or StoreId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsDiskLocator with Name theDiskLocator\n\n\nThis example removes the PvsDiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore and deletesthe vDisk file.\n\n\n\nRemove-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -DeleteDiskFile\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Remove the PvsDiskLocator with Name theDiskLocator using Pipe\n\n\nThis example uses Get-PvsDiskLocator that returnsthe PvsDiskLocator named theDiskLocator in the Site named theSite and Storenamed theStore that is piped to Remove-PvsDiskLocator for removal.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore | Remove-PvsDiskLocator\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nRemove-PvsDiskLocatorFromDevice\n\n\nRemove a Disk Locator from a Device, Collection,View, or Site.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to Remove.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Remove.\n\n\n\nOne of these optional\n\n\n\nGuid[] DeviceId: GUID of the Device to Remove a DiskLocator.\n\n\n\nstring[] DeviceName: Name of the Device to Remove aDisk Locator.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toRemove a Disk Locator.\n\n\n\nGuid[] CollectionId: GUID of the Collection toRemove a Disk Locator or Locators from all Devices.\n\n\n\nGuid[] SiteViewId: GUID of the Site View to Remove aDisk Locator from all Devices.\n\n\n\nGuid[] FarmViewId: GUID of the Farm View to Remove aDisk Locator from all Devices.\n\n\n\nstring[] FarmViewName: Name of the Farm View toRemove a Disk Locator from all Devices.\n\n\n\nor one of these optional ; resolutions\n\n\n\nstring[] CollectionName: Name of the Collection toRemove a Disk Locator or Locators from all Devices.\n\n\n\nstring[] SiteViewName: Name of the Site View toRemove a Disk Locator from all Devices.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId, DeviceId, CollectionId, SiteViewId orFarmViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator to PvsDevice\n\n\nRemove-PvsDiskLocatorFromDevice -Name theDiskLocator-DeviceName theDevice -SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to the Remove-PvsDiskLocatorFromDevice.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Remove-PvsDiskLocatorFromDevice-DeviceName theDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 3: Remove-PvsDiskLocatorFromDevice for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theRemove-PvsDiskLocatorFromDevice.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid |Remove-PvsDiskLocatorFromDevice -Name theDiskLocator -SiteName theSite-StoreName theStoreName\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 4: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator toPvsCollection\n\n\nRemove-PvsDiskLocatorFromDevice -Name theDiskLocator-CollectionName theCollection -SiteName theSite -StoreName theStore\n\n\n\nEXAMPLE 5: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theRemove-PvsDiskLocatorFromDevice.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Remove-PvsDiskLocatorFromDevice-CollectionName theCollection -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 6: Remove-PvsDiskLocatorFromDevice for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theRemove-PvsDiskLocatorFromDevice.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Remove-PvsDiskLocatorFromDevice -Name theDiskLocator-SiteName theSite -StoreName theStoreName\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 7: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator toPvsFarmView\n\n\nRemove-PvsDiskLocatorFromDevice -Name theDiskLocator-FarmViewName theFarmView -SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 8: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theRemove-PvsDiskLocatorFromDevice.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Remove-PvsDiskLocatorFromDevice-FarmViewName theFarmView\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 9: Remove-PvsDiskLocatorFromDevice for PvsFarmView Using Pipe\n\n\nThe Get-PvsFarmView output is piped to theRemove-PvsDiskLocatorFromDevice.\n\n\n\nGet-PvsFarmView -Name theFarmView -Fields Guid | Remove-PvsDiskLocatorFromDevice-Name theDiskLocator -SiteName theSite -StoreName theStoreName\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 10: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator toPvsSiteView\n\n\nRemove-PvsDiskLocatorFromDevice -Name theDiskLocator-SiteViewName theSiteView -SiteName theSite -StoreName theStore\n\n\n\nEXAMPLE 11: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theRemove-PvsDiskLocatorFromDevice.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Remove-PvsDiskLocatorFromDevice-SiteViewName theSiteView -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 12: Remove-PvsDiskLocatorFromDevice for PvsSiteView Using Pipe\n\n\nThe Get-PvsSiteView output is piped to theRemove-PvsDiskLocatorFromDevice.\n\n\n\nGet-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Remove-PvsDiskLocatorFromDevice -Name theDiskLocator -SiteNametheSite -StoreName theStoreName\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nRemove-PvsDiskUpdateDevice\n\n\nRemove one or more Disk Update Devices.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Disk UpdateDevice to Delete.\n\n\n\nstring[] Name or DeviceName: Name of the Disk UpdateDevice to Delete.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the DiskUpdate Device to Delete.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsDiskUpdateDevice with Name theDevice\n\n\nThis example removes the PvsDiskUpdateDevice namedtheDevice.\n\n\n\nRemove-PvsDiskUpdateDevice -Name theDevice\n\n\n\nEXAMPLE 2: Remove the PvsDiskUpdateDevice with Name theDevice using Pipe\n\n\nThis example uses Get-PvsDiskUpdateDevice thatreturns the PvsDiskUpdateDevice named theDevice that is piped toRemove-PvsDiskUpdateDevice for removal.\n\n\n\nGet-PvsDiskUpdateDevice -Name theDevice |Remove-PvsDiskUpdateDevice\n\n\n\nEXAMPLE 3: Remove All Not Active PvsDiskUpdateDevice for a DiskLocatorusing Pipe\n\n\nThis example uses Get-PvsDiskUpdateDevice thatreturns a list of not Active PvsDiskUpdateDevice for the DiskLocator namedtheDiskLocator of the Site named theSite and Store named theStore that is pipedto Remove-PvsDiskUpdateDevice for removal.\n\n\n\nGet-PvsDiskUpdateDevice -DiskLocatorNametheDiskLocator -SiteName theSite -StoreName theStore -Fields Active |Where-Object {$_.Active -eq $false} | Remove-PvsDiskUpdateDevice\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"Where-Object {$_.Active -eq $false}\"only includes PvsDiskUpdateDevice with Active equal to false.\n\n\n\nRemove-PvsDiskVersion\n\n\nRemove the latest Disk version or no longer neededversion if no Devices are currently booted from that version.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to Delete the Version from.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Delete the Version from.\n\n\n\nOptional\n\n\n\nuint Version: Specifies the version that should bedeleted. Used when deleting versions that are no longer needed because of aMerge.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\n(DiskLocatorId and Version) or DiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the Highest PvsDiskVersion with Name theDiskLocator\n\n\nThis example removes the highest PvsDiskVersion forDiskLocator named theDiskLocator in the Site named theSite and Store namedtheStore.\n\n\n\nRemove-PvsDiskVersion -Name theDiskLocator -SiteNametheSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Remove the highest PvsDiskVersion with Name theDiskLocator usingPipe\n\n\nThis example uses Get-PvsDiskLocator that returnsthe PvsDiskLocator named theDiskLocator in the Site named theSite and Storenamed theStore that is piped to Remove-PvsDiskVersion for removal of thehighest version.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore | Remove-PvsDiskVersion\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 3: Remove the Version PvsDiskVersion with Name theDiskLocator\n\n\nThis example removes the Version PvsDiskVersion forDiskLocator named theDiskLocator in the Site named theSite and Store namedtheStore.\n\n\n\nRemove-PvsDiskVersion -Name theDiskLocator -SiteNametheSite -StoreName theStore -Version 5\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 4: Remove the Version PvsDiskVersion with Name theDiskLocator usingPipe\n\n\nThis example uses Get-PvsDiskVersion that returnsthe Version PvsDiskVersion for DiskLocator named theDiskLocator in the Sitenamed theSite and Store named theStore that is piped to Remove-PvsDiskVersionfor removal of the specified version.\n\n\n\nGet-PvsDiskVersion -Name theDiskLocator -SiteNametheSite -StoreName theStore -Version 5 | Remove-PvsDiskVersion\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nRemove-PvsFarmView\n\n\nRemove one or more Views from the Farm.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or FarmViewId: GUID of the Farm View toDelete.\n\n\n\nstring[] Name or FarmViewName: Name of the Farm Viewto Delete.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nFarmViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsFarmView with Name theFarmView\n\n\nThis example removes the PvsFarmView namedtheFarmView.\n\n\n\nRemove-PvsFarmView -Name theFarmView\n\n\n\nEXAMPLE 2: Remove the PvsFarmView with Name theFarmView using Pipe\n\n\nThis example uses Get-PvsFarmView that returns thePvsFarmView named theFarmView that is piped to Remove-PvsFarmView for removal.\n\n\n\nGet-PvsFarmView -Name theFarmView |Remove-PvsFarmView\n\n\n\nRemove-PvsServer\n\n\nRemove one or more Servers.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server toDelete.\n\n\n\nstring[] Name or ServerName: Name of the Server toDelete.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsServer with Name theServer\n\n\nThis example removes the PvsServer named theServer.\n\n\n\nRemove-PvsServer -Name theServer\n\n\n\nEXAMPLE 2: Remove the PvsServer with Name theServer using Pipe\n\n\nThis example uses Get-PvsServer that returns thePvsServer named theServer that is piped to Remove-PvsServer for removal.\n\n\n\nGet-PvsServer -Name theServer | Remove-PvsServer\n\n\n\nRemove-PvsServerStore\n\n\nRemove the connection from Servers to Stores.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of a Server that usesthe path to get to the Store.\n\n\n\nstring[] Name or ServerName: Name of a Server thatuses the path to get to the Store.\n\n\n\nOne of these required\n\n\n\nGuid[] StoreId: GUID of the Store.\n\n\n\nstring[] StoreName: Name of the Store.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId or StoreId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsServerStore with Name theServer/theStore\n\n\nThis example removes the PvsServerStore for theServer named theServer and Store named theStore.\n\n\n\nRemove-PvsServerStore -Name theServer -StoreNametheStore\n\n\n\nEXAMPLE 2: Remove the PvsServerStore with Name theServer/theStore usingPipe\n\n\nThis example uses Get-PvsServer that returns thePvsServer named theServer that is piped to Remove-PvsServerStore with StoreNametheStore for removal.\n\n\n\nGet-PvsServer -Name theServer |Remove-PvsServerStore -StoreName theStore\n\n\n\nRemove-PvsSite\n\n\nRemove one or more Sites.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or SiteId: GUID of the Site to Delete.\n\n\n\nstring[] Name or SiteName: Name of the Site toDelete.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nSiteId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsSite with Name theSite\n\n\nThis example removes the PvsSite named theSite.\n\n\n\nRemove-PvsSite -Name theSite\n\n\n\nEXAMPLE 2: Remove the PvsSite with Name theSite using Pipe\n\n\nThis example uses Get-PvsSite that returns thePvsSite named theSite that is piped to Remove-PvsSite for removal.\n\n\n\nGet-PvsSite -Name theSite | Remove-PvsSite\n\n\n\nRemove-PvsSiteView\n\n\nRemove one or more Views from Sites.\n\n\n\nThis required\n\n\n\nGuid[] Guid or SiteViewId: GUID of the Site View toDelete.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or SiteViewName: Name of the Site Viewto Delete.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the members belowcan be used as the Object parameter or from a pileline:\n\n\n\nSiteViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or \"low\"to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsSiteView with Name theSiteView\n\n\nThis example removes the PvsSiteView namedtheSiteView in the Site named theSite.\n\n\n\nRemove-PvsSiteView -Name theSiteView -SiteNametheSite\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Remove the PvsSiteView with Name theSiteView using Pipe\n\n\nThis example uses Get-PvsSiteView that returns thePvsSiteView named theSiteView in the Site named theSite that is piped toRemove-PvsSiteView for removal.\n\n\n\nGet-PvsSiteView -Name theSiteView -SiteName theSite| Remove-PvsSiteView\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nRemove-PvsStore\n\n\nRemove one or more Stores.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or StoreId: GUID of the Store to Delete.\n\n\n\nstring[] Name or StoreName: Name of the Store toDelete.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nStoreId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsStore with Name theStore\n\n\nThis example removes the PvsStore named theStore.\n\n\n\nRemove-PvsStore -Name theStore\n\n\n\nEXAMPLE 2: Remove the PvsStore with Name theStore using Pipe\n\n\nThis example uses Get-PvsStore that returns thePvsStore named theStore that is piped to Remove-PvsStore for removal.\n\n\n\nGet-PvsStore -Name theStore | Remove-PvsStore\n\n\n\nRemove-PvsUpdateTask\n\n\nRemove one or more Update Tasks from Sites.\n\n\n\nThis required\n\n\n\nGuid[] Guid or UpdateTaskId: GUID of the Update Taskto Delete.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or UpdateTaskName: Name of the UpdateTask to Delete.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nUpdateTaskId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsUpdateTask with Name theUpdateTask\n\n\nThis example removes the PvsUpdateTask namedtheUpdateTask in the Site named theSite.\n\n\n\nRemove-PvsUpdateTask -Name theUpdateTask -SiteNametheSite\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Remove the PvsUpdateTask with Name theUpdateTask using Pipe\n\n\nThis example uses Get-PvsUpdateTask that returns thePvsUpdateTask named theUpdateTask in the Site named theSite that is piped toRemove-PvsUpdateTask for removal.\n\n\n\nGet-PvsUpdateTask -Name theUpdateTask -SiteNametheSite | Remove-PvsUpdateTask\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nRemove-PvsVirtualHostingPool\n\n\nRemove one or more Virtual Hosting Pools from Sites.\n\n\n\nThis required\n\n\n\nGuid[] Guid or VirtualHostingPoolId: GUID of theVirtual Hosting Pool to Delete.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or VirtualHostingPoolName: Name of theVirtual Hosting Pool to Delete.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nVirtualHostingPoolId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Remove the PvsVirtualHostingPool with Name theVirtualHostingPool\n\n\nThis example removes the PvsVirtualHostingPool namedtheVirtualHostingPool in the Site named theSite.\n\n\n\nRemove-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Remove the PvsVirtualHostingPool with Name theVirtualHostingPoolusing Pipe\n\n\nThis example uses Get-PvsVirtualHostingPool thatreturns the PvsVirtualHostingPool named theVirtualHostingPool in the Site namedtheSite that is piped to Remove-PvsVirtualHostingPool for removal.\n\n\n\nGet-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite | Remove-PvsVirtualHostingPool\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nReset-PvsDatabase\n\n\nCause the database location to be reloaded.\n\n\n\nEXAMPLE 1: Reset-PvsDatabase\n\n\nReset-PvsDatabase\n\n\n\nReset-PvsDeviceForDomain\n\n\nReset a Device, all Devices in a Collection or Viewfor a Domain.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device to Resetfor the Domain.\n\n\n\nstring[] Name or DeviceName: Name of the Device toReset for the Domain.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toReset for the Domain.\n\n\n\nGuid[] CollectionId: GUID of the Collection to Resetall Devices for the Domain.\n\n\n\nGuid[] SiteViewId: GUID of the Site View to Resetall Devices for the Domain.\n\n\n\nGuid[] FarmViewId: GUID of the Farm View to Resetall Devices for the Domain.\n\n\n\nstring[] FarmViewName: Name of the Farm View toReset all Devices for the Domain.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring[] CollectionName: Name of the Collection toReset all Devices for the Domain.\n\n\n\nstring[] SiteViewName: Name of the Site View toReset all Devices for the Domain.\n\n\n\nOptional\n\n\n\nstring[] Domain: Domain to Reset the Device(s) for.If not included, the first Domain Controller found on the Server is used.\n\n\n\nstring[] OrganizationUnit: Organizational Unit toreset the Device(s) to. This parameter is optional. If it is not specified, theaccount remains in its existing OU. Child OU's should be delimited with forwardslashes, e.g. \"ParentOU/ChildOU\". Special characters in an OU name,such as '\"', '#', '+', ',', ';', '>', '=', must be escaped with abackslash. For example, an OU called \"commaIn,TheMiddle\" must bespecified as \"commaIn\\,TheMiddle\". The old syntax of delimiting childOU's with a comma is still supported, but deprecated. Note that in this case,the child OU comes first, e.g. \"ChildOU,ParentOU\".\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId, CollectionId, SiteViewId or FarmViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Reset-PvsDeviceForDomain for Name\n\n\nReset-PvsDeviceForDomain -Name theDevice\n\n\n\nEXAMPLE 2: Reset-PvsDeviceForDomain for Name with Domain\n\n\nReset-PvsDeviceForDomain -Name theDevice -DomaintheDomain\n\n\n\nEXAMPLE 3: Reset-PvsDeviceForDomain for Name with Domain andOrganizationUnit\n\n\nReset-PvsDeviceForDomain -Name theDevice -DomaintheDomain -OrganizationUnit theOrganizationUnit\n\n\n\nEXAMPLE 4: Reset-PvsDeviceForDomain for PvsDevice Using Pipe\n\n\nThe Get-PvsDevice output is piped to theReset-PvsDeviceForDomain.\n\n\n\nGet-PvsDevice -Name theDevice -Fields Guid |Reset-PvsDeviceForDomain -Domain theDomain -OrganizationUnittheOrganizationUnit\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 5: Reset-PvsDeviceForDomain for FarmViewName\n\n\nReset-PvsDeviceForDomain -FarmViewName theFarmView\n\n\n\nEXAMPLE 6: Reset-PvsDeviceForDomain for FarmViewName with Domain\n\n\nReset-PvsDeviceForDomain -FarmViewName theFarmView-Domain theDomain\n\n\n\nEXAMPLE 7: Reset-PvsDeviceForDomain for FarmViewName with Domain andOrganizationUnit\n\n\nReset-PvsDeviceForDomain -FarmViewName theFarmView-Domain theDomain -OrganizationUnit theOrganizationUnit\n\n\n\nEXAMPLE 8: Reset-PvsDeviceForDomain for PvsFarmView Using Pipe\n\n\nThe Get-PvsFarmView output is piped to theReset-PvsDeviceForDomain.\n\n\n\nGet-PvsFarmView -Name theFarmView -Fields Guid |Reset-PvsDeviceForDomain -Domain theDomain -OrganizationUnittheOrganizationUnit\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 9: Reset-PvsDeviceForDomain for CollectionName\n\n\nReset-PvsDeviceForDomain -CollectionNametheCollection -SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 10: Reset-PvsDeviceForDomain for CollectionName with Domain\n\n\nReset-PvsDeviceForDomain -CollectionNametheCollection -SiteName theSite -Domain theDomain\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 11: Reset-PvsDeviceForDomain for CollectionName with Domain andOrganizationUnit\n\n\nReset-PvsDeviceForDomain -CollectionNametheCollection -SiteName theSite -Domain theDomain -OrganizationUnittheOrganizationUnit\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 12: Reset-PvsDeviceForDomain for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theReset-PvsDeviceForDomain.\n\n\n\nGet-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Reset-PvsDeviceForDomain -Domain theDomain-OrganizationUnit theOrganizationUnit\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 13: Reset-PvsDeviceForDomain for SiteViewName\n\n\nReset-PvsDeviceForDomain -SiteViewName theSiteView-SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 14: Reset-PvsDeviceForDomain for SiteViewName with Domain\n\n\nReset-PvsDeviceForDomain -SiteViewName theSiteView-SiteName theSite -Domain theDomain\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 15: Reset-PvsDeviceForDomain for SiteViewName with Domain and OrganizationUnit\n\n\nReset-PvsDeviceForDomain -SiteViewName theSiteView-SiteName theSite -Domain theDomain -OrganizationUnit theOrganizationUnit\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 16: Reset-PvsDeviceForDomain for PvsSiteView Using Pipe\n\n\nThe Get-PvsSiteView output is piped to theReset-PvsDeviceForDomain.\n\n\n\nGet-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Reset-PvsDeviceForDomain -Domain theDomain -OrganizationUnittheOrganizationUnit\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nRestart-PvsStreamService\n\n\nRestart the Stream Service on a Server or allServers in a Site.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server torestart the Stream Service.\n\n\n\nstring[] Name or ServerName: Name of the Server torestart the Stream Service.\n\n\n\nGuid[] SiteId: GUID of the Site to restart theStream Service on all Servers.\n\n\n\nstring[] SiteName: Name of the Site to restart theStream Service on all Servers.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId or SiteId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Restart-PvsStreamService for Name\n\n\nRestart-PvsStreamService -Name theServer\n\n\n\nEXAMPLE 2: Restart-PvsStreamService for PvsServer Using Pipe\n\n\nThe Get-PvsServer output is piped to theRestart-PvsStreamService.\n\n\n\nGet-PvsServer -Name theServer -Fields Guid |Restart-PvsStreamService\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Restart-PvsStreamService for SiteName\n\n\nRestart-PvsStreamService -SiteName theSite\n\n\n\nEXAMPLE 4: Restart-PvsStreamService for PvsSite Using Pipe\n\n\nThe Get-PvsSite output is piped to theRestart-PvsStreamService.\n\n\n\nGet-PvsSite -Name theSite -Fields Guid |Restart-PvsStreamService\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nRevoke-PvsAuthGroup\n\n\nRemove Farm, Site or Collection Authorization for anAuthGroup. If no Site or Collection is specified, Farm Authorization is removedfor the AuthGroup.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or AuthGroupId: GUID of the AuthGroup toremove Authorization for.\n\n\n\nstring[] Name or AuthGroupName: Name of theAuthGroup to remove Authorization for.\n\n\n\nOne of these optional\n\n\n\nGuid[] SiteId: GUID of the Site to removeAuthorization for the AuthGroup.\n\n\n\nstring[] SiteName: Name of the Site to removeAuthorization for the AuthGroup.\n\n\n\nGuid[] CollectionId: GUID of the Collection toremove Authorization for the AuthGroup.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] CollectionName: Name of the Collection toremove Authorization for the AuthGroup.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site to removeAuthorization for the AuthGroup.\n\n\n\nstring[] SiteName: Name of the Site to removeAuthorization for the AuthGroup.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nAuthGroupId, SiteId or CollectionId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Revoke-PvsAuthGroup for PvsAuthGroup to PvsFarm\n\n\nRevoke-PvsAuthGroup -Name theAuthGroup\n\n\n\nEXAMPLE 2: Revoke-PvsAuthGroup for PvsAuthGroup Using Pipe\n\n\nThe Get-PvsAuthGroup output is piped to theRevoke-PvsAuthGroup.\n\n\n\nGet-PvsAuthGroup -Name theAuthGroup -Fields Guid |Revoke-PvsAuthGroup\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Revoke-PvsAuthGroup for PvsAuthGroup to PvsSite\n\n\nRevoke-PvsAuthGroup -Name theAuthGroup -SiteNametheSite\n\n\n\nEXAMPLE 4: Revoke-PvsAuthGroup for PvsAuthGroup Using Pipe\n\n\nThe Get-PvsAuthGroup output is piped to theRevoke-PvsAuthGroup.\n\n\n\nGet-PvsAuthGroup -Name theAuthGroup -Fields Guid |Revoke-PvsAuthGroup -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 5: Revoke-PvsAuthGroup for PvsSite Using Pipe\n\n\nThe Get-PvsSite output is piped to theRevoke-PvsAuthGroup.\n\n\n\nGet-PvsSite -Name theSite -Fields Guid |Revoke-PvsAuthGroup -Name theAuthGroup\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 6: Revoke-PvsAuthGroup for PvsAuthGroup to PvsCollection\n\n\nRevoke-PvsAuthGroup -Name theAuthGroup-CollectionName theCollection -SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 7: Revoke-PvsAuthGroup for PvsAuthGroup Using Pipe\n\n\nThe Get-PvsAuthGroup output is piped to theRevoke-PvsAuthGroup.\n\n\n\nGet-PvsAuthGroup -Name theAuthGroup -Fields Guid |Revoke-PvsAuthGroup -CollectionName theCollection -SiteName theSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 8: Revoke-PvsAuthGroup for PvsCollection Using Pipe\n\n\nThe Get-PvsCollection output is piped to theRevoke-PvsAuthGroup.\n\n\n\nGet-PvsCollection -Name theCollection -SiteName theSite-Fields Guid | Revoke-PvsAuthGroup -Name theAuthGroup\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nSet-PvsAuthGroup\n\n\nSet AuthGroup(s) changed values from PvsAuthGroupobject(s), or set one or more field values for a PvsAuthGroup.\n\n\n\nRequired\n\n\n\nPvsAuthGroup AuthGroup: PvsAuthGroup object(s) withchanged property value(s) to be set. The object(s) can come from a pileline.\n\n\n\nThese values are in the PvsAuthGroup object, andonly will be set if the value has changed.\n\n\n\nstring Name or AuthGroupName: Name of the ActiveDirectory or Windows Group. Max Length=450\n\n\n\nstring Description: User description. Default=\"\"Max Length=250\n\n\n\n\n\n\nWhen AuthGroup is not passed, the parameters beloware used:\n\n\n\nOne of these required\n\n\n\nGuid Guid or AuthGroupId: GUID of the AuthGroup toSet.\n\n\n\nstring Name or AuthGroupName: Name of the AuthGroupto Set.\n\n\n\nOptional field values to set:\n\n\n\nstring NewName: Name of the Active Directory orWindows Group. Max Length=450\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsAuthGroup object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsAuthGroup for Individual Fields\n\n\nGet the PvsAuthGroup into a $o variable. Change the$o field values and then Set the PvsAuthGroup with the result.\n\n\n\n$o = Get-PvsAuthGroup -Name oldName -Fields Name\n\n\n\n$o.Name = \"newName\"\n\n\n\nSet-PvsAuthGroup $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsAuthGroup for a Field Using Pipe\n\n\nGet the PvsAuthGroup into a $o variable. Change a $ofield to the correct value and then Set the PvsAuthGroup with the result.\n\n\n\nGet-PvsAuthGroup -Name oldName -Fields Name |foreach { $o = $_; $o.Name = \"newName\"; $o } | Set-PvsAuthGroup\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsCeipData\n\n\nSet Ceip changed values from a PvsCeip object, orset one or more field values for a PvsCeip.\n\n\n\nRequired\n\n\n\nPvsCeipData CeipData: PvsCeipData object(s) withchanged property value(s) to be set. The object(s) can come from a pileline.\n\n\n\nThese values are in the PvsCeipData object, and onlywill be set if the value has changed.\n\n\n\nuint Enabled: 1 if CEIP is enabled, otherwise 0.Min=0, Max=1\n\n\n\nDateTime NextUpload: Date and time next CEIP uploadis due if enabled is 1. Default=Empty\n\n\n\nuint InProgress: 1 if an upload is currently inprogress, otherwise 0. Default=0\n\n\n\nGuid ServerId: ID of server that is currentlyuploading, null if InProgress is 0.Default=00000000-0000-0000-0000-000000000000\n\n\n\nuint OneTimeUpload: 1 to perform a one time upload.\n\n\n\n\n\n\nWhen CeipData is not passed, the parameters beloware used:\n\n\n\nOptional\n\n\n\nstring Uuid: CEIP UUID of this Farm. This isoptional since there is only one.\n\n\n\nOptional field values to set:\n\n\n\nuint Enabled: 1 if CEIP is enabled, otherwise 0.Min=0, Max=1\n\n\n\nDateTime NextUpload: Date and time next CEIP uploadis due if enabled is 1. Default=Empty\n\n\n\nuint InProgress: 1 if an upload is currently inprogress, otherwise 0. Default=0\n\n\n\nGuid ServerId: ID of server that is currentlyuploading, null if InProgress is 0.Default=00000000-0000-0000-0000-000000000000\n\n\n\nuint OneTimeUpload: 1 to perform a one time upload.\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsCeipData object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsCeipData for Individual Fields\n\n\nGet the PvsCeipData into a $o variable. Change the$o field values and then Set the PvsCeipData with the result.\n\n\n\n$o = Get-PvsCeipData -Fields Enabled, NextUpload\n\n\n\n$o.Enabled = $true\n\n\n\n$o.NextUpload = \"2016-01-14 15:52:00\"\n\n\n\nSet-PvsCeipData $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsCeipData for a Field Using Pipe\n\n\nGet the PvsCeipData into a $o variable for the fieldthat has the wrong value. Change the $o field to the correct value and then Setthe PvsCeipData with the result.\n\n\n\nGet-PvsCeipData -Fields Enabled | Where-Object{$_.Enabled -ne $false} | foreach { $o = $_; $o.Enabled = $false; $o } | Set-PvsCeipData\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsCisData\n\n\nSet one or more field values for CIS data.\n\n\n\nRequired\n\n\n\nPvsCisData CisData: PvsCisData object(s) withchanged property value(s) to be set. The object(s) can come from a pileline.\n\n\n\nThese values are in the PvsCisData object, and onlywill be set if the value has changed.\n\n\n\nstring UserName: Username used to obtain the tokenDefault=\"\" Max Length=255\n\n\n\nstring Path: Path where the last problem reportbundle was saved Default=\"\" Max Length=255\n\n\n\nstring Password: Password of the user required toobtain the token. This is required only by Set and Add\n\n\n\n\n\n\nWhen CisData is not passed, the parameters below areused:\n\n\n\nOptional\n\n\n\nGuid Guid or CisDataId: CIS UUID of this Farm. Thisis optional since there is only a single record.\n\n\n\nOptional field values to set:\n\n\n\nstring UserName: Username used to obtain the tokenDefault=\"\" Max Length=255\n\n\n\nstring Path: Path where the last problem reportbundle was saved Default=\"\" Max Length=255\n\n\n\nstring Password: Password of the user required toobtain the token. This is required only by Set and Add\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsCisData object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsCisData for Individual Fields\n\n\nGet the PvsCisData into a $o variable. Change the $ofield values and then Set the PvsCisData with the result.\n\n\n\n$o = Get-PvsCisData -Fields UserName, UploadToken\n\n\n\n$o.UserName = userName\n\n\n\n$o.UploadToken = token\n\n\n\nSet-PvsCisData $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsCisData for a Field Using Pipe\n\n\nGet the PvsCisData into a $o variable for the fieldthat has the wrong value. Change the $o field to the correct value and then Setthe PvsCisData with the result.\n\n\n\nGet-PvsCisData -Fields UserName | Where-Object {$_.UserName-ne newUserName} | foreach { $o = $_; $o.UserName = newUserName; $o } |Set-PvsCisData\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsCollection\n\n\nSet Collection(s) changed values from PvsCollectionobject(s), or set one or more field values for a PvsCollection.\n\n\n\nRequired\n\n\n\nPvsCollection Collection: PvsCollection object(s)with changed property value(s) to be set. The object(s) can come from apileline.\n\n\n\nThese values are in the PvsCollection object, andonly will be set if the value has changed.\n\n\n\nstring Name or CollectionName: Name of theCollection. It is unique within the Site. Max Length=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nGuid TemplateDeviceId: GUID of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith templateDeviceName. Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring TemplateDeviceName: Name of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith TemplateDeviceId. Default=\"\"\n\n\n\nuint LastAutoAddDeviceNumber: The Device Number ofthe last Auto Added Device. Default=0\n\n\n\nbool Enabled: True when Devices in the Collectioncan be booted, false otherwise. Default=true\n\n\n\nstring AutoAddPrefix: The string put before theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno end digit Max Length=12\n\n\n\nstring AutoAddSuffix: The string put after theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno begin digit Max Length=12\n\n\n\nbool AutoAddZeroFill: True when zeros be placedbefore the Device Number up to the AutoAddNumberLength for Auto Add, falseotherwise. Default=true\n\n\n\nuint AutoAddNumberLength: The maximum length of theDevice Number for Auto Add. This length plus the AutoAddPrefix length plus theAutoAddSuffix length must be less than 16. Required that((lenautoAddPrefix+lenautoAddSuffix)+AutoAddNumberLength)\n<\n=15. Min=3, Max=9,Default=4\n\n\n\n\n\n\nWhen Collection is not passed, the parameters beloware used:\n\n\n\nThis required\n\n\n\nGuid Guid or CollectionId: GUID of the Collection toSet.\n\n\n\nor this required ; resolution\n\n\n\nstring Name or CollectionName: Name of theCollection to Set.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOptional field values to set:\n\n\n\nstring NewName: Name of the Collection. It is uniquewithin the Site. Max Length=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nGuid TemplateDeviceId: GUID of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith templateDeviceName. Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring TemplateDeviceName: Name of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith TemplateDeviceId. Default=\"\"\n\n\n\nuint LastAutoAddDeviceNumber: The Device Number ofthe last Auto Added Device. Default=0\n\n\n\nbool Enabled: True when Devices in the Collectioncan be booted, false otherwise. Default=true\n\n\n\nstring AutoAddPrefix: The string put before theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno end digit Max Length=12\n\n\n\nstring AutoAddSuffix: The string put after theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno begin digit Max Length=12\n\n\n\nbool AutoAddZeroFill: True when zeros be placedbefore the Device Number up to the AutoAddNumberLength for Auto Add, falseotherwise. Default=true\n\n\n\nuint AutoAddNumberLength: The maximum length of theDevice Number for Auto Add. This length plus the AutoAddPrefix length plus theAutoAddSuffix length must be less than 16. Required that ((lenautoAddPrefix+lenautoAddSuffix)+AutoAddNumberLength)\n<\n=15.Min=3, Max=9, Default=4\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsCollection object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsCollection for Individual Fields\n\n\nGet the PvsCollection into a $o variable. Change the$o field values and then Set the PvsCollection with the result.\n\n\n\n$o = Get-PvsCollection -Name theCollection -SiteNametheSite -Fields AutoAddSuffix, AutoAddZeroFill\n\n\n\n$o.AutoAddSuffix = \"Ex\"\n\n\n\n$o.AutoAddZeroFill = $true\n\n\n\nSet-PvsCollection $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Set PvsCollection for a Field Using Pipe\n\n\nGet the PvsCollection into a $o variable. Change a$o field to the correct value and then Set the PvsCollection with the result.\n\n\n\nGet-PvsCollection -CollectionName theCollection-SiteName theSite -Fields AutoAddSuffix | foreach { $o = $_; $o.AutoAddSuffix =\"Ex\"; $o } | Set-PvsCollection\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nEXAMPLE 3: Get PvsCollection and Enable\n\n\nGet all PvsCollection that are not Enabled and thenEnables them.\n\n\n\nGet-PvsCollection -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsCollection\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsConnection\n\n\nSet the SoapServer connection, and if -Persist isspecified the connection settings are saved in the registry. A PvsConnectionobject can be used as the parameter.\n\n\n\nRequired\n\n\n\nPvsConnection Connection: PvsConnection object withchanged property value(s) to be set. The object can come from a pileline.\n\n\n\nThese values are in the PvsConnection object, andonly will be set if the value has changed.\n\n\n\nstring Name or Server: Name or IP of the Server toconnect to. Default=localhost\n\n\n\nstring Port: The Port to use to connect.Default=54321\n\n\n\nstring User: User name to use for Authentication. Ifit has a value, it will be *****. Default=\"\"\n\n\n\nstring Domain: Domain name to use forAuthentication. If it has a value, it will be *****. Default=\"\"\n\n\n\nstring Password: Password to use for Authentication.If it has a value, it will be *****. Default=\"\"\n\n\n\nstring Persist: True when the connection settingsshould be, for Set, or have been, for Get, saved to the registry.\n\n\n\nPvsConnection can be created or modified usingmethods below:\n\n\n\nNew-Object Citrix.PVS.SnapIn.PvsConnection: Createsdefault Server=localhost, Port=54321, and no authentication.\n\n\n\nNew-ObjectCitrix.PVS.SnapIn.PvsConnection(Citrix.PVS.SnapIn copyFrom): Creates withsettings of the copyFrom Citrix.PVS.SnapIn.\n\n\n\nSetServerToLocalHostDefaultSettings:Server=localhost, Port=54321, and no authentication.\n\n\n\nCopy(Citrix.PVS.SnapIn copyFrom): Modifies thesettings to match the copyFrom Citrix.PVS.SnapIn.\n\n\n\nEquals(Citrix.PVS.SnapIn compareTo): Returns truewhen the settings match what is in the compareTo.\n\n\n\n\n\n\nWhen Connection is not passed, the parameters beloware used:\n\n\n\nOptional field values to set:\n\n\n\nstring Name or Server: Name or IP of the Server toconnect to. Default=localhost\n\n\n\nstring Port: The Port to use to connect.Default=54321\n\n\n\nstring User: User name to use for Authentication. Ifit has a value, it will be *****. Default=\"\"\n\n\n\nstring Domain: Domain name to use forAuthentication. If it has a value, it will be *****. Default=\"\"\n\n\n\nstring Password: Password to use for Authentication.If it has a value, it will be *****. Default=\"\"\n\n\n\nstring Persist: True when the connection settingsshould be, for Set, or have been, for Get, saved to the registry.\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsConnection object is returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsConnection for Individual Fields\n\n\nGet the PvsConnection into a $o variable. Change the$o field values and then Set the PvsConnection with the result.\n\n\n\n$o = Get-PvsConnection -Fields Port\n\n\n\n$o.Port = 54322\n\n\n\nSet-PvsConnection $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsConnection for a Field Using Pipe\n\n\nGet the PvsConnection into a $o variable for thefield that has the wrong value. Change the $o field to the correct value andthen Set the PvsConnection with the result.\n\n\n\nGet-PvsConnection -Fields Port | Where-Object{$_.Port -ne 54322} | foreach { $o = $_; $o.Port = 54322; $o } |Set-PvsConnection\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nEXAMPLE 3: Set PvsConnection Port with Parameter\n\n\nSet the PvsConnection Port using the Port parameterinstead of a PvsConnection object.\n\n\n\nSet-PvsConnection -Port 54322\n\n\n\nThis is the only Set command that has fieldparameters.\n\n\n\nSet-PvsDevice\n\n\nSet Device(s) changed values from PvsDeviceobject(s), or set one or more field values for one or more PvsDevices.\n\n\n\nRequired\n\n\n\nPvsDevice Device: PvsDevice object(s) with changedproperty value(s) to be set. The object(s) can come from a pileline.\n\n\n\nThese values are in the PvsDevice object, and onlywill be set if the value has changed.\n\n\n\nstring Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nPvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.\n\n\n\nuint BootFrom: Device to boot from. Choices are 1for vDisk, 2 for Hard Disk, and 3 for Floppy. This cannot be Set for a Devicewith Personal vDisk. Min=1, Max=3, Default=1\n\n\n\nstring ClassName: Used by Automatic Update featureto match new versions of Disks to a Device. This cannot be Set for a Devicewith Personal vDisk. Default=\"\" Max Length=41\n\n\n\nuint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901\n\n\n\nbool Enabled: True when it can be booted, falseotherwise. This cannot be Set for a Device with Personal vDisk. Default=true\n\n\n\nbool LocalDiskEnabled: If there is a local disk menuchoice for the Device, this is true. This cannot be Set for a Device withPersonal vDisk. Default=false\n\n\n\nuint Authentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. This cannotbe Set for a Device with Personal vDisk. Min=0, Max=2, Default=0\n\n\n\nstring User: Name of user to authenticate before theboot process continues. This cannot be Set for a Device with Personal vDisk.Default=\"\" ASCII Max Length=20\n\n\n\nstring Password: Password of user to authenticatebefore the boot process continues. This cannot be Set for a Device with PersonalvDisk. Default=\"\" ASCII Max Length=100\n\n\n\nuint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0\n\n\n\nstring DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255\n\n\n\nstring DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186\n\n\n\nstring DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000\n\n\n\nDateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty\n\n\n\nuint Type: 1 when it performs test of Disks, 2 whenit performs maintenance on Disks, 3 when it has a Personal vDisk, 4 when it hasa Personal vDisk and performs tests, 0 otherwise. A Device with type 0 - 3 canonly be Set to 0 - 3, and a Device with type 3 - 4 can only be Set to 3 - 4. Min=0,Max=4, Default=0\n\n\n\nuint LocalWriteCacheDiskSize: The size in GB toformat the Device cache file disk. If the value is 0, then the disk is notformatted. Min=0, Max=2048, Default=0\n\n\n\nbool BdmBoot: Use PXE boot when set to false, BDMboot when set to true. Default is PXE Default=false\n\n\n\nuint BdmType: Use PXE boot when set to 0, BDM (Bios)boot when set to 1 and BDM (Uefi) boot when set to 2.  Default=0\n\n\n\nuint BdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3use USB. Default=0\n\n\n\nDateTime BdmUpdated: Timestamp of the last BDM bootdisk update. Default=Empty\n\n\n\nDateTime BdmCreated: Timstamp when BDM device wascreated  Default=Empty\n\n\n\nGuid XsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000\n\n\n\nbool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false\n\n\n\n\n\n\nWhen Device is not passed, the parameters below areused:\n\n\n\nOne of these required\n\n\n\nGuid Guid or DeviceId: GUID of the Device to Set.\n\n\n\nstring Name or DeviceName: Name of the Device toSet.\n\n\n\nPvsPhysicalAddress DeviceMac: MAC of the Device toSet.\n\n\n\nGuid CollectionId: GUID of the Collection to set allDevices. DeviceName and DeviceMac cannot be set.\n\n\n\nGuid SiteViewId: GUID of the Site View to set allDevices. DeviceName and DeviceMac cannot be set.\n\n\n\nGuid FarmViewId: GUID of the Farm View to set allDevices. DeviceName and DeviceMac cannot be set.\n\n\n\nstring FarmViewName: Name of the Farm View to setall Devices. DeviceName and DeviceMac cannot be set.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring CollectionName: Name of the Collection to setall Devices. DeviceName and DeviceMac cannot be set.\n\n\n\nstring SiteViewName: Name of the Site View to setall Devices. DeviceName and DeviceMac cannot be set.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOptional field values to set:\n\n\n\nstring NewName: Computer name with no spaces. ASCIIcomputer name characters Max Length=15\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nPvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.\n\n\n\nuint BootFrom: Device to boot from. Choices are 1for vDisk, 2 for Hard Disk, and 3 for Floppy. This cannot be Set for a Devicewith Personal vDisk. Min=1, Max=3, Default=1\n\n\n\nstring ClassName: Used by Automatic Update featureto match new versions of Disks to a Device. This cannot be Set for a Devicewith Personal vDisk. Default=\"\" Max Length=41\n\n\n\nuint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901\n\n\n\nbool Enabled: True when it can be booted, falseotherwise. This cannot be Set for a Device with Personal vDisk. Default=true\n\n\n\nbool LocalDiskEnabled: If there is a local disk menuchoice for the Device, this is true. This cannot be Set for a Device withPersonal vDisk. Default=false\n\n\n\nuint Authentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. This cannotbe Set for a Device with Personal vDisk. Min=0, Max=2, Default=0\n\n\n\nstring User: Name of user to authenticate before theboot process continues. This cannot be Set for a Device with Personal vDisk.Default=\"\" ASCII Max Length=20\n\n\n\nstring Password: Password of user to authenticatebefore the boot process continues. This cannot be Set for a Device withPersonal vDisk. Default=\"\" ASCII Max Length=100\n\n\n\nuint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0\n\n\n\nstring DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255\n\n\n\nstring DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186\n\n\n\nstring DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000\n\n\n\nDateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty\n\n\n\nuint Type: 1 when it performs test of Disks, 2 whenit performs maintenance on Disks, 3 when it has a Personal vDisk, 4 when it hasa Personal vDisk and performs tests, 0 otherwise. A Device with type 0 - 3 canonly be Set to 0 - 3, and a Device with type 3 - 4 can only be Set to 3 - 4.Min=0, Max=4, Default=0\n\n\n\nuint LocalWriteCacheDiskSize: The size in GB toformat the Device cache file disk. If the value is 0, then the disk is notformatted. Min=0, Max=2048, Default=0\n\n\n\nbool BdmBoot: Use PXE boot when set to false, BDMboot when set to true. Default is PXE Default=false\n\n\n\nuint BdmType: Use PXE boot when set to 0, BDM (Bios)boot when set to 1 and BDM (Uefi) boot when set to 2.  Default=0\n\n\n\nuint BdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3use USB. Default=0\n\n\n\nDateTime BdmUpdated: Timestamp of the last BDM bootdisk update. Default=Empty\n\n\n\nDateTime BdmCreated: Timstamp when BDM device wascreated  Default=Empty\n\n\n\nGuid XsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000\n\n\n\nbool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsDevice object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsDevice for Individual Fields\n\n\nGet the PvsDevice into a $o variable. Change the $ofield values and then Set the PvsDevice with the result.\n\n\n\n$o = Get-PvsDevice -Name theDevice -FieldsLocalWriteCacheDiskSize\n\n\n\n$o.LocalWriteCacheDiskSize = 1024\n\n\n\nSet-PvsDevice $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsDevice for a Field Using Pipe\n\n\nGet the PvsDevice into a $o variable. Change a $ofield to the correct value and then Set the PvsDevice with the result.\n\n\n\nGet-PvsDevice -Name theDevice -FieldsLocalWriteCacheDiskSize | foreach { $o = $_; $o.LocalWriteCacheDiskSize = 1024;$o } | Set-PvsDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nEXAMPLE 3: Get PvsDevice and Enable\n\n\nGet all PvsDevice that are not Enabled and thenEnables them.\n\n\n\nGet-PvsDevice -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsDeviceBootstrap\n\n\nSet Device Bootstrap List(s) changed values fromPvsDeviceBootstrap object(s).\n\n\n\nRequired\n\n\n\nPvsDeviceBootstrap[] DeviceBootstrap: Array ofPvsDeviceBootstrap objects with changed DeviceBootstrap. The object(s) can comefrom a pileline.\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsDeviceBootstrap object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will be confirmed.$ConfirmPreference can be set to \"low\" to have confirmation withoutthe Confirm parameter.\n\n\n\nThese exist in the DeviceBootstrap array within eachPvsDeviceBootstrap.\n\n\n\nEach array item is a PvsDeviceBootstrapList object.\n\n\n\nThey are set using the Add, Insert, Remove, Set, andReorder methods in the PvsDeviceBootstrap.\n\n\n\nstring Name or Bootstrap: Name of the bootstrapfile. Max Length=259\n\n\n\nstring MenuText: Text that is displayed in the BootMenu. If this field has no value, the bootstrap value is used. Default=\"\"ASCII Max Length=64\n\n\n\nEXAMPLE 1: Set PvsDeviceBootstrap for Individual Fields\n\n\nThe Get-PvsDeviceBootstrap returns aPvsDeviceBootstrap object with a PvsDeviceBootstrapList array in it calledDeviceBootstrap.\n\n\n\nThe DeviceBootstrap is manipulated using the Add,Insert, Remove, Set and Reorder Methods.\n\n\n\nThe Set-PvsDeviceBootstrap is called with the finalresult.\n\n\n\n$o = Get-PvsDeviceBootstrap -Name theDevice\n\n\n\n$o.Add(\"addName\", \"addValue\")\n\n\n\n$o.Insert(0, \"insertName\",\"insertValue\")\n\n\n\n$o.Remove(1)\n\n\n\n$o.Set(2, \"setValue\")\n\n\n\n$o.Reorder(0, 1)\n\n\n\nSet-PvsDeviceBootstrap $o\n\n\n\nSet-PvsDevicePersonality\n\n\nSet Device Personality List(s) changed values fromPvsDevicePersonality object(s).\n\n\n\nRequired\n\n\n\nPvsDevicePersonality[] DevicePersonality: Array ofPvsDevicePersonality objects with changed DevicePersonality. The object(s) cancome from a pileline.\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsDevicePersonality object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nThese exist in the DevicePersonality array withineach PvsDevicePersonality.\n\n\n\nEach array item is a PvsDevicePersonalityListobject.\n\n\n\nThey are set using the Add, Insert, Remove, Set, andReorder methods in the PvsDevicePersonality.\n\n\n\nstring Name: Name of the Device personality item.Max Length=250\n\n\n\nstring Value: Value for the Device personality item.Max Length=1000\n\n\n\nEXAMPLE 1: Set PvsDevicePersonality for Individual Fields\n\n\nThe Get-PvsDevicePersonality returns aPvsDevicePersonality object with a PvsDevicePersonalityList array in it calledDevicePersonality.\n\n\n\nThe DevicePersonality is manipulated using the Add, Insert,Remove, Set and Reorder Methods.\n\n\n\nThe Set-PvsDevicePersonality is called with thefinal result.\n\n\n\n$o = Get-PvsDevicePersonality -Name theDevice\n\n\n\n$o.Add(\"addName\", \"addValue\")\n\n\n\n$o.Insert(0, \"insertName\",\"insertValue\")\n\n\n\n$o.Remove(1)\n\n\n\n$o.Set(2, \"setValue\")\n\n\n\n$o.Reorder(0, 1)\n\n\n\nSet-PvsDevicePersonality $o\n\n\n\nSet-PvsDisk\n\n\nSet Disk(s) changed values from PvsDisk object(s),or set one or more field values for a PvsDisk.\n\n\n\nRequired\n\n\n\nPvsDisk Disk: PvsDisk object(s) with changedproperty value(s) to be set. The object(s) can come from a pileline.\n\n\n\nThese values are in the PvsDisk object, and onlywill be set if the value has changed.\n\n\n\nstring Class: Class of the Disk. Max Length=40\n\n\n\nstring ImageType: Type of this image (softwaretype). Max Length=40\n\n\n\nUInt64 WriteCacheSize: RAM cache size (MB). Not 0when used with Cache in Device RAM, and Cache in Device RAM with Overflow onHard Disk. A value of 0 will disable the RAM use for Cache in Device RAM withOverflow on Hard Disk. Min=0, Max=131072, Default=0\n\n\n\nbool AutoUpdateEnabled: Automatically update thisimage for matching Devices when set to true. Default false\n\n\n\nbool ActivationDateEnabled: Use activation date toactivate image when set to true. Default false\n\n\n\nbool AdPasswordEnabled: Enable AD passwordmanagement when set to true.\n\n\n\nbool HaEnabled: Enable HA when set to true.\n\n\n\nbool PrinterManagementEnabled: Invalid printers willbe deleted from the Device when set to true.\n\n\n\nuint WriteCacheType: 0 (Private), (other values arestandard image) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache onDevice Hard Disk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9(Cache in Device RAM with Overflow on Hard Disk). Min=0, Max=9, Default=0\n\n\n\nuint LicenseMode: 0 (None), 1 (Multiple ActivationKey), or 2 (Key Management Service). Min=0, Max=2, Default=0\n\n\n\nDateTime ActiveDate: Date to activate the disk ifAutoUpdateEnabled and activationDateEnabled are true. Has the date. Empty whenthe AutoUpdateEnabled or activationDateEnabled are false.\n\n\n\nstring LongDescription: Description of the Disk. MaxLength=399\n\n\n\nstring SerialNumber: User defined serial number. MaxLength=36\n\n\n\nstring Date: User defined date. Max Length=40\n\n\n\nstring Author: User defined author. Max Length=40\n\n\n\nstring Title: User defined title. Max Length=40\n\n\n\nstring Company: User defined company. Max Length=40\n\n\n\nstring InternalName: User defined name. MaxLength=63\n\n\n\nstring OriginalFile: User defined original file. MaxLength=127\n\n\n\nstring HardwareTarget: User defined hardware target.Max Length=127\n\n\n\nUInt64 MajorRelease: User defined major releasenumber. Min=0, Max=4294967295, Default=0\n\n\n\nUInt64 MinorRelease: User defined minor releasenumber. Min=0, Max=4294967295, Default=0\n\n\n\nUInt64 Build: User defined build number. Min=0,Max=4294967295, Default=0\n\n\n\nbool VHDX: If VHDX is true, the format of the imageis VHDX. Otherwise it is VHD. Default=false\n\n\n\n\n\n\nWhen Disk is not passed, the parameters below areused:\n\n\n\nThis required\n\n\n\nGuid Guid or DiskLocatorId: GUID of the DiskLocator.\n\n\n\nor this required ; resolution\n\n\n\nstring Name or DiskLocatorName: Name of the DiskLocator.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nOptional field values to set:\n\n\n\nstring Class: Class of the Disk. Max Length=40\n\n\n\nstring ImageType: Type of this image (softwaretype). Max Length=40\n\n\n\nUInt64 WriteCacheSize: RAM cache size (MB). Not 0when used with Cache in Device RAM, and Cache in Device RAM with Overflow onHard Disk. A value of 0 will disable the RAM use for Cache in Device RAM withOverflow on Hard Disk. Min=0, Max=131072, Default=0\n\n\n\nbool AutoUpdateEnabled: Automatically update thisimage for matching Devices when set to true. Default false\n\n\n\nbool ActivationDateEnabled: Use activation date toactivate image when set to true. Default false\n\n\n\nbool AdPasswordEnabled: Enable AD passwordmanagement when set to true.\n\n\n\nbool HaEnabled: Enable HA when set to true.\n\n\n\nbool PrinterManagementEnabled: Invalid printers willbe deleted from the Device when set to true.\n\n\n\nuint WriteCacheType: 0 (Private), (other values arestandard image) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache onDevice Hard Disk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9(Cache in Device RAM with Overflow on Hard Disk). Min=0, Max=9, Default=0\n\n\n\nuint LicenseMode: 0 (None), 1 (Multiple ActivationKey), or 2 (Key Management Service). Min=0, Max=2, Default=0\n\n\n\nDateTime ActiveDate: Date to activate the disk ifAutoUpdateEnabled and activationDateEnabled are true. Has the date. Empty whenthe AutoUpdateEnabled or activationDateEnabled are false.\n\n\n\nstring LongDescription: Description of the Disk. MaxLength=399\n\n\n\nstring SerialNumber: User defined serial number. MaxLength=36\n\n\n\nstring Date: User defined date. Max Length=40\n\n\n\nstring Author: User defined author. Max Length=40\n\n\n\nstring Title: User defined title. Max Length=40\n\n\n\nstring Company: User defined company. Max Length=40\n\n\n\nstring InternalName: User defined name. MaxLength=63\n\n\n\nstring OriginalFile: User defined original file. MaxLength=127\n\n\n\nstring HardwareTarget: User defined hardware target.Max Length=127\n\n\n\nUInt64 MajorRelease: User defined major releasenumber. Min=0, Max=4294967295, Default=0\n\n\n\nUInt64 MinorRelease: User defined minor releasenumber. Min=0, Max=4294967295, Default=0\n\n\n\nUInt64 Build: User defined build number. Min=0,Max=4294967295, Default=0\n\n\n\nbool VHDX: If VHDX is true, the format of the imageis VHDX. Otherwise it is VHD. Default=false\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsDisk object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsDisk for Individual Fields\n\n\nGet the PvsDisk into a $o variable. Change the $ofield values and then Set the PvsDisk with the result.\n\n\n\n$o = Get-PvsDisk -DiskLocatorId \"81ea9077-598d-459f-a443-71fabd1840bf\"-Fields PrinterManagementEnabled\n\n\n\n$o.PrinterManagementEnabled = $false\n\n\n\nSet-PvsDisk $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsDisk for a Field Using Pipe\n\n\nGet the PvsDisk into a $o variable. Change a $ofield to the correct value and then Set the PvsDisk with the result.\n\n\n\nGet-PvsDisk -DiskLocatorId\"81ea9077-598d-459f-a443-71fabd1840bf\" -FieldsPrinterManagementEnabled | foreach { $o = $_; $o.PrinterManagementEnabled =$false; $o } | Set-PvsDisk\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsDiskLocator\n\n\nSet Disk Locator(s) changed values fromPvsDiskLocator object(s), or set one or more field values for a PvsDiskLocator.\n\n\n\nRequired\n\n\n\nPvsDiskLocator DiskLocator: PvsDiskLocator object(s)with changed property value(s) to be set. The object(s) can come from apileline.\n\n\n\nThese values are in the PvsDiskLocator object, andonly will be set if the value has changed.\n\n\n\nstring Description: User description. Default=\"\"Max Length=250\n\n\n\nstring MenuText: Text that is displayed in the BootMenu. If this field has no value, the name value is used. Default=\"\"ASCII Max Length=64\n\n\n\nGuid ServerId: GUID of the single Server that thisDisk Locator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring ServerName: Name of the single Server thatthis Disk Locator is assigned to. It is not used with ServerId.Default=\"\"\n\n\n\nbool Enabled: True when this disk can be booted,false otherwise. Default=true\n\n\n\nbool RebalanceEnabled: True when this Server canautomatically rebalance Devices, false otherwise. Default=false\n\n\n\nuint RebalanceTriggerPercent: Percent over fair loadthat triggers a dynamic Device rebalance. Min=5, Max=5000, Default=25\n\n\n\nuint SubnetAffinity: Qualifier for subnet affinitywhen assigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2,Default=0\n\n\n\n\n\n\nWhen DiskLocator is not passed, the parameters beloware used:\n\n\n\nThis required\n\n\n\nGuid Guid or DiskLocatorId: GUID of the Disk Locatorto Set.\n\n\n\nor this required ; resolution\n\n\n\nstring Name or DiskLocatorName: Name of the DiskLocator File to Set.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nOptional field values to set:\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring MenuText: Text that is displayed in the BootMenu. If this field has no value, the name value is used. Default=\"\"ASCII Max Length=64\n\n\n\nGuid ServerId: GUID of the single Server that thisDisk Locator is assigned to. It is not used with ServerName. Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring ServerName: Name of the single Server thatthis Disk Locator is assigned to. It is not used with ServerId.Default=\"\"\n\n\n\nbool Enabled: True when this disk can be booted,false otherwise. Default=true\n\n\n\nbool RebalanceEnabled: True when this Server canautomatically rebalance Devices, false otherwise. Default=false\n\n\n\nuint RebalanceTriggerPercent: Percent over fair loadthat triggers a dynamic Device rebalance. Min=5, Max=5000, Default=25\n\n\n\nuint SubnetAffinity: Qualifier for subnet affinitywhen assigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2,Default=0\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsDiskLocator object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsDiskLocator for Individual Fields\n\n\nGet the PvsDiskLocator into a $o variable. Changethe $o field values and then Set the PvsDiskLocator with the result.\n\n\n\n$o = Get-PvsDiskLocator -DiskLocatorId\"81ea9077-598d-459f-a443-71fabd1840bf\" -Fields RebalanceEnabled\n\n\n\n$o.RebalanceEnabled = $true\n\n\n\nSet-PvsDiskLocator $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsDiskLocator for a Field Using Pipe\n\n\nGet the PvsDiskLocator into a $o variable. Change a$o field to the correct value and then Set the PvsDiskLocator with the result.\n\n\n\nGet-PvsDiskLocator -DiskLocatorId\"81ea9077-598d-459f-a443-71fabd1840bf\" -Fields RebalanceEnabled |foreach { $o = $_; $o.RebalanceEnabled = $true; $o } | Set-PvsDiskLocator\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nEXAMPLE 3: Get PvsDiskLocator and Enable\n\n\nGet all PvsDiskLocator that are not Enabled and thenEnables them.\n\n\n\nGet-PvsDiskLocator -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsDiskLocator\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsDiskUpdateDevice\n\n\nSet Disk Update Device(s) changed values fromPvsDiskUpdateDevice object(s), or set one or more field values for one or morePvsDiskUpdateDevices.\n\n\n\nRequired\n\n\n\nPvsDiskUpdateDevice DiskUpdateDevice:PvsDiskUpdateDevice object(s) with changed property value(s) to be set. Theobject(s) can come from a pileline.\n\n\n\nThese values are in the PvsDiskUpdateDevice object,and only will be set if the value has changed.\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nuint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901\n\n\n\nuint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0\n\n\n\nstring DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255\n\n\n\nstring DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186\n\n\n\nstring DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only set internallyby PVS. Default=\"\" Max Length=4000\n\n\n\nDateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty\n\n\n\n\n\n\nWhen DiskUpdateDevice is not passed, the parametersbelow are used:\n\n\n\nOne of these required\n\n\n\nGuid Guid or DeviceId: GUID of the Disk UpdateDevice to Set.\n\n\n\nstring Name or DeviceName: Name of Disk UpdateDevice to Set.\n\n\n\nPvsPhysicalAddress DeviceMac: MAC of Disk UpdateDevice to Set.\n\n\n\nGuid SiteId: GUID of the Site. Can be used alone toSet all Disk Update Devices in the Site.\n\n\n\nstring SiteName: Name of the Site. Can be used aloneto Set all Disk Update Devices in the Site.\n\n\n\nGuid DiskLocatorId: GUID of the DiskLocator to Setthe Disk Update Device for.\n\n\n\nor this required ; resolution\n\n\n\nstring DiskLocatorName: Name of the DiskLocator toSet the Disk Update Device for.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site. Can be used alone toSet all Disk Update Devices in the Site.\n\n\n\nstring SiteName: Name of the Site. Can be used aloneto Set all Disk Update Devices in the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nOptional field values to set:\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nuint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901\n\n\n\nuint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0\n\n\n\nstring DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255\n\n\n\nstring DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186\n\n\n\nstring DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000\n\n\n\nDateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsDiskUpdateDevice object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsDiskUpdateDevice for Individual Fields\n\n\nGet the PvsDiskUpdateDevice into a $o variable.Change the $o field values and then Set the PvsDiskUpdateDevice with theresult.\n\n\n\n$o = Get-PvsDiskUpdateDevice -Name theDevice -FieldsPort\n\n\n\n$o.Port = 5901\n\n\n\nSet-PvsDiskUpdateDevice $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsDiskUpdateDevice for a Field Using Pipe\n\n\nGet the PvsDiskUpdateDevice into a $o variable.Change a $o field to the correct value and then Set the PvsDiskUpdateDevicewith the result.\n\n\n\nGet-PvsDiskUpdateDevice -Name theDevice -Fields Port| foreach { $o = $_; $o.Port = 5901; $o } | Set-PvsDiskUpdateDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsDiskVersion\n\n\nSet Disk Version(s) changed values fromPvsDiskVersion object(s), or set one or more field values for a PvsDiskVersion.\n\n\n\nRequired\n\n\n\nPvsDiskVersion DiskVersion: PvsDiskVersion object(s)with changed property value(s) to be set. The object(s) can come from apileline.\n\n\n\nThese values are in the PvsDiskVersion object, andonly will be set if the value has changed.\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nDateTime ScheduledDate: Date/Time that the DiskVersion is scheduled to become available. Has the date, hour and minute. Emptywhen the disk version is made available immediately. Default=Empty\n\n\n\n\n\n\nWhen DiskVersion is not passed, the parameters beloware used:\n\n\n\nThis required\n\n\n\nGuid Guid or DiskLocatorId: GUID of the Disk LocatorVersion to Set.\n\n\n\nor this required ; resolution\n\n\n\nstring Name or DiskLocatorName: Name of the DiskLocator Version to Set.\n\n\n\nThis required\n\n\n\nuint Version: Version to Set.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nOptional field values to set:\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nDateTime ScheduledDate: Date/Time that the DiskVersion is scheduled to become available. Has the date, hour and minute. Emptywhen the disk version is made available immediately. Default=Empty\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsDiskVersion object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsDiskVersion for Individual Fields\n\n\nGet the PvsDiskVersion into a $o variable. Changethe $o field values and then Set the PvsDiskVersion with the result.\n\n\n\n$o = Get-PvsDiskVersion -DiskLocatorId\"81ea9077-598d-459f-a443-71fabd1840bf\" -Version 5 -FieldsScheduledDate\n\n\n\n$o.ScheduledDate = \"2016/01/01\"\n\n\n\nSet-PvsDiskVersion $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsDiskVersion for a Field Using Pipe\n\n\nGet the PvsDiskVersion into a $o variable. Change a$o field to the correct value and then Set the PvsDiskVersion with the result.\n\n\n\nGet-PvsDiskVersion -DiskLocatorId\"81ea9077-598d-459f-a443-71fabd1840bf\" -Version 5 -FieldsScheduledDate | foreach { $o = $_; $o.ScheduledDate = \"2016/01/01\";$o } | Set-PvsDiskVersion\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsFarm\n\n\nSet Farm changed values from a PvsFarm object, orset one or more field values for a PvsFarm.\n\n\n\nRequired\n\n\n\nPvsFarm Farm: PvsFarm object with changed propertyvalue(s) to be set. The object can come from a pileline.\n\n\n\nThese values are in the PvsFarm object, and onlywill be set if the value has changed.\n\n\n\nstring Name or FarmName: Name of the Farm.Default=\"\" Max Length=50\n\n\n\nstring Description: User description. Default=\"\"Max Length=250\n\n\n\nbool AutoAddEnabled: True when Auto Add is enabled,false otherwise. Default=false\n\n\n\nbool AuditingEnabled: True when Auditing is enabled,false otherwise. Default=false\n\n\n\nDateTime LastAuditArchiveDate: Last date of AuditTrail data that was Archived. Has the date. Default=Empty\n\n\n\nGuid DefaultSiteId: GUID of the Site to place newDevices into automatically. Not used with defaultSiteName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring DefaultSiteName: Name of the Site to placenew Devices into automatically. Not used with DefaultSiteId.Default=\"\"\n\n\n\nbool OfflineDatabaseSupportEnabled: True whenOffline Database Support is enabled, false otherwise. Default=false\n\n\n\nstring LicenseServer: License server name.Default=\"\" Max Length=255\n\n\n\nuint LicenseServerPort: License server port.Min=1025, Max=65534, Default=27000\n\n\n\nbool AutomaticMergeEnabled: True when AutomaticMerge is enabled, false otherwise. If the number of versions becomes more thanthe MaxVersions value, a merge will occur at the end of PromoteDiskVersion.Default=true\n\n\n\nuint MaxVersions: Maximum number a versions of aDisk that can exist before a merge will automatically occur. Min=3, Max=50,Default=5\n\n\n\nuint MergeMode: Mode to place the version in after amerge has occurred. Values are: 0 (Production), 1 (Test) and 2 (Maintenance).Min=0, Max=2, Default=2\n\n\n\n\n\n\nWhen Farm is not passed, the parameters below areused:\n\n\n\nOptional\n\n\n\nGuid Guid or FarmId: GUID of the Farm to Set. Thisis optional since there is only one Farm.\n\n\n\nOptional field values to set:\n\n\n\nstring NewName: Name of the Farm.Default=\"\" Max Length=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nbool AutoAddEnabled: True when Auto Add is enabled,false otherwise. Default=false\n\n\n\nbool AuditingEnabled: True when Auditing is enabled,false otherwise. Default=false\n\n\n\nDateTime LastAuditArchiveDate: Last date of AuditTrail data that was Archived. Has the date. Default=Empty\n\n\n\nGuid DefaultSiteId: GUID of the Site to place newDevices into automatically. Not used with defaultSiteName. Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring DefaultSiteName: Name of the Site to placenew Devices into automatically. Not used with DefaultSiteId.Default=\"\"\n\n\n\nbool OfflineDatabaseSupportEnabled: True whenOffline Database Support is enabled, false otherwise. Default=false\n\n\n\nstring LicenseServer: License server name.Default=\"\" Max Length=255\n\n\n\nuint LicenseServerPort: License server port.Min=1025, Max=65534, Default=27000\n\n\n\nbool AutomaticMergeEnabled: True when AutomaticMerge is enabled, false otherwise. If the number of versions becomes more thanthe MaxVersions value, a merge will occur at the end of PromoteDiskVersion.Default=true\n\n\n\nuint MaxVersions: Maximum number a versions of aDisk that can exist before a merge will automatically occur. Min=3, Max=50,Default=5\n\n\n\nuint MergeMode: Mode to place the version in after amerge has occurred. Values are: 0 (Production), 1 (Test) and 2 (Maintenance).Min=0, Max=2, Default=2\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsFarm object is returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsFarm for Individual Fields\n\n\nGet the PvsFarm into a $o variable. Change the $ofield values and then Set the PvsFarm with the result.\n\n\n\n$o = Get-PvsFarm -Fields AuditingEnabled,OfflineDatabaseSupportEnabled\n\n\n\n$o.AuditingEnabled = $true\n\n\n\n$o.OfflineDatabaseSupportEnabled = $true\n\n\n\nSet-PvsFarm $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsFarm for a Field Using Pipe\n\n\nGet the PvsFarm into a $o variable for the fieldthat has the wrong value. Change the $o field to the correct value and then Setthe PvsFarm with the result.\n\n\n\nGet-PvsFarm -Fields AuditingEnabled | Where-Object{$_.AuditingEnabled -ne $true} | foreach { $o = $_; $o.AuditingEnabled = $true;$o } | Set-PvsFarm\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsFarmView\n\n\nSet Farm View(s) changed values from PvsFarmViewobject(s), or set one or more field values for a PvsFarmView.\n\n\n\nRequired\n\n\n\nPvsFarmView FarmView: PvsFarmView object(s) withchanged property value(s) to be set. The object(s) can come from a pileline.\n\n\n\nThese values are in the PvsFarmView object, and onlywill be set if the value has changed.\n\n\n\nstring Name or FarmViewName: name of the Farm View.Max Length=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\n\n\n\nWhen FarmView is not passed, the parameters beloware used:\n\n\n\nOne of these required\n\n\n\nGuid Guid or FarmViewId: GUID of the Farm View toSet.\n\n\n\nstring Name or FarmViewName: Name of the Farm Viewto Set.\n\n\n\nOptional field values to set:\n\n\n\nstring NewName: name of the Farm View. Max Length=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsFarmView object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsFarmView for Individual Fields\n\n\nGet the PvsFarmView into a $o variable. Change the$o field values and then Set the PvsFarmView with the result.\n\n\n\n$o = Get-PvsFarmView -Name oldFarmView -Fields Name\n\n\n\n$o.Name = \"newFarmView\"\n\n\n\nSet-PvsFarmView $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsFarmView for a Field Using Pipe\n\n\nGet the PvsFarmView into a $o variable. Change a $ofield to the correct value and then Set the PvsFarmView with the result.\n\n\n\nGet-PvsFarmView -Name oldFarmView -Fields Name |foreach { $o = $_; $o.Name = \"newFarmView\"; $o } | Set-PvsFarmView\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsOverrideVersion\n\n\nSpecify a Disk Version all Production Devices willboot from.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator File to Override the Production Version for.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator File to Override the Production Version for.\n\n\n\nOptional\n\n\n\nuint Version: Version to set as the OverrideProduction Version. If Version is not included and if there is an OverrideProduction Version, then no longer have it as the Override Version.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to have confirmationwithout the Confirm parameter.\n\n\n\nEXAMPLE 1: Set-PvsOverrideVersion for Name with Version\n\n\nSet-PvsOverrideVersion -Name theDiskLocator-SiteName theSite -StoreName theStore -Version 4\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Set-PvsOverrideVersion for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theSet-PvsOverrideVersion.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Set-PvsOverrideVersion -Version 4\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 3: Set-PvsOverrideVersion for Name\n\n\nSet-PvsOverrideVersion -Name theDiskLocator-SiteName theSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 4: Set-PvsOverrideVersion for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theSet-PvsOverrideVersion.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Set-PvsOverrideVersion\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nSet-PvsServer\n\n\nSet Server(s) changed values from PvsServerobject(s), or set one or more field values for a PvsServer. Restart theServer(s) after setting.\n\n\n\nRequired\n\n\n\nPvsServer Server: PvsServer object(s) with changedproperty value(s) to be set. The object(s) can come from a pileline.\n\n\n\nThese values are in the PvsServer object, and onlywill be set if the value has changed.\n\n\n\nstring Name or ServerName: Computer name with nospaces. ASCII computer name characters Max Length=21\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nuint AdMaxPasswordAge: Number of days before apassword expires. Min=1, Max=30, Default=7\n\n\n\nuint LicenseTimeout: Amount of seconds before alicense times out. Min=15, Max=300, Default=30\n\n\n\nuint VDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0\n\n\n\nuint FirstPort: Number of the first UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910\n\n\n\nuint LastPort: Number of the last UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930\n\n\n\nuint ThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs) \n<\n= 1000.Min=1, Max=60, Default=8\n\n\n\nuint BuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24\n\n\n\nuint ServerCacheTimeout: Number of seconds to waitbefore considering another Server is down. Min=5, Max=60, Default=8\n\n\n\nuint IoBurstSize: Number of bytes read/writes cansend in a burst of packets. Required thatIoBurstSize/(MaxTransmissionUnits-76)\n<\n=32. Min=4096, Max=61440,Default=32768\n\n\n\nuint MaxTransmissionUnits: Ethernet maximumtransmission unit size for the protocol for use for Server and Device. Requiredthat IoBurstSize/(MaxTransmissionUnits-76)\n<\n=32. Min=502, Max=16426,Default=1506\n\n\n\nuint MaxBootDevicesAllowed: Maximum number ofDevices allowed to boot simultaneously. Min=1, Max=1000, Default=500\n\n\n\nuint MaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60\n\n\n\nuint BootPauseSeconds: Number of seconds that aDevice will pause during login if its server busy. Min=1, Max=60, Default=10\n\n\n\nbool AdMaxPasswordAgeEnabled: Age the password, whenset to true. Default=false\n\n\n\nbool EventLoggingEnabled: Enable event logging, whenset to true. Default=false\n\n\n\nbool NonBlockingIoEnabled: Use non-Blocking IO, whenset to true. Default=true\n\n\n\nstring[] Ip: One or more streaming ip addresses.\n\n\n\nuint InitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000,Default=50\n\n\n\nuint InitialTransactionConnectionPoolSize: Initialsize of database connection pool for transactional queries. Min=1, Max=1000,Default=50\n\n\n\nuint MaxQueryConnectionPoolSize: Maximum size ofdatabase connection pool for non-transactional queries. Min=1, Max=32767,Default=1000\n\n\n\nuint MaxTransactionConnectionPoolSize: Maximum sizeof database connection pool for transactional queries. Min=1, Max=32767,Default=1000\n\n\n\nuint RefreshInterval: Interval, in number ofseconds, the server should wait before refreshing settings. If set to 0, unuseddatabase connections are never released. Min=0, Max=32767, Default=300\n\n\n\nuint UnusedDbConnectionTimeout: Interval, in numberof seconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300\n\n\n\nuint BusyDbConnectionRetryCount: Number of times afailed database connection will be retried. Min=0, Max=32767, Default=2\n\n\n\nuint BusyDbConnectionRetryInterval: Interval, innumber of milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25\n\n\n\nuint LocalConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are local. A value of 0 disables thefeature. Min=0, Max=128, Default=4\n\n\n\nuint RemoteConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are remote. A value of 0 disables thefeature. Min=0, Max=128, Default=4\n\n\n\nstring RamDiskIpAddress: IP address to use fortransferring the RAM Disk. When equal to 0.0.0.0 the server IP is used with thefirst part replaced with 233. Default=0.0.0.0\n\n\n\nuint RamDiskTimeToLive: Time to live for theinvitation packet sent to Devices. Min=1, Max=255, Default=1\n\n\n\nbool RamDiskInvitationType: Either false for Fixed,or true for Variable. Default=false\n\n\n\nuint RamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6 (Trace).Min=0, Max=6, Default=4\n\n\n\nuint LogFileSizeMax: Maximum size log files canreach in Megabytes. Min=1, Max=50, Default=5\n\n\n\nuint LogFileBackupCopiesMax: Maximum number of logfile backups. Min=1, Max=50, Default=4\n\n\n\nfloat PowerRating: A strictly relative rating ofthis Server's capabilities when compared to other Servers in the Store(s) itbelongs too; can be used to help tune load balancing. Min=0.1, Max=1000,Default=1\n\n\n\nDateTime LastCeipUploadAttempt: Time that thisserver last attempted a CEIP upload. Default=Empty\n\n\n\nDateTime LastBugReportAttempt: Time that this serverlast attempted to upload or generate a bug report bundle. Default=Empty\n\n\n\nstring LastBugReportStatus: Status of the last bugreport on this server. Default=\"\" Max Length=250\n\n\n\nstring LastBugReportResult: Status of the last bugreport on this server. Default=\"\" Max Length=4000\n\n\n\nstring LastBugReportSummary: Summary of the last bugreport on this server. Default=\"\" Max Length=250\n\n\n\n\n\n\nWhen Server is not passed, the parameters below areused:\n\n\n\nOne of these required\n\n\n\nGuid Guid or ServerId: GUID of the Server to Set.\n\n\n\nstring Name or ServerName: Name of the Server toSet.\n\n\n\nOptional field values to set:\n\n\n\nstring NewName: Computer name with no spaces. ASCIIcomputer name characters Max Length=21\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nuint AdMaxPasswordAge: Number of days before apassword expires. Min=1, Max=30, Default=7\n\n\n\nuint LicenseTimeout: Amount of seconds before alicense times out. Min=15, Max=300, Default=30\n\n\n\nuint VDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0\n\n\n\nuint FirstPort: Number of the first UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910\n\n\n\nuint LastPort: Number of the last UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930\n\n\n\nuint ThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs) \n<\n= 1000.Min=1, Max=60, Default=8\n\n\n\nuint BuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24\n\n\n\nuint ServerCacheTimeout: Number of seconds to waitbefore considering another Server is down. Min=5, Max=60, Default=8\n\n\n\nuint IoBurstSize: Number of bytes read/writes cansend in a burst of packets. Required thatIoBurstSize/(MaxTransmissionUnits-76)\n<\n=32. Min=4096, Max=61440,Default=32768\n\n\n\nuint MaxTransmissionUnits: Ethernet maximumtransmission unit size for the protocol for use for Server and Device. Requiredthat IoBurstSize/(MaxTransmissionUnits-76)\n<\n=32. Min=502, Max=16426,Default=1506\n\n\n\nuint MaxBootDevicesAllowed: Maximum number ofDevices allowed to boot simultaneously. Min=1, Max=1000, Default=500\n\n\n\nuint MaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60\n\n\n\nuint BootPauseSeconds: Number of seconds that aDevice will pause during login if its server busy. Min=1, Max=60, Default=10\n\n\n\nbool AdMaxPasswordAgeEnabled: Age the password, whenset to true. Default=false\n\n\n\nbool EventLoggingEnabled: Enable event logging, whenset to true. Default=false\n\n\n\nbool NonBlockingIoEnabled: Use non-Blocking IO, whenset to true. Default=true\n\n\n\nstring[] Ip: One or more streaming ip addresses.\n\n\n\nuint InitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000,Default=50\n\n\n\nuint InitialTransactionConnectionPoolSize: Initialsize of database connection pool for transactional queries. Min=1, Max=1000,Default=50\n\n\n\nuint MaxQueryConnectionPoolSize: Maximum size of databaseconnection pool for non-transactional queries. Min=1, Max=32767, Default=1000\n\n\n\nuint MaxTransactionConnectionPoolSize: Maximum sizeof database connection pool for transactional queries. Min=1, Max=32767,Default=1000\n\n\n\nuint RefreshInterval: Interval, in number ofseconds, the server should wait before refreshing settings. If set to 0, unuseddatabase connections are never released. Min=0, Max=32767, Default=300\n\n\n\nuint UnusedDbConnectionTimeout: Interval, in numberof seconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300\n\n\n\nuint BusyDbConnectionRetryCount: Number of times afailed database connection will be retried. Min=0, Max=32767, Default=2\n\n\n\nuint BusyDbConnectionRetryInterval: Interval, innumber of milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25\n\n\n\nuint LocalConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are local. A value of 0 disables thefeature. Min=0, Max=128, Default=4\n\n\n\nuint RemoteConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are remote. A value of 0 disables thefeature. Min=0, Max=128, Default=4\n\n\n\nstring RamDiskIpAddress: IP address to use fortransferring the RAM Disk. When equal to 0.0.0.0 the server IP is used with thefirst part replaced with 233. Default=0.0.0.0\n\n\n\nuint RamDiskTimeToLive: Time to live for theinvitation packet sent to Devices. Min=1, Max=255, Default=1\n\n\n\nbool RamDiskInvitationType: Either false for Fixed,or true for Variable. Default=false\n\n\n\nuint RamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10\n\n\n\nuint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=4\n\n\n\nuint LogFileSizeMax: Maximum size log files canreach in Megabytes. Min=1, Max=50, Default=5\n\n\n\nuint LogFileBackupCopiesMax: Maximum number of logfile backups. Min=1, Max=50, Default=4\n\n\n\nfloat PowerRating: A strictly relative rating ofthis Server's capabilities when compared to other Servers in the Store(s) itbelongs too; can be used to help tune load balancing. Min=0.1, Max=1000,Default=1\n\n\n\nDateTime LastCeipUploadAttempt: Time that this serverlast attempted a CEIP upload. Default=Empty\n\n\n\nDateTime LastBugReportAttempt: Time that this serverlast attempted to upload or generate a bug report bundle. Default=Empty\n\n\n\nstring LastBugReportStatus: Status of the last bugreport on this server. Default=\"\" Max Length=250\n\n\n\nstring LastBugReportResult: Status of the last bugreport on this server. Default=\"\" Max Length=4000\n\n\n\nstring LastBugReportSummary: Summary of the last bugreport on this server. Default=\"\" Max Length=250\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsServer object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to have confirmationwithout the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsServer for Individual Fields\n\n\nGet the PvsServer into a $o variable. Change the $ofield values and then Set the PvsServer with the result.\n\n\n\n$o = Get-PvsServer -Name theServer -FieldsLicenseTimeout, ThreadsPerPort\n\n\n\n$o.LicenseTimeout = 60\n\n\n\n$o.ThreadsPerPort = 10\n\n\n\nSet-PvsServer $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsServer for a Field Using Pipe\n\n\nGet the PvsServer into a $o variable. Change a $ofield to the correct value and then Set the PvsServer with the result.\n\n\n\nGet-PvsServer -Name theServer -Fields LicenseTimeout| foreach { $o = $_; $o.LicenseTimeout = 60; $o } | Set-PvsServer\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsServerBiosBootstrap\n\n\nOem Only: Set Server Bios Bootstrap(s) changedvalues from PvsServerBiosBootstrap object(s), or set one or more field valuesfor a PvsServerBiosBootstrap.\n\n\n\nRequired\n\n\n\nPvsServerBiosBootstrap ServerBiosBootstrap:PvsServerBiosBootstrap object(s) with changed property value(s) to be set. Theobject(s) can come from a pileline.\n\n\n\nThese values are in the PvsServerBiosBootstrapobject, and only will be set if the value has changed.\n\n\n\nbool Enabled: Automatically update the BIOS on thetarget device with these setting when set to true, otherwise do not use thesesettings. Default=false\n\n\n\nbool DhcpEnabled: Use DHCP to retrieve target deviceIP when set to true, otherwise use the static domain, dnsIpAddresstrue anddnsIpAddress2 settings. Default=true\n\n\n\nbool Lookup: Use DNS to find the Server when set totrue with the ServerName host value, otherwise use the bootservertrue_Ip,bootservertrue_Port, bootserver2_Ip, bootserver2_Port, bootserver3_Ip,bootserver3_Port, bootserver4_Ip, and bootserver4_Port settings. Default=true\n\n\n\nbool VerboseMode: Display verbose diagnosticinformation when set to true. Default=false\n\n\n\nbool InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false\n\n\n\nbool PaeMode: PAE mode (use if PAE enabled inboot.ini of target device) when set to true. Default=false\n\n\n\nbool BootFromHdOnFail: For network recovery rebootto hard drive when set to true, restore network connection when set to false.Default=false\n\n\n\nuint RecoveryTime: When bootFromHdOnFail is 1, thisis the number of seconds to wait before reboot to hard drive. Min=10,Max=60000, Default=50\n\n\n\nuint PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nuint GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nstring Name or ServerName: Host to use for DNSlookup. Only used when Lookup is true. Default=IMAGESERVER1\n\n\n\nstring Bootserver1_Ip: 1st boot server IP. Only usedwhen Lookup is false.\n\n\n\nuint Bootserver1_Port: 1st boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nstring Bootserver2_Ip: 2nd boot server IP. Only usedwhen Lookup is false. Default=0.0.0.0\n\n\n\nuint Bootserver2_Port: 2nd boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nstring Bootserver3_Ip: 3rd boot server IP. Only usedwhen Lookup is false. Default=0.0.0.0\n\n\n\nuint Bootserver3_Port: 3rd boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nstring Bootserver4_Ip: 4th boot server IP. Only usedwhen Lookup is false. Default=0.0.0.0\n\n\n\nuint Bootserver4_Port: 4th boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nstring Domain: Domain of the primary and secondaryDNS servers. Only used when DhcpEnabled is false.\n\n\n\nstring DnsIpAddress1: Primary DNS server IP. Onlyused when DhcpEnabled is false.\n\n\n\nstring DnsIpAddress2: Secondary DNS server IP. Onlyused when DhcpEnabled is false.\n\n\n\n\n\n\nWhen ServerBiosBootstrap is not passed, theparameters below are used:\n\n\n\nOne of these required\n\n\n\nGuid Guid or ServerId: GUID of the Server to Set thedell_bios.bin BIOS bootstrap file.\n\n\n\nstring Name or ServerName: Name of the Server to Setthe dell_bios.bin BIOS bootstrap file.\n\n\n\nOptional field values to set:\n\n\n\nbool Enabled: Automatically update the BIOS on thetarget device with these setting when set to true, otherwise do not use thesesettings. Default=false\n\n\n\nbool DhcpEnabled: Use DHCP to retrieve target deviceIP when set to true, otherwise use the static domain, dnsIpAddresstrue anddnsIpAddress2 settings. Default=true\n\n\n\nbool Lookup: Use DNS to find the Server when set totrue with the ServerName host value, otherwise use the bootservertrue_Ip,bootservertrue_Port, bootserver2_Ip, bootserver2_Port, bootserver3_Ip,bootserver3_Port, bootserver4_Ip, and bootserver4_Port settings. Default=true\n\n\n\nbool VerboseMode: Display verbose diagnosticinformation when set to true. Default=false\n\n\n\nbool InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false\n\n\n\nbool PaeMode: PAE mode (use if PAE enabled inboot.ini of target device) when set to true. Default=false\n\n\n\nbool BootFromHdOnFail: For network recovery rebootto hard drive when set to true, restore network connection when set to false.Default=false\n\n\n\nuint RecoveryTime: When bootFromHdOnFail is 1, thisis the number of seconds to wait before reboot to hard drive. Min=10,Max=60000, Default=50\n\n\n\nuint PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nuint GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nstring NewName: Host to use for DNS lookup. Onlyused when Lookup is true. Default=IMAGESERVER1\n\n\n\nstring Bootserver1_Ip: 1st boot server IP. Only usedwhen Lookup is false.\n\n\n\nuint Bootserver1_Port: 1st boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nstring Bootserver2_Ip: 2nd boot server IP. Only usedwhen Lookup is false. Default=0.0.0.0\n\n\n\nuint Bootserver2_Port: 2nd boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nstring Bootserver3_Ip: 3rd boot server IP. Only usedwhen Lookup is false. Default=0.0.0.0\n\n\n\nuint Bootserver3_Port: 3rd boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nstring Bootserver4_Ip: 4th boot server IP. Only usedwhen Lookup is false. Default=0.0.0.0\n\n\n\nuint Bootserver4_Port: 4th boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910\n\n\n\nstring Domain: Domain of the primary and secondaryDNS servers. Only used when DhcpEnabled is false.\n\n\n\nstring DnsIpAddress1: Primary DNS server IP. Onlyused when DhcpEnabled is false.\n\n\n\nstring DnsIpAddress2: Secondary DNS server IP. Onlyused when DhcpEnabled is false.\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsServerBiosBootstrap object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsServerBiosBootstrap for Individual Fields\n\n\nGet the PvsServerBiosBootstrap into a $o variable.Change the $o field values and then Set the PvsServerBiosBootstrap with theresult.\n\n\n\n$o = Get-PvsServerBiosBootstrap -Name theServer-Fields DhcpEnabled\n\n\n\n$o.DhcpEnabled = $true\n\n\n\nSet-PvsServerBiosBootstrap $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsServerBiosBootstrap for a Field Using Pipe\n\n\nGet the PvsServerBiosBootstrap into a $o variable.Change a $o field to the correct value and then Set the PvsServerBiosBootstrapwith the result.\n\n\n\nGet-PvsServerBiosBootstrap -Name theServer -FieldsDhcpEnabled | foreach { $o = $_; $o.DhcpEnabled = $true; $o } |Set-PvsServerBiosBootstrap\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsServerBootstrap\n\n\nSet Server Bootstrap(s) changed values fromPvsServerBootstrap object(s), or set one or more field values for aPvsServerBootstarp.\n\n\n\nRequired\n\n\n\nPvsServerBootstrap ServerBootstrap:PvsServerBootstrap object(s) with changed property value(s) to be set. Theobject(s) can come from a pileline.\n\n\n\nThese values are in the PvsServerBootstrap object,and only will be set if the value has changed.\n\n\n\nstring Bootserver1_Ip: 1st boot server IP.\n\n\n\nstring Bootserver1_Netmask: 1st boot server netmask.Default=0.0.0.0\n\n\n\nstring Bootserver1_Gateway: 1st boot server gateway.Default=0.0.0.0\n\n\n\nuint Bootserver1_Port: 1st boot server port.Min=1025, Max=65536, Default=6910\n\n\n\nstring Bootserver2_Ip: 2nd boot server IP.Default=0.0.0.0\n\n\n\nstring Bootserver2_Netmask: 2nd boot server netmask.Default=0.0.0.0\n\n\n\nstring Bootserver2_Gateway: 2nd boot server gateway.Default=0.0.0.0\n\n\n\nuint Bootserver2_Port: 2nd boot server port.Min=1025, Max=65536, Default=6910\n\n\n\nstring Bootserver3_Ip: 3rd boot server IP.Default=0.0.0.0\n\n\n\nstring Bootserver3_Netmask: 3rd boot server netmask.Default=0.0.0.0\n\n\n\nstring Bootserver3_Gateway: 3rd boot server gateway.Default=0.0.0.0\n\n\n\nuint Bootserver3_Port: 3rd boot server port. Min=1025,Max=65536, Default=6910\n\n\n\nstring Bootserver4_Ip: 4th boot server IP.Default=0.0.0.0\n\n\n\nstring Bootserver4_Netmask: 4th boot server netmask.Default=0.0.0.0\n\n\n\nstring Bootserver4_Gateway: 4th boot server gateway.Default=0.0.0.0\n\n\n\nuint Bootserver4_Port: 4th boot server port.Min=1025, Max=65536, Default=6910\n\n\n\nbool VerboseMode: Display verbose diagnosticinformation when set to true. Default=false\n\n\n\nbool InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false\n\n\n\nbool PaeMode: PAE mode (use if PAE enabled inboot.ini of target device) when set to true. Default=false\n\n\n\nbool BootFromHdOnFail: For network recovery rebootto hard drive when set to true, restore network connection when set to false.Default=false\n\n\n\nuint RecoveryTime: When bootFromHdOnFail is 1, thisis the number of seconds to wait before reboot to hard drive. Min=10,Max=60000, Default=50\n\n\n\nuint PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nuint GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\n\n\n\nWhen ServerBootstrap is not passed, the parametersbelow are used:\n\n\n\nOne of these required\n\n\n\nGuid Guid or ServerId: GUID of the Server to Set thenamed bootstrap file on.\n\n\n\nstring ServerName: Name of the Server to Set thenamed bootstrap file on.\n\n\n\nThis required\n\n\n\nstring Name: Name of the bootstrap file.\n\n\n\nOptional field values to set:\n\n\n\nstring Bootserver1_Ip: 1st boot server IP.\n\n\n\nstring Bootserver1_Netmask: 1st boot server netmask.Default=0.0.0.0\n\n\n\nstring Bootserver1_Gateway: 1st boot server gateway.Default=0.0.0.0\n\n\n\nuint Bootserver1_Port: 1st boot server port.Min=1025, Max=65536, Default=6910\n\n\n\nstring Bootserver2_Ip: 2nd boot server IP.Default=0.0.0.0\n\n\n\nstring Bootserver2_Netmask: 2nd boot server netmask.Default=0.0.0.0\n\n\n\nstring Bootserver2_Gateway: 2nd boot server gateway.Default=0.0.0.0\n\n\n\nuint Bootserver2_Port: 2nd boot server port.Min=1025, Max=65536, Default=6910\n\n\n\nstring Bootserver3_Ip: 3rd boot server IP.Default=0.0.0.0\n\n\n\nstring Bootserver3_Netmask: 3rd boot server netmask.Default=0.0.0.0\n\n\n\nstring Bootserver3_Gateway: 3rd boot server gateway.Default=0.0.0.0\n\n\n\nuint Bootserver3_Port: 3rd boot server port.Min=1025, Max=65536, Default=6910\n\n\n\nstring Bootserver4_Ip: 4th boot server IP.Default=0.0.0.0\n\n\n\nstring Bootserver4_Netmask: 4th boot server netmask.Default=0.0.0.0\n\n\n\nstring Bootserver4_Gateway: 4th boot server gateway.Default=0.0.0.0\n\n\n\nuint Bootserver4_Port: 4th boot server port.Min=1025, Max=65536, Default=6910\n\n\n\nbool VerboseMode: Display verbose diagnosticinformation when set to true. Default=false\n\n\n\nbool InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false\n\n\n\nbool PaeMode: PAE mode (use if PAE enabled inboot.ini of target device) when set to true. Default=false\n\n\n\nbool BootFromHdOnFail: For network recovery rebootto hard drive when set to true, restore network connection when set to false.Default=false\n\n\n\nuint RecoveryTime: When bootFromHdOnFail is 1, thisis the number of seconds to wait before reboot to hard drive. Min=10,Max=60000, Default=50\n\n\n\nuint PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\nuint GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsServerBootstrap object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsServerBootstrap for Individual Fields\n\n\nGet the PvsServerBootstrap into a $o variable.Change the $o field values and then Set the PvsServerBootstrap with the result.\n\n\n\n$o = Get-PvsServerBootstrap -Name theBootstrapFile-ServerName theServer -Fields VerboseMode\n\n\n\n$o.VerboseMode = $true\n\n\n\nSet-PvsServerBootstrap $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsServerBootstrap for a Field Using Pipe\n\n\nGet the PvsServerBootstrap into a $o variable.Change a $o field to the correct value and then Set the PvsServerBootstrap withthe result.\n\n\n\nGet-PvsServerBootstrap -Name theBootstrapFile-ServerName theServer -Fields VerboseMode | foreach { $o = $_; $o.VerboseMode =$true; $o } | Set-PvsServerBootstrap\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsServerStore\n\n\nSet ServerStore(s) changed values fromPvsServerStore object(s), or set one or more field values for a PvsServerStore.\n\n\n\nRequired\n\n\n\nPvsServerStore ServerStore: PvsServerStore object(s)with changed property value(s) to be set. The object(s) can come from apileline.\n\n\n\nThese values are in the PvsServerStore object, andonly will be set if the value has changed.\n\n\n\nstring Path: Directory path that the Server uses toaccess the Store. Default=\"\" Max Length=255\n\n\n\nstring[] CachePath: Cache path(s) that the Serveruses with the Store. If none are specified the caches will be placed in theStore cachePath. Default=None\n\n\n\n\n\n\nWhen ServerStore is not passed, the parameters beloware used:\n\n\n\nOne of these required\n\n\n\nGuid Guid or ServerId: GUID of a Server that usesthe path to get to the Store.\n\n\n\nstring Name or ServerName: Name of a Server thatuses the path to get to the Store.\n\n\n\nOne of these required\n\n\n\nGuid StoreId: GUID of the Store.\n\n\n\nstring StoreName: Name of the Store.\n\n\n\nOptional field values to set:\n\n\n\nstring Path: Directory path that the Server uses toaccess the Store. Default=\"\" Max Length=255\n\n\n\nstring[] CachePath: Cache path(s) that the Serveruses with the Store. If none are specified the caches will be placed in theStore cachePath. Default=None\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsServerStore object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsServerStore for Individual Fields\n\n\nGet the PvsServerStore into a $o variable. Changethe $o field values and then Set the PvsServerStore with the result.\n\n\n\n$o = Get-PvsServerStore -ServerName theServer-StoreName theStore -Fields CachePath\n\n\n\n$o.CachePath = \"\\\\Network\\CachePath\"\n\n\n\nSet-PvsServerStore $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsServerStore for a Field Using Pipe\n\n\nGet the PvsServerStore into a $o variable. Change a$o field to the correct value and then Set the PvsServerStore with the result.\n\n\n\nGet-PvsServerStore -ServerName theServer -StoreNametheStore -Fields CachePath | foreach { $o = $_; $o.CachePath =\"\\\\Network\\CachePath\"; $o } | Set-PvsServerStore\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsSite\n\n\nSet Site(s) changed values from PvsSite object(s),or set one or more field values for a PvsSite.\n\n\n\nRequired\n\n\n\nPvsSite Site: PvsSite object(s) with changedproperty value(s) to be set. The object(s) can come from a pileline.\n\n\n\nThese values are in the PvsSite object, and onlywill be set if the value has changed.\n\n\n\nstring Name or SiteName: Name of the Site. MaxLength=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nGuid DefaultCollectionId: GUID of the Collection toplace new Devices into automatically. Not used with defaultCollectionName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring DefaultCollectionName: Name of the Collectionto place new Devices into automatically. Not used with DefaultCollectionId.Default=\"\"\n\n\n\nuint InventoryFilePollingInterval: The number ofseconds between polls for Disk changes in the Stores. Min=1, Max=600,Default=60\n\n\n\nbool EnableDiskUpdate: True when Disk Updated isenabled for the Site, false otherwise. Default=false\n\n\n\nGuid DiskUpdateServerId: GUID of the Disk UpdateServer for the Site. Not used with DiskUpdateServerName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring DiskUpdateServerName: Name of the Disk UpdateServer for the Site. Not used with DiskUpdateServerId. Default=\"\"\n\n\n\nstring MakUser: User name used for MAK activation.Default=\"\" Max Length=64\n\n\n\nstring MakPassword: User password used for MAKactivation. Default=\"\" Max Length=64\n\n\n\n\n\n\nWhen Site is not passed, the parameters below areused:\n\n\n\nOne of these required\n\n\n\nGuid Guid or SiteId: GUID of the Site to Set.\n\n\n\nstring Name or SiteName: Name of the Site to Set.\n\n\n\nOptional field values to set:\n\n\n\nstring NewName: Name of the Site. Max Length=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nGuid DefaultCollectionId: GUID of the Collection toplace new Devices into automatically. Not used with defaultCollectionName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring DefaultCollectionName: Name of the Collectionto place new Devices into automatically. Not used with DefaultCollectionId.Default=\"\"\n\n\n\nuint InventoryFilePollingInterval: The number ofseconds between polls for Disk changes in the Stores. Min=1, Max=600,Default=60\n\n\n\nbool EnableDiskUpdate: True when Disk Updated isenabled for the Site, false otherwise. Default=false\n\n\n\nGuid DiskUpdateServerId: GUID of the Disk UpdateServer for the Site. Not used with DiskUpdateServerName.Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring DiskUpdateServerName: Name of the Disk UpdateServer for the Site. Not used with DiskUpdateServerId. Default=\"\"\n\n\n\nstring MakUser: User name used for MAK activation.Default=\"\" Max Length=64\n\n\n\nstring MakPassword: User password used for MAKactivation. Default=\"\" Max Length=64\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsSite object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsSite for Individual Fields\n\n\nGet the PvsSite into a $o variable. Change the $ofield values and then Set the PvsSite with the result.\n\n\n\n$o = Get-PvsSite -Name theSite -FieldsInventoryFilePollingInterval\n\n\n\n$o.InventoryFilePollingInterval = 120\n\n\n\nSet-PvsSite $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsSite for a Field Using Pipe\n\n\nGet the PvsSite into a $o variable. Change a $ofield to the correct value and then Set the PvsSite with the result.\n\n\n\nGet-PvsSite -Name theSite -FieldsInventoryFilePollingInterval | foreach { $o = $_;$o.InventoryFilePollingInterval = 120; $o } | Set-PvsSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsSiteView\n\n\nSet Site View(s) changed values from PvsSiteViewobject(s), or set one or more field values for a PvsSiteView.\n\n\n\nRequired\n\n\n\nPvsSiteView SiteView: PvsSiteView object(s) withchanged property value(s) to be set. The object(s) can come from a pileline.\n\n\n\nThese values are in the PvsSiteView object, and onlywill be set if the value has changed.\n\n\n\nstring Name or SiteViewName: Name of the Site View.Max Length=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\n\n\n\nWhen SiteView is not passed, the parameters beloware used:\n\n\n\nThis required\n\n\n\nGuid Guid or SiteViewId: GUID of the Site View toSet.\n\n\n\nor this required ; resolution\n\n\n\nstring Name or SiteViewName: Name of the Site Viewto Set.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOptional field values to set:\n\n\n\nstring NewName: Name of the Site View. Max Length=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsSiteView object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsSiteView for Individual Fields\n\n\nGet the PvsSiteView into a $o variable. Change the$o field values and then Set the PvsSiteView with the result.\n\n\n\n$o = Get-PvsSiteView -Name oldSiteView -SiteNametheSite -Fields Name\n\n\n\n$o.Name = \"newSiteView\"\n\n\n\nSet-PvsSiteView $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Set PvsSiteView for a Field Using Pipe\n\n\nGet the PvsSiteView into a $o variable. Change a $ofield to the correct value and then Set the PvsSiteView with the result.\n\n\n\nGet-PvsSiteView -Name oldSiteView -SiteName theSite-Fields Name | foreach { $o = $_; $o.Name = \"newSiteView\"; $o } |Set-PvsSiteView\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsStore\n\n\nSet Store(s) changed values from PvsStore object(s),or set one or more field values for a PvsStore.\n\n\n\nRequired\n\n\n\nPvsStore Store: PvsStore object(s) with changedproperty value(s) to be set. The object(s) can come from a pileline.\n\n\n\nThese values are in the PvsStore object, and onlywill be set if the value has changed.\n\n\n\nstring Name or StoreName: Name of the Store. MaxLength=50\n\n\n\nGuid SiteId: GUID of the Site where Administratorsof that Site can change this Store. Not used for Farm Stores. SiteName can beused instead. Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring SiteName: Name of the Site whereAdministrators of that Site can change this Store. Not used for Farm Stores.SiteId can be used instead. Default=\"\"\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring Path: Default directory path that the Serversuse to access this Store. Max Length=255\n\n\n\nstring[] CachePath: Default Cache path(s) that theServers use with this Store. If none are specified the caches will be placed inthe WriteCache subdirectory of the Store path. Default=None\n\n\n\n\n\n\nWhen Store is not passed, the parameters below areused:\n\n\n\nOne of these required\n\n\n\nGuid Guid or StoreId: GUID of the Store to Set.\n\n\n\nstring Name or StoreName: Name of the Store to Set.\n\n\n\nOptional field values to set:\n\n\n\nstring NewName: Name of the Store. Max Length=50\n\n\n\nGuid SiteId: GUID of the Site where Administratorsof that Site can change this Store. Not used for Farm Stores. SiteName can beused instead. Default=00000000-0000-0000-0000-000000000000\n\n\n\nstring SiteName: Name of the Site whereAdministrators of that Site can change this Store. Not used for Farm Stores.SiteId can be used instead. Default=\"\"\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring Path: Default directory path that the Serversuse to access this Store. Max Length=255\n\n\n\nstring[] CachePath: Default Cache path(s) that theServers use with this Store. If none are specified the caches will be placed inthe WriteCache subdirectory of the Store path. Default=None\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsStore object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsStore for Individual Fields\n\n\nGet the PvsStore into a $o variable. Change the $ofield values and then Set the PvsStore with the result.\n\n\n\n$o = Get-PvsStore -Name theStore -Fields CachePath\n\n\n\n$o.CachePath = \"\\\\Network\\CachePath\"\n\n\n\nSet-PvsStore $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsStore for a Field Using Pipe\n\n\nGet the PvsStore into a $o variable. Change a $ofield to the correct value and then Set the PvsStore with the result.\n\n\n\nGet-PvsStore -Name theStore -Fields CachePath |foreach { $o = $_; $o.CachePath = \"\\\\Network\\CachePath\"; $o } |Set-PvsStore\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsUpdateTask\n\n\nSet Update Task(s) changed values from PvsUpdateTaskobject(s), or set one or more field values for a PvsUpdateTask.\n\n\n\nRequired\n\n\n\nPvsUpdateTask UpdateTask: PvsUpdateTask object(s)with changed property value(s) to be set. The object(s) can come from apileline.\n\n\n\nThese values are in the PvsUpdateTask object, andonly will be set if the value has changed.\n\n\n\nstring Name or UpdateTaskName: Name of the UpdateTask. It is unique within the Site. Max Length=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nbool Enabled: True when it will be processed, falseotherwise. Default=true\n\n\n\nuint Hour: The hour of the day to perform the task.Min=0, Max=23, Default=0\n\n\n\nuint Minute: The minute of the hour to perform thetask. Min=0, Max=59, Default=0\n\n\n\nuint Recurrence: The update will reoccur on thisschedule. 0 = None, 1 = Daily, 2 = Every Weekday, 3 = Weekly, 4 = Monthly Date,5 = Monthly Type. Min=0, Max=5, Default=0\n\n\n\nuint DayMask: Days selected values. 1 = Monday, 2 =Tuesday, 4 = Wednesday, 8 = Thursday, 16 = Friday, 32 = Saturday, 64 = Sunday,128 = Day. Default=0. This is used with Weekly and Monthly Type recurrence.Min=1, Max=255, Default=4\n\n\n\nuint[] Date: Days of the month. Numbers from 1-31are the only valid values. This is used with Monthly Date recurrence.Default=\"\" Max Length=83\n\n\n\nuint MonthlyOffset: When to happen monthly. 0 =None, 1 = First, 2 = Second, 3 = Third, 4 = Forth, 5 = Last. This is used withMonthly Type recurrence. Min=0, Max=5, Default=3\n\n\n\nstring EsdType: Esd to use. Valid values are SCCM orWSUS. If no value, a custom script is run on the client. Default=\"\"Max Length=50\n\n\n\nstring PreUpdateScript: Script file to run beforethe update starts. Default=\"\" Max Length=255\n\n\n\nstring PreVmScript: Script file to run before the VMis loaded. Default=\"\" Max Length=255\n\n\n\nstring PostUpdateScript: Script file to run afterthe update finishes. Default=\"\" Max Length=255\n\n\n\nstring PostVmScript: Script file to run after the VMis unloaded. Default=\"\" Max Length=255\n\n\n\nstring Domain: Domain to add the Disk UpdateDevice(s) to. If not included, the first Domain Controller found on the Serveris used. Default=\"\" Max Length=255\n\n\n\nstring OrganizationUnit: Organizational Unit to addthe Disk Update Device(s) to. This parameter is optional. If it is notspecified, the device is added to the built in Computers container. Child OU'sshould be delimited with forward slashes, e.g. \"ParentOU/ChildOU\".Special characters in an OU name, such as '\"', '#', '+', ',', ';', '>','=', must be escaped with a backslash. For example, an OU called\"commaIn,TheMiddle\" must be specified as \"commaIn\\,TheMiddle\".The old syntax of delimiting child OU's with a comma is still supported, butdeprecated. Note that in this case, the child OU comes first, e.g.\"ChildOU,ParentOU\". Default=\"\" Max Length=255\n\n\n\nuint PostUpdateApprove: Access to place the versionin after the update has occurred. 0 = Production, 1 = Test, 2 = Maintenance.Min=0, Max=2, Default=0\n\n\n\n\n\n\nWhen UpdateTask is not passed, the parameters beloware used:\n\n\n\nThis required\n\n\n\nGuid Guid or UpdateTaskId: GUID of the Update Taskto Set.\n\n\n\nor this required ; resolution\n\n\n\nstring Name or UpdateTaskName: Name of the UpdateTask to Set.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOptional field values to set:\n\n\n\nstring NewName: Name of the Update Task. It isunique within the Site. Max Length=50\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nbool Enabled: True when it will be processed, falseotherwise. Default=true\n\n\n\nuint Hour: The hour of the day to perform the task.Min=0, Max=23, Default=0\n\n\n\nuint Minute: The minute of the hour to perform thetask. Min=0, Max=59, Default=0\n\n\n\nuint Recurrence: The update will reoccur on thisschedule. 0 = None, 1 = Daily, 2 = Every Weekday, 3 = Weekly, 4 = Monthly Date,5 = Monthly Type. Min=0, Max=5, Default=0\n\n\n\nuint DayMask: Days selected values. 1 = Monday, 2 =Tuesday, 4 = Wednesday, 8 = Thursday, 16 = Friday, 32 = Saturday, 64 = Sunday,128 = Day. Default=0. This is used with Weekly and Monthly Type recurrence.Min=1, Max=255, Default=4\n\n\n\nuint[] Date: Days of the month. Numbers from 1-31are the only valid values. This is used with Monthly Date recurrence.Default=\"\" Max Length=83\n\n\n\nuint MonthlyOffset: When to happen monthly. 0 =None, 1 = First, 2 = Second, 3 = Third, 4 = Forth, 5 = Last. This is used withMonthly Type recurrence. Min=0, Max=5, Default=3\n\n\n\nstring EsdType: Esd to use. Valid values are SCCM orWSUS. If no value, a custom script is run on the client. Default=\"\"Max Length=50\n\n\n\nstring PreUpdateScript: Script file to run beforethe update starts. Default=\"\" Max Length=255\n\n\n\nstring PreVmScript: Script file to run before the VMis loaded. Default=\"\" Max Length=255\n\n\n\nstring PostUpdateScript: Script file to run afterthe update finishes. Default=\"\" Max Length=255\n\n\n\nstring PostVmScript: Script file to run after the VMis unloaded. Default=\"\" Max Length=255\n\n\n\nstring Domain: Domain to add the Disk UpdateDevice(s) to. If not included, the first Domain Controller found on the Serveris used. Default=\"\" Max Length=255\n\n\n\nstring OrganizationUnit: Organizational Unit to addthe Disk Update Device(s) to. This parameter is optional. If it is notspecified, the device is added to the built in Computers container. Child OU'sshould be delimited with forward slashes, e.g. \"ParentOU/ChildOU\".Special characters in an OU name, such as '\"', '#', '+', ',', ';', '>','=', must be escaped with a backslash. For example, an OU called\"commaIn,TheMiddle\" must be specified as\"commaIn\\,TheMiddle\". The old syntax of delimiting child OU's with acomma is still supported, but deprecated. Note that in this case, the child OUcomes first, e.g. \"ChildOU,ParentOU\". Default=\"\" MaxLength=255\n\n\n\nuint PostUpdateApprove: Access to place the versionin after the update has occurred. 0 = Production, 1 = Test, 2 = Maintenance.Min=0, Max=2, Default=0\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsUpdateTask object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsUpdateTask for Individual Fields\n\n\nGet the PvsUpdateTask into a $o variable. Change the$o field values and then Set the PvsUpdateTask with the result.\n\n\n\n$o = Get-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Fields Date, Recurrence\n\n\n\n$o.Date = 1, 15\n\n\n\n$o.Recurrence = 4\n\n\n\nSet-PvsUpdateTask $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Set PvsUpdateTask for a Field Using Pipe\n\n\nGet the PvsUpdateTask into a $o variable. Change a$o field to the correct value and then Set the PvsUpdateTask with the result.\n\n\n\nGet-PvsUpdateTask -Name theUpdateTask -SiteName theSite-Fields Recurrence | foreach { $o = $_; $o.Recurrence = 1; $o } |Set-PvsUpdateTask\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsVirtualHostingPool\n\n\nSet Virtual Hosting Pool(s) changed values fromPvsVirtualHostingPool object(s), or set one or more field values for a PvsVirtualHostingPool.\n\n\n\nRequired\n\n\n\nPvsVirtualHostingPool VirtualHostingPool:PvsVirtualHostingPool object(s) with changed property value(s) to be set. Theobject(s) can come from a pileline.\n\n\n\nThese values are in the PvsVirtualHostingPoolobject, and only will be set if the value has changed.\n\n\n\nstring Name or VirtualHostingPoolName: Name of theVirtual Hosting Pool. It is unique within the Site. Max Length=50\n\n\n\nuint Type: Type of the Virtual Hosting Pool. 0 =Citrix XenServer, 1 = Microsoft SCVMM/Hyper-V, 2 = VMWare vSphere/ESX. Min=0,Max=2, Default=0\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring Server: Name or IP of the Host Server. MaxLength=255\n\n\n\nuint Port: Port of the Host Server. Min=80,Max=65534, Default=80\n\n\n\nstring Datacenter: Datacenter of the Virtual HostingPool. Default=\"\" Max Length=250\n\n\n\nuint UpdateLimit: Number of updates at the sametime. Min=2, Max=1000, Default=1000\n\n\n\nuint UpdateTimeout: Timeout for updates. Min=2,Max=240, Default=60\n\n\n\nuint ShutdownTimeout: Timeout for shutdown. Min=2,Max=30, Default=10\n\n\n\nstring UserName: Name to use when logging into theServer.\n\n\n\nstring Password: Password to use when logging intothe Server.\n\n\n\nGuid XdHostingUnitUuid: UUID of XenDesktop HostingUnit Default=00000000-0000-0000-0000-000000000000\n\n\n\nbool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false\n\n\n\nbool PrepopulateEnabled: Enable prepopulate when setto true Default=false\n\n\n\nGuid XsPvsSiteUuid: UUID of XenServerPVS_site  Default=00000000-0000-0000-0000-000000000000\n\n\n\n\n\n\nWhen VirtualHostingPool is not passed, theparameters below are used:\n\n\n\nThis required\n\n\n\nGuid Guid or VirtualHostingPoolId: GUID of theVirtual Hosting Pool to Set.\n\n\n\nor this required ; resolution\n\n\n\nstring Name or VirtualHostingPoolName: Name of theVirtual Hosting Pool to Set.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOptional field values to set:\n\n\n\nstring NewName: Name of the Virtual Hosting Pool. Itis unique within the Site. Max Length=50\n\n\n\nuint Type: Type of the Virtual Hosting Pool. 0 =Citrix XenServer, 1 = Microsoft SCVMM/Hyper-V, 2 = VMWare vSphere/ESX. Min=0,Max=2, Default=0\n\n\n\nstring Description: User description.Default=\"\" Max Length=250\n\n\n\nstring Server: Name or IP of the Host Server. MaxLength=255\n\n\n\nuint Port: Port of the Host Server. Min=80,Max=65534, Default=80\n\n\n\nstring Datacenter: Datacenter of the Virtual HostingPool. Default=\"\" Max Length=250\n\n\n\nuint UpdateLimit: Number of updates at the sametime. Min=2, Max=1000, Default=1000\n\n\n\nuint UpdateTimeout: Timeout for updates. Min=2,Max=240, Default=60\n\n\n\nuint ShutdownTimeout: Timeout for shutdown. Min=2,Max=30, Default=10\n\n\n\nstring UserName: Name to use when logging into theServer.\n\n\n\nstring Password: Password to use when logging intothe Server.\n\n\n\nGuid XdHostingUnitUuid: UUID of XenDesktop HostingUnit Default=00000000-0000-0000-0000-000000000000\n\n\n\nbool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false\n\n\n\nbool PrepopulateEnabled: Enable prepopulate when setto true Default=false\n\n\n\nGuid XsPvsSiteUuid: UUID of XenServerPVS_site  Default=00000000-0000-0000-0000-000000000000\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsVirtualHostingPool object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsVirtualHostingPool for Individual Fields\n\n\nGet the PvsVirtualHostingPool into a $o variable.Change the $o field values and then Set the PvsVirtualHostingPool with theresult.\n\n\n\n$o = Get-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite -Fields Port\n\n\n\n$o.Port = 180\n\n\n\nSet-PvsVirtualHostingPool $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Set PvsVirtualHostingPool for a Field Using Pipe\n\n\nGet the PvsVirtualHostingPool into a $o variable.Change a $o field to the correct value and then Set the PvsVirtualHostingPoolwith the result.\n\n\n\nGet-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite -Fields Port | foreach { $o = $_;$o.Port = 180; $o } | Set-PvsVirtualHostingPool\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nSet-PvsXDSite\n\n\nSet XDSite(s) changed values from PvsXDSiteobject(s), or set one or more field values for a PvsXDSite.\n\n\n\nRequired\n\n\n\nPvsXDSite XDSite: PvsXDSite object(s) with changedproperty value(s) to be set. The object(s) can come from a pileline.\n\n\n\nThese values are in the PvsXDSite object, and onlywill be set if the value has changed.\n\n\n\nstring[] ConfigServices: XenDesktop Serveraddresses. Max Length=2000\n\n\n\n\n\n\nWhen XDSite is not passed, the parameters below areused:\n\n\n\nThis required\n\n\n\nGuid Guid or XdSiteId: GUID of the XenDesktop Siteto Set.\n\n\n\nOptional field values to set:\n\n\n\nstring[] ConfigServices: XenDesktop Serveraddresses. Max Length=2000\n\n\n\n\n\n\nOptional\n\n\n\nSwitchParameter PassThru: If -PassThru is specified,the resulting PvsXDSite object(s) are returned.\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Set PvsXDSite for Individual Fields\n\n\nGet the PvsXDSite into a $o variable. Change the $ofield values and then Set the PvsXDSite with the result.\n\n\n\n$o = Get-PvsXDSite -Guid\"27965b92-7034-408c-9910-cfff53f1feec\" -Fields ConfigServices\n\n\n\n$o.ConfigServices = \"192.168.0.190\",\"192.168.0.191\"\n\n\n\nSet-PvsXDSite $o\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 2: Set PvsXDSite for a Field Using Pipe\n\n\nGet the PvsXDSite into a $o variable. Change a $ofield to the correct value and then Set the PvsXDSite with the result.\n\n\n\nGet-PvsXDSite -Guid\"27965b92-7034-408c-9910-cfff53f1feec\" -Fields ConfigServices |foreach { $o = $_; $o.ConfigServices = \"192.168.0.190\",\"192.168.0.191\"; $o } | Set-PvsXDSite\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nThe \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.\n\n\n\nStart-PvsAutoUpdate\n\n\nApply Auto Update for a Server or all Servers in aSite.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server to applyAuto Update.\n\n\n\nstring[] Name or ServerName: Name of the Server toapply Auto Update.\n\n\n\nGuid[] SiteId: GUID of the Site to apply Auto Updateon all Servers.\n\n\n\nstring[] SiteName: Name of the Site to apply AutoUpdate on all Servers.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId or SiteId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Start-PvsAutoUpdate for Name\n\n\nStart-PvsAutoUpdate -Name theServer\n\n\n\nEXAMPLE 2: Start-PvsAutoUpdate for PvsServer Using Pipe\n\n\nThe Get-PvsServer output is piped to theStart-PvsAutoUpdate.\n\n\n\nGet-PvsServer -Name theServer -Fields -ServerId |Start-PvsAutoUpdate\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Start-PvsAutoUpdate for SiteName\n\n\nStart-PvsAutoUpdate -SiteName theSite\n\n\n\nEXAMPLE 4: Start-PvsAutoUpdate for PvsSite Using Pipe\n\n\nThe Get-PvsSite output is piped to theStart-PvsAutoUpdate.\n\n\n\nGet-PvsSite -SiteName theSite -Fields -SiteId |Start-PvsAutoUpdate\n\n\n\nThe -Fields parameter with only the needed fields specifiedmakes the Get work faster because only those fields are retrieved.\n\n\n\nStart-PvsCreateDisk\n\n\nCreate a Disk and the Disk Locator for it. Returnsthe PvsDiskLocator created if finished. If not returned, then callCreateDiskStatus to get the PvsDiskLocator when processing finishes.\n\n\n\nThis required\n\n\n\nstring Name: Name of the Disk file to be created.\n\n\n\nThis required\n\n\n\nUInt64 Size: Size of the disk in Megabytes for afixed size disk. Maximum size in Megabytes for a dynamically sized disk. Min=1,VHD Max=2088960, VHDX Max=67108864\n\n\n\nOne of these required\n\n\n\nGuid StoreId: GUID of the Store that the Disk willbe a member of.\n\n\n\nstring StoreName: Name of the Store that the Diskwill be a member of.\n\n\n\nOne of these required\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOne of these optional\n\n\n\nGuid ServerId: GUID of the only Server for thisDisk.\n\n\n\nstring ServerName: Name of the only Server for thisDisk.\n\n\n\nOptional\n\n\n\nstring Description: Description of the Disk thatwill be placed in the Disk Locator.\n\n\n\nSwitchParameter CreateDiskDisabled: If-CreateDiskDisabled is specified, the Disk will be created disabled. It iscreated Enabled by default.\n\n\n\nSwitchParameter VHDX: If -VHDX is specified, VHDXwill be used for the format of the image. VHDX has a Block size of 32 MB. VHDis the default.\n\n\n\nSwitchParameter Dynamic: If -Dynamic is specified, adynamic VHD that will be created. The default is fixed.\n\n\n\nuint VhdBlockSize: Block size in KB. For VHD it isonly used with Dynamic type. Tested sizes for VHD are 512, 2048, and 16384. VHDMin=512, Max=16384, Default=2048. For VHDX it is used for all types. Testedsize for VHDX is 32768. VHDX Min=1024, Max= 262144, Default=32768.\n\n\n\nuint LogicalSectorSize: Only used with VHDX format.Logical Sector Size. Values are: 512, 4096, Default=512\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nStoreId, SiteId or ServerId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsDiskLocator: If the create is already finishedand successful, the PvsDiskLocator is returned.\n\n\n\nEXAMPLE 1: Start-PvsCreateDisk for VHDX to PvsDiskLocator\n\n\nThis example creates a Dynamic VHDX Disk that has asize of 20 GB.\n\n\n\n$thePvsDiskLocator = Start-PvsCreateDisk -NametheDiskName -Size 20480 -StoreName theStore -SiteName theSite -VHDX -Dynamic\n\n\n\nwhile ($thePvsDiskLocator -eq$null)                           #while the create is processing\n\n\n\n{\n\n\n\n%percentFinished = Get-PvsCreateDiskStatus -NametheDiskName -StoreName theStore  # get percent finished orDiskLocator when done\n\n\n\nif (%percentFinished.GetType().Name ==\"PvsDiskLocator\")\n\n\n\n{\n\n\n\n$thePvsDiskLocator = %percentFinished\n\n\n\n}\n\n\n\nelse\n\n\n\n{\n\n\n\n%percentFinished.ToString() + \"%finished\"                 #display percent finished\n\n\n\nStart-Sleep -seconds10                                    #wait 10 seconds more\n\n\n\n}\n\n\n\n}\n\n\n\n\"Successful\"\n\n\n\nEXAMPLE 2: Start-PvsCreateDisk for VHD to PvsDiskLocator\n\n\nTThis example creates a Fixed VHD Disk that has asize of 20 GB.\n\n\n\n$thePvsDiskLocator = Start-PvsCreateDisk -NametheDiskName -Size 20480 -StoreName theStore -SiteName theSite\n\n\n\nwhile ($thePvsDiskLocator -eq$null)                           #while the create is processing\n\n\n\n{\n\n\n\n%percentFinished = Get-PvsCreateDiskStatus -NametheDiskName -StoreName theStore  # get percent finished orDiskLocator when done\n\n\n\nif (%percentFinished.GetType().Name ==\"PvsDiskLocator\")\n\n\n\n{\n\n\n\n$thePvsDiskLocator = %percentFinished\n\n\n\n}\n\n\n\nelse\n\n\n\n{\n\n\n\n%percentFinished.ToString() + \"%finished\"                 #display percent finished\n\n\n\nStart-Sleep -seconds10                                    #wait 10 seconds more\n\n\n\n}\n\n\n\n}\n\n\n\n\"Successful\"\n\n\n\nStart-PvsDeviceBoot\n\n\nBoot a Device, Collection or View. Returns a PvsTaskof the Task being run. With the PvsTask, call Get-PvsTaskStatus to get thepercent complete, Get-PvsTask to get the results, and Stop-PvsTask to stop itearly. The PvsTask Results has the DeviceName/value of the devices thatsucceeded in the first name/value pair of each record of the XML.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device to Boot.\n\n\n\nstring[] Name or DeviceName: Name of the Device toBoot.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toBoot.\n\n\n\nGuid CollectionId: GUID of the Collection to Bootall Devices.\n\n\n\nGuid SiteViewId: GUID of the Site View to Boot allDevices.\n\n\n\nGuid FarmViewId: GUID of the Farm View to Boot allDevices.\n\n\n\nstring FarmViewName: Name of the Farm View to Bootall Devices.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring CollectionName: Name of the Collection toBoot all Devices.\n\n\n\nstring SiteViewName: Name of the Site View to Bootall Devices.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceName, CollectionId, SiteViewId or FarmViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsTask: If successful, the PvsTask object for theprocess started is returned.\n\n\n\nEXAMPLE 1: Start-PvsDeviceBoot for DeviceName to PvsTask\n\n\n$thePvsTask = Start-PvsDeviceBoot -DeviceNametheDevice              #start the task\n\n\n\nwhile ($thePvsTask.State -eq0)                                #while the task is processing\n\n\n\n{\n\n\n\n%percentFinished = Get-PvsTaskStatus -Object$thePvsTask   # get percent finished\n\n\n\n%percentFinished.ToString() + \"%finished\"                 #display percent finished\n\n\n\nStart-Sleep -seconds10                                    #wait 10 seconds more\n\n\n\n$thePvsTask = Get-PvsTask -Object$thePvsTask              #get the current PvsTask object\n\n\n\n}\n\n\n\nif ($thePvsTask.State -eq2)                                   #check to see if completed\n\n\n\n{\n\n\n\n\"Successful\"\n\n\n\n}\n\n\n\nelse\n\n\n\n{\n\n\n\n\"Cancelled\"\n\n\n\n}\n\n\n\nEXAMPLE 2: Start-PvsDeviceBoot for DeviceMac\n\n\nStart-PvsDeviceBoot -DeviceMac\"00-11-22-33-44-55\"\n\n\n\nEXAMPLE 3: Start-PvsDeviceBoot for FarmViewName\n\n\nStart-PvsDeviceBoot -FarmViewName theFarmView\n\n\n\nEXAMPLE 4: Start-PvsDeviceBoot for CollectionName\n\n\nStart-PvsDeviceBoot -CollectionName theCollection-SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 5: Start-PvsDeviceBoot for SiteViewName\n\n\nStart-PvsDeviceBoot -SiteViewName theSiteView-SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nStart-PvsDeviceDiskTempVersionMode\n\n\nSet a Temporary Disk Version for the specifiedDevice and optional DiskLocator. The Temporary Disk Version uses the productionversion that all production Devices boot from. Once set, the Device boots thisTemporary Disk Version instead of any currently assigned vDisk. Not supportedfor non-production and Personal vDisk Devices. Cannot be done when the theDevice already has a Temporary Disk Version, when the DiskLocator is usingserver side persistent cache mode or the active production version is inprivate mode.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device to startto use a temporary disk version.\n\n\n\nstring[] Name or DeviceName: Name of the Device tostart to use a temporary disk version.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device tostart to use a temporary disk version.\n\n\n\nThis optional\n\n\n\nGuid[] DiskLocatorId: GUID of the Disk Locator touse a temporary version of. If not specified, the only Disk Locator assigned tothe Device is used.\n\n\n\nor this optional ; resolution\n\n\n\nstring[] DiskLocatorName: Name of the Disk Locatorto use a temporary version of. If not specified, the only Disk Locator assignedto the Device is used.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId or DiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Start-PvsDeviceDiskTempVersionMode for DeviceName withDiskLocatorName\n\n\nStart-PvsDeviceDiskTempVersionMode -Name theDevice-DiskLocatorName theDiskLocator -StoreName theStore\n\n\n\nStart-PvsDeviceReboot\n\n\nReboot a Device, Collection or View. Returns aPvsTask of the Task being run. With the PvsTask, call Get-PvsTaskStatus to getthe percent complete, Get-PvsTask to get the results, and Stop-PvsTask to stopit early. The PvsTask Results has the DeviceName/value of the devices thatsucceeded in the first name/value pair of each record of the XML.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device toReboot.\n\n\n\nstring[] Name or DeviceName: Name of the Device toReboot.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toReboot.\n\n\n\nGuid CollectionId: GUID of the Collection to Rebootall Devices.\n\n\n\nGuid SiteViewId: GUID of the Site View to Reboot allDevices.\n\n\n\nGuid FarmViewId: GUID of the Farm View to Reboot allDevices.\n\n\n\nstring FarmViewName: Name of the Farm View to Rebootall Devices.\n\n\n\nGuid DiskLocatorId: GUID of the DiskLocator toReboot all Devices.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring CollectionName: Name of the Collection toReboot all Devices.\n\n\n\nstring SiteViewName: Name of the Site View to Rebootall Devices.\n\n\n\nstring DiskLocatorName: Name of the DiskLocator toReboot all Devices.\n\n\n\nOptional\n\n\n\nstring Message: Message to display before rebootingthe Device(s). Default=The target device is being shutdown remotely by theConsole.\n\n\n\nuint Delay: Number of seconds to delay beforerebooting the Device(s). Default=10\n\n\n\nuint Version: Version of the Disk to Reboot allDevices for. This is used with DiskLocatorId or DiskLocatorName.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceName, CollectionId, SiteViewId, FarmViewId orDiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nPvsTask: If successful, the PvsTask object for theprocess started is returned.\n\n\n\nEXAMPLE 1: Start-PvsDeviceReboot for DeviceName to PvsTask\n\n\n$thePvsTask = Start-PvsDeviceReboot -DeviceNametheDevice            #start the task\n\n\n\nwhile ($thePvsTask.State -eq0)                                #while the task is processing\n\n\n\n{\n\n\n\n%percentFinished = Get-PvsTaskStatus -Object$thePvsTask   # get percent finished\n\n\n\n%percentFinished.ToString() + \"%finished\"                 #display percent finished\n\n\n\nStart-Sleep -seconds10                                    #wait 10 seconds more\n\n\n\n$thePvsTask = Get-PvsTask -Object$thePvsTask              #get the current PvsTask object\n\n\n\n}\n\n\n\nif ($thePvsTask.State -eq2)                                   #check to see if completed\n\n\n\n{\n\n\n\n\"Successful\"\n\n\n\n}\n\n\n\nelse\n\n\n\n{\n\n\n\n\"Cancelled\"\n\n\n\n}\n\n\n\nEXAMPLE 2: Start-PvsDeviceReboot for DeviceMac\n\n\nStart-PvsDeviceReboot -DeviceMac\"00-11-22-33-44-55\"\n\n\n\nEXAMPLE 3: Start-PvsDeviceReboot for FarmViewName\n\n\nStart-PvsDeviceReboot -FarmViewName theFarmView\n\n\n\nEXAMPLE 4: Start-PvsDeviceReboot for CollectionName\n\n\nStart-PvsDeviceReboot -CollectionName theCollection-SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 5: Start-PvsDeviceReboot for SiteViewName\n\n\nStart-PvsDeviceReboot -SiteViewName theSiteView-SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nStart-PvsDeviceShutdown\n\n\nShutdown a Device, Collection or View. Returns aPvsTask of the Task being run. With the PvsTask, call Get-PvsTaskStatus to getthe percent complete, Get-PvsTask to get the results, and Stop-PvsTask to stopit early. The PvsTask Results has the DeviceName/value of the devices thatsucceeded in the first name/value pair of each record of the XML.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device toShutdown.\n\n\n\nstring[] Name or DeviceName: Name of the Device toShutdown.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toShutdown.\n\n\n\nGuid CollectionId: GUID of the Collection toShutdown all Devices.\n\n\n\nGuid SiteViewId: GUID of the Site View to Shutdownall Devices.\n\n\n\nGuid FarmViewId: GUID of the Farm View to Shutdownall Devices.\n\n\n\nstring FarmViewName: Name of the Farm View toShutdown all Devices.\n\n\n\nGuid DiskLocatorId: GUID of the DiskLocator toShutdown all Devices.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring CollectionName: Name of the Collection toShutdown all Devices.\n\n\n\nstring SiteViewName: Name of the Site View toShutdown all Devices.\n\n\n\nstring DiskLocatorName: Name of the DiskLocator toShutdown all Devices.\n\n\n\nOptional\n\n\n\nstring Message: Message to display before shuttingdown the Device(s). Default=The target device is being shutdown remotely by theConsole.\n\n\n\nuint Delay: Number of seconds to delay beforeshutting down the Device(s). Default=10\n\n\n\nuint Version: Version of the Disk to Shutdown allDevices for. This is used with DiskLocatorId or DiskLocatorName.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.\n\n\n\nstring StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceName, CollectionId, SiteViewId, FarmViewId orDiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nPvsTask: If successful, the PvsTask object for theprocess started is returned.\n\n\n\nEXAMPLE 1: Start-PvsDeviceShutdown for DeviceName to PvsTask\n\n\n$thePvsTask = Start-PvsDeviceShutdown -DeviceNametheDevice          # startthe task\n\n\n\nwhile ($thePvsTask.State -eq0)                                #while the task is processing\n\n\n\n{\n\n\n\n%percentFinished = Get-PvsTaskStatus -Object$thePvsTask   # get percent finished\n\n\n\n%percentFinished.ToString() + \"%finished\"                 #display percent finished\n\n\n\nStart-Sleep -seconds10                                    #wait 10 seconds more\n\n\n\n$thePvsTask = Get-PvsTask -Object$thePvsTask              #get the current PvsTask object\n\n\n\n}\n\n\n\nif ($thePvsTask.State -eq2)                                   #check to see if completed\n\n\n\n{\n\n\n\n\"Successful\"\n\n\n\n}\n\n\n\nelse\n\n\n\n{\n\n\n\n\"Cancelled\"\n\n\n\n}\n\n\n\nEXAMPLE 2: Start-PvsDeviceShutdown for DeviceMac\n\n\nStart-PvsDeviceShutdown -DeviceMac\"00-11-22-33-44-55\"\n\n\n\nEXAMPLE 3: Start-PvsDeviceShutdown for FarmViewName\n\n\nStart-PvsDeviceShutdown -FarmViewName theFarmView\n\n\n\nEXAMPLE 4: Start-PvsDeviceShutdown for CollectionName\n\n\nStart-PvsDeviceShutdown -CollectionName theCollection-SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 5: Start-PvsDeviceShutdown for SiteViewName\n\n\nStart-PvsDeviceShutdown -SiteViewName theSiteView-SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nStart-PvsDeviceUpdateBdm\n\n\nUpdate the BDM partition for a Device, Collection orView. Returns a PvsTask of the Task being run. With the PvsTask, callGet-PvsTaskStatus to get the percent complete, Get-PvsTask to get the results,and Stop-PvsTask to stop it early. The PvsTask Results has the DeviceName/valueof the devices that succeeded in the first name/value pair of each record ofthe XML.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device toUpdate.\n\n\n\nstring[] Name or DeviceName: Name of the Device toUpdate.\n\n\n\nGuid CollectionId: GUID of the Collection to Updateall BDM Devices.\n\n\n\nGuid SiteViewId: GUID of the Site View to Update allBDM Devices.\n\n\n\nGuid FarmViewId: GUID of the Farm View to Update allBDM Devices.\n\n\n\nstring FarmViewName: Name of the Farm View to Updateall BDM Devices.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring CollectionName: Name of the Collection toUpdate all BDM Devices.\n\n\n\nstring SiteViewName: Name of the Site View to Updateall BDMDevices.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceName, CollectionId, SiteViewId or FarmViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsTask: If successful, the PvsTask object for theprocess started is returned.\n\n\n\nEXAMPLE 1: Start-PvsDeviceUpdateBdm for DeviceName to PvsTask\n\n\n$thePvsTask = Start-PvsDeviceUpdateBdm -DeviceNametheDevice              #start the task\n\n\n\nwhile ($thePvsTask.State -eq0)                                #while the task is processing\n\n\n\n{\n\n\n\n%percentFinished = Get-PvsTaskStatus -Object$thePvsTask   # get percent finished\n\n\n\n%percentFinished.ToString() + \"%finished\"                 #display percent finished\n\n\n\nStart-Sleep -seconds10                                    #wait 10 seconds more\n\n\n\n$thePvsTask = Get-PvsTask -Object$thePvsTask              #get the current PvsTask object\n\n\n\n}\n\n\n\nif ($thePvsTask.State -eq2)                                   #check to see if completed\n\n\n\n{\n\n\n\n\"Successful\"\n\n\n\n}\n\n\n\nelse\n\n\n\n{\n\n\n\n\"Cancelled\"\n\n\n\n}\n\n\n\nEXAMPLE 2: Start-PvsDeviceUpdateBdm for FarmViewName\n\n\nStart-PvsDeviceUpdateBdm -FarmViewName theFarmView\n\n\n\nEXAMPLE 3: Start-PvsDeviceUpdateBdm for CollectionName\n\n\nStart-PvsDeviceUpdateBdm -CollectionNametheCollection -SiteName theSite\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 4: Start-PvsDeviceUpdateBdm for SiteViewName\n\n\nStart-PvsDeviceUpdateBdm -SiteViewName theSiteView-SiteName theSite\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nStart-PvsDisplayMessage\n\n\nDisplay a message on a Device, Collection or View.Returns a PvsTask of the Task being run. With the PvsTask, callGet-PvsTaskStatus to get the percent complete, Get-PvsTask to get the results,and Stop-PvsTask to stop it early. The PvsTask Results has the DeviceName/valueof the devices that succeeded in the first name/value pair of each record ofthe XML.\n\n\n\nThis required\n\n\n\nstring Message: Message to display on the Device(s).\n\n\n\nOne of these required\n\n\n\nGuid[] DeviceId: GUID of the Device to Display aMessage.\n\n\n\nstring[] DeviceName: Name of the Device to Display aMessage.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device toDisplay a Message.\n\n\n\nGuid CollectionId: GUID of the Collection to Displaya Message on all Devices.\n\n\n\nGuid SiteViewId: GUID of the Site View to Display aMessage all Devices.\n\n\n\nGuid FarmViewId: GUID of the Farm View to Display aMessage on all Devices.\n\n\n\nstring FarmViewName: Name of the Farm View toDisplay a Message on all Devices.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring CollectionName: Name of the Collection toDisplay a Message on all Devices.\n\n\n\nstring SiteViewName: Name of the Site View toDisplay a Message on all Devices.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid SiteId: GUID of the Site.\n\n\n\nstring SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceName, CollectionId, SiteViewId or FarmViewId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsTask: If successful, the PvsTask object for theprocess started is returned.\n\n\n\nEXAMPLE 1: Start-PvsDisplayMessage for DeviceName to PvsTask\n\n\n$thePvsTask = Start-PvsDisplayMessage -DeviceNametheDevice -Message \"message\" # start the task\n\n\n\nwhile ($thePvsTask.State -eq0)                                #while the task is processing\n\n\n\n{\n\n\n\n%percentFinished = Get-PvsTaskStatus -Object$thePvsTask   # get percent finished\n\n\n\n%percentFinished.ToString() + \"%finished\"                 #display percent finished\n\n\n\nStart-Sleep -seconds10                                    #wait 10 seconds more\n\n\n\n$thePvsTask = Get-PvsTask -Object$thePvsTask              #get the current PvsTask object\n\n\n\n}\n\n\n\nif ($thePvsTask.State -eq2)                                   #check to see if completed\n\n\n\n{\n\n\n\n\"Successful\"\n\n\n\n}\n\n\n\nelse\n\n\n\n{\n\n\n\n\"Cancelled\"\n\n\n\n}\n\n\n\nEXAMPLE 2: Start-PvsDisplayMessage for DeviceMac\n\n\nStart-PvsDisplayMessage -DeviceMac \"00-11-22-33-44-55\"-Message \"message\"\n\n\n\nEXAMPLE 3: Start-PvsDisplayMessage for FarmViewName\n\n\nStart-PvsDisplayMessage -FarmViewName theFarmView-Message \"message\"\n\n\n\nEXAMPLE 4: Start-PvsDisplayMessage for CollectionName\n\n\nStart-PvsDisplayMessage -CollectionName theCollection-SiteName theSite -Message \"message\"\n\n\n\nCollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 5: Start-PvsDisplayMessage for SiteViewName\n\n\nStart-PvsDisplayMessage -SiteViewName theSiteView -SiteNametheSite -Message \"message\"\n\n\n\nSiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.\n\n\n\nStart-PvsReportBug\n\n\nReport a bug at individual server level or at sitelevel. Problem report can be uploaded to Citrix Systems or can be saved locallyin a path accessible from all servers in the farm.\n\n\n\nOne of these required\n\n\n\nGuid Guid or SiteId: GUID of the Site.\n\n\n\nGuid ServerId: GUID of the Server.\n\n\n\nor one of these required ; resolutions\n\n\n\nstring Name or SiteName: Name of the Site.\n\n\n\nstring ServerName: Name of the Server.\n\n\n\nThis required\n\n\n\nstring Summary: Short summary describing theproblem.\n\n\n\nThis optional\n\n\n\nstring SrNumber: Service Request number of thereported problem.\n\n\n\nThis optional\n\n\n\nstring Description: Description of the reported problem.\n\n\n\nThis optional\n\n\n\nstring Path: Path where problem report bundle issaved.\n\n\n\nThis optional\n\n\n\nDateTime DateTime: DateTime around which thereported problem occured.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nSiteId or ServerId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nPvsTask: If successful, the PvsTask object for theprocess started is returned.\n\n\n\nEXAMPLE 1: Start-PvsReportBug for SiteName to PvsTask\n\n\n$thePvsTask = Start-PvsReportBug -SiteName theSite-bugReportSummary test bugreport            #start the task\n\n\n\nwhile ($thePvsTask.State -eq0)                                                                   #while the task is processing\n\n\n\n{\n\n\n\n%percentFinished = Get-PvsTaskStatus -Object$thePvsTask                                      #get percent finished\n\n\n\n%percentFinished.ToString() + \"%finished\"                                                  #display percent finished\n\n\n\nStart-Sleep -seconds10                                                                       #wait 10 seconds more\n\n\n\n$thePvsTask = Get-PvsTask -Object$thePvsTask                                                 #get the current PvsTask object\n\n\n\n}\n\n\n\nif ($thePvsTask.State -eq 2)                                                                      #check to see if completed\n\n\n\n{\n\n\n\n\"Successful\"\n\n\n\n}\n\n\n\nelse\n\n\n\n{\n\n\n\n\"Cancelled\"\n\n\n\n}\n\n\n\nStart-PvsStreamService\n\n\nStart the Stream Service on a Server or all Serversin a Site.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server to startthe Stream Service.\n\n\n\nstring[] Name or ServerName: Name of the Server tostart the Stream Service.\n\n\n\nGuid[] SiteId: GUID of the Site to start the StreamService on all Servers.\n\n\n\nstring[] SiteName: Name of the Site to start theStream Service on all Servers.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId or SiteId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Start-PvsStreamService for Name\n\n\nStart-PvsStreamService -Name theServer\n\n\n\nEXAMPLE 2: Start-PvsStreamService for PvsServer Using Pipe\n\n\nThe Get-PvsServer output is piped to theStart-PvsStreamService.\n\n\n\nGet-PvsServer -Name theServer -Fields Guid |Start-PvsStreamService\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Start-PvsStreamService for SiteName\n\n\nStart-PvsStreamService -SiteName theSite\n\n\n\nEXAMPLE 4: Start-PvsStreamService for PvsSite Using Pipe\n\n\nThe Get-PvsSite output is piped to theStart-PvsStreamService.\n\n\n\nGet-PvsSite -Name theSite -Fields Guid |Start-PvsStreamService\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nStart-PvsUpdateTask\n\n\nStarts an Update Task.\n\n\n\nThis required\n\n\n\nGuid[] Guid or UpdateTaskId: GUID of the Update Taskto Start.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or UpdateTaskName: Name of the UpdateTask to Start.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nUpdateTaskId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Start-PvsUpdateTask for Name\n\n\nStart-PvsUpdateTask -Name theUpdateTask -SiteNametheSite\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 2: Start-PvsUpdateTask for PvsUpdateTask Using Pipe\n\n\nThe Get-PvsUpdateTask output is piped to theStart-PvsUpdateTask.\n\n\n\nGet-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Fields Guid | Start-PvsUpdateTask\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nStop-PvsCreateDisk\n\n\nCancel an active CreateDisk.\n\n\n\nThis required\n\n\n\nstring[] Name: Name of the Disk file that is beingcreated.\n\n\n\nOne of these required\n\n\n\nGuid[] StoreId: GUID of the Store that the Disk willbe a member of.\n\n\n\nstring[] StoreName: Name of the Store that the Diskwill be a member of.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nStoreId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Stop-PvsCreateDisk for Name\n\n\nStop-PvsCreateDisk -Name theDiskFile -StoreNametheStore\n\n\n\nEXAMPLE 2: Stop-PvsCreateDisk for PvsStore Using Pipe\n\n\nThe Get-PvsStore output is piped to theStop-PvsCreateDisk.\n\n\n\nGet-PvsStore -Name theStore -Fields Guid |Stop-PvsCreateDisk -Name theDiskFile\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nStop-PvsDeviceDiskTempVersionMode\n\n\nUnset the Temporary Disk Version for the specifiedDevice. The Device must not currently be booted. Once removed, the Device againuses any currently assigned vDisk when booted.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or DeviceId: GUID of the Device to nolonger use a temporary disk version for.\n\n\n\nstring[] Name or DeviceName: Name of the Device tono longer use a temporary disk version for.\n\n\n\nPvsPhysicalAddress[] DeviceMac: MAC of the Device tono longer use a temporary disk version for.\n\n\n\nGuid[] DiskLocatorId: GUID of the DiskLocator to nolonger use temporary disk versions for.\n\n\n\nGuid[] SiteId: GUID of the Site for resolution ofthe DiskLocatorName.\n\n\n\nstring[] SiteName: Name of the Site for resolutionof the DiskLocatorName.\n\n\n\nor this required ; resolution\n\n\n\nstring[] DiskLocatorName: Name of the DiskLocator tono longer use temporary disk versions for.\n\n\n\nThis optional ; resolution\n\n\n\nstring[] Version: Version of the DiskLocator to nolonger use temporary disk versions for.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site for resolution ofthe DiskLocatorName.\n\n\n\nstring[] SiteName: Name of the Site for resolutionof the DiskLocatorName.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] DiskLocatorId: GUID of the DiskLocator to nolonger use temporary disk versions for.\n\n\n\nstring[] DiskLocatorName: Name of the DiskLocator tono longer use temporary disk versions for.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDeviceId, DiskLocatorId or SiteId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Stop-PvsDeviceDiskTempVersionMode for Device\n\n\nStop-PvsDeviceDiskTempVersionMode -Name theDevice\n\n\n\nEXAMPLE 2: Stop-PvsDeviceDiskTempVersionMode for DiskLocator\n\n\nStop-PvsDeviceDiskTempVersionMode -DiskLocatorNametheDiskLocator -SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 3: Stop-PvsDeviceDiskTempVersionMode with DiskLocator\n\n\nStop-PvsDeviceDiskTempVersionMode -DiskLocatorNametheDiskLocator -Version 4 -SiteName theSite -StoreName theStore\n\n\n\nDiskLocatorId can be used instead of DiskLocatorNameso that the StoreName or StoreId are not also needed.\n\n\n\nStop-PvsStreamService\n\n\nStop the Stream Service on a Server or all Serversin a Site.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server to stopthe Stream Service.\n\n\n\nstring[] Name or ServerName: Name of the Server tostop the Stream Service.\n\n\n\nGuid[] SiteId: GUID of the Site to stop the StreamService on all Servers.\n\n\n\nstring[] SiteName: Name of the Site to stop theStream Service on all Servers.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId or SiteId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Stop-PvsStreamService for Name\n\n\nStop-PvsStreamService -Name theServer\n\n\n\nEXAMPLE 2: Stop-PvsStreamService for PvsServer Using Pipe\n\n\nThe Get-PvsServer output is piped to theStop-PvsStreamService.\n\n\n\nGet-PvsServer -Name theServer -Fields Guid |Stop-PvsStreamService\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Stop-PvsStreamService for SiteName\n\n\nStop-PvsStreamService -SiteName theSite\n\n\n\nEXAMPLE 4: Stop-PvsStreamService for PvsSite Using Pipe\n\n\nThe Get-PvsSite output is piped to theStop-PvsStreamService.\n\n\n\nGet-PvsSite -Name theSite -Fields Guid |Stop-PvsStreamService\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nStop-PvsTask\n\n\nCancel a running Task.\n\n\n\nThis required\n\n\n\nuint TaskId: Id of the Task to Cancel.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nTaskId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Stop-PvsTask for TaskId\n\n\nStop-PvsTask -TaskId 101\n\n\n\nStop-PvsUpdateTask\n\n\nCancel an active Update Task for an Update Device.\n\n\n\nThis required\n\n\n\nGuid[] Guid or UpdateTaskId: GUID of the Update Taskto Cancel.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or UpdateTaskName: Name of the UpdateTask to Cancel.\n\n\n\nOne of these required\n\n\n\nGuid[] DeviceId: GUID of a specific Update Device toCancel an Update Task for.\n\n\n\nstring[] DeviceName: Name of a specific UpdateDevice to Cancel an Update Task for.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nUpdateTaskId or DeviceId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Stop-PvsUpdateTask for Name\n\n\nStop-PvsUpdateTask -Name theUpdateTask -DeviceNametheDevice\n\n\n\nEXAMPLE 2: Stop-PvsUpdateTask for PvsUpdateTask Using Pipe\n\n\nThe Get-PvsUpdateTask output is piped to theStop-PvsUpdateTask.\n\n\n\nGet-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Fields Guid | Stop-PvsUpdateTask -DeviceName theDevice\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId is not also needed.\n\n\n\nEXAMPLE 3: Stop-PvsUpdateTask for PvsDiskUpdateDevice Using Pipe\n\n\nThe Get-PvsDiskUpdateDevice output is piped to theStop-PvsUpdateTask.\n\n\n\nGet-PvsDiskUpdateDevice -Name theDevice -Fields Guid| Stop-PvsUpdateTask -Name theUpdateTask\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nTest-PvsDirectory\n\n\nValidate a Directory on the Server specified.\n\n\n\nOne of these required\n\n\n\nGuid[] Guid or ServerId: GUID of the Server tovalidate a Directory on.\n\n\n\nstring[] Name or ServerName: Name of the Server tovalidate a Directory on.\n\n\n\nThis required\n\n\n\nstring[] Path: Path of the Directory to validate.\n\n\n\nThis optional\n\n\n\nSwitchParameter ReadOnly: If -ReadOnly is specified,the directory should be validated for a managed read-only store.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nServerId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Test-PvsDirectory for Name\n\n\nTest-PvsDirectory -Name theServer -Path\"C:\\directory\\subdirectory\"\n\n\n\nEXAMPLE 2: Test-PvsDirectory for PvsServer Using Pipe\n\n\nThe Get-PvsServer output is piped to theTest-PvsDirectory.\n\n\n\nGet-PvsServer -Name theServer -Fields Guid |Test-PvsDirectory -Path \"C:\\directory\\subdirectory\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nEXAMPLE 3: Test-PvsDirectory for Name with ReadOnly\n\n\nTest-PvsDirectory -Name theServer -Path\"C:\\directory\\subdirectory\" -ReadOnly\n\n\n\nEXAMPLE 4: Test-PvsDirectory for PvsServer Using Pipe\n\n\nThe Get-PvsServer output is piped to the Test-PvsDirectory.\n\n\n\nGet-PvsServer -Name theServer -Fields Guid |Test-PvsDirectory -Path \"C:\\directory\\subdirectory\" -ReadOnly\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nUnlock-PvsAllDisk\n\n\nRemove all locks for a Disk.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to remove all locks for the Disk.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of DiskLocator to remove all locks for the Disk.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Unlock-PvsAllDisk for Name\n\n\nUnlock-PvsAllDisk -Name theDiskLocator -SiteNametheSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Unlock-PvsAllDisk for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theUnlock-PvsAllDisk.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Unlock-PvsAllDisk\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nUnlock-PvsDisk\n\n\nRemove lock for the Disk.\n\n\n\nThis required\n\n\n\nGuid[] Guid or DiskLocatorId: GUID of the DiskLocator to remove a lock for the Disk.\n\n\n\nor this required ; resolution\n\n\n\nstring[] Name or DiskLocatorName: Name of the DiskLocator to remove a lock for the Disk.\n\n\n\nOptional\n\n\n\nGuid[] OwnerId: GUID of the Owner of the Disk Lock.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] SiteId: GUID of the Site.\n\n\n\nstring[] SiteName: Name of the Site.\n\n\n\nOne of these resolutions when needed\n\n\n\nGuid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nstring[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.\n\n\n\nInstead of a parameter that matches one of themembers listed\n\n\n\nPvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:\n\n\n\nDiskLocatorId\n\n\n\nOptional\n\n\n\nSwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.\n\n\n\nEXAMPLE 1: Unlock-PvsDisk for Name\n\n\nUnlock-PvsDisk -Name theDiskLocator -SiteNametheSite -StoreName theStore\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 2: Unlock-PvsDisk for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to the Unlock-PvsDisk.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Unlock-PvsDisk\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 3: Unlock-PvsDisk for Name with OwnerId\n\n\nUnlock-PvsDisk -Name theDiskLocator -SiteNametheSite -StoreName theStore -OwnerId = \"e6c9884e-067c-4924-a581-312c699b4bb6\"\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nEXAMPLE 4: Unlock-PvsDisk for PvsDiskLocator Using Pipe\n\n\nThe Get-PvsDiskLocator output is piped to theUnlock-PvsDisk.\n\n\n\nGet-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Unlock-PvsDisk -OwnerId =\"e6c9884e-067c-4924-a581-312c699b4bb6\"\n\n\n\nThe -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.\n\n\n\nGuid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.\n\n\n\nUpdate-PvsInventory\n\n\nForce the Inventory service to refresh its InventoryTable.\n\n\n\nEXAMPLE 1: Update-PvsInventory\n\n\nUpdate-PvsInventory", 
            "title": "Index"
        }, 
        {
            "location": "/#introduction", 
            "text": "Use Provisioning Services\u2019 programming interfaces to manageyour implementation from a command line or from scripts. Only users withcorrect administrative privileges can use programming commands.Non-administrators, that do not have elevated privileges and attempt to use thesecommands, will receive the \u2018Invalid access\u2019 message.  Four different programming interfaces exist:  \u00b7 Management Command Line Interface (MCLI)  \u00b7 Simple Object Access Protocol (SOAP) Server Programmer Interface  \u00b7 PowerShell Programmer Interface with Objects  \u00b7 PowerShell Programmer Interface (Deprecated)  This document provides the information needed to use thisinterface.", 
            "title": "Introduction"
        }, 
        {
            "location": "/#using-the-powershell-programmer-interface-withobjects", 
            "text": "Use the information that follows to manage a ProvisioningService\u2019s implementation from the PowerShell Interface with Objects.", 
            "title": "Using the PowerShell Programmer Interface withObjects"
        }, 
        {
            "location": "/#installation-of-powershell-snap-in", 
            "text": "The PowerShell snap-in (Citrix.PVS.SnapIn.dll) can beinstalled using the Provisioning Server Console install.", 
            "title": "Installation of PowerShell Snap-In"
        }, 
        {
            "location": "/#registration-of-mclipssnapindll-usingimport-module", 
            "text": "If the snap-in later needs to be registered in PowerShell,this can be manually done by running one of the following command inPowerShell. The path where the Citrix.PVS.SnapIn.dll is installed needs to beused.  Import-Module \u201cpath\\Citrix.PVS.SnapIn.dll\u201d", 
            "title": "Registration of McliPSSnapIn.dll usingImport-Module"
        }, 
        {
            "location": "/#registration-of-citrixpvssnapindll-usingadd-pssnapin", 
            "text": "If the snap-in later needs to be registered in PowerShell,this can be manually done by running one of the following commands at the DOScommand prompt. After the command is run and PowerShell is started, the snap-inneeds to be added using the command \u201cAdd-PSSnapin -Name Citrix.PVS.SnapIn\u201d.", 
            "title": "Registration of Citrix.PVS.SnapIn.dll usingAdd-PSSnapin"
        }, 
        {
            "location": "/#64-bit-registration", 
            "text": "%systemroot%\\Microsoft.NET\\Framework64\\v4.0.30319\\installutil.exeCitrix.PVS.SnapIn.dll", 
            "title": "64-bit Registration"
        }, 
        {
            "location": "/#32-bit-registration", 
            "text": "%systemroot%\\Microsoft.NET\\Framework\\v4.0.30319\\installutil.exeCitrix.PVS.SnapIn.dll", 
            "title": "32-bit Registration"
        }, 
        {
            "location": "/#alternative-registration-of-citrixpvssnapindllin-powershell", 
            "text": "Another way to register is by running one of the followingcommands at the PowerShell command prompt:", 
            "title": "Alternative Registration of Citrix.PVS.SnapIn.dllin PowerShell"
        }, 
        {
            "location": "/#64-bit-registration-in-powershell", 
            "text": "$installutil= $env:systemroot + '\\Microsoft.NET\\Framework64\\v4.0.30319\\installutil.exe'  ;$installutilCitrix.PVS.SnapIn.dll  Add-PSSnapin-Name Citrix.PVS.SnapIn", 
            "title": "64-bit Registration in PowerShell"
        }, 
        {
            "location": "/#32-bit-registration-in-powershell", 
            "text": "$installutil= $env:systemroot + '\\Microsoft.NET\\Framework32\\v4.0.30319\\installutil.exe'  ;$installutilCitrix.PVS.SnapIn.dll  Add-PSSnapin-Name Citrix.PVS.SnapIn", 
            "title": "32-bit Registration in PowerShell"
        }, 
        {
            "location": "/#uninstall-of-powershell-snap-in", 
            "text": "The PowerShell snap-in (Citrix.PVS.SnapIn.dll) can beuninstalled using the Provisioning Server Console install.", 
            "title": "Uninstall of PowerShell Snap-In"
        }, 
        {
            "location": "/#unregister-of-citrixpvssnapindll", 
            "text": "The snap-in needs to be unregistered from PowerShell, thiscan be manually done by running one of the following commands at the DOScommand prompt:", 
            "title": "Unregister of Citrix.PVS.SnapIn.dll"
        }, 
        {
            "location": "/#64-bit-unregister", 
            "text": "%systemroot%\\Microsoft.NET\\Framework64\\v4.0.30319\\installutil.exe-u Citrix.PVS.SnapIn.dll", 
            "title": "64-bit Unregister"
        }, 
        {
            "location": "/#32-bit-unregister", 
            "text": "%systemroot%\\Microsoft.NET\\Framework\\v4.0.30319\\installutil.exe-u Citrix.PVS.SnapIn.dll", 
            "title": "32-bit Unregister"
        }, 
        {
            "location": "/#alternative-unregister-of-citrixpvssnapindll-inpowershell", 
            "text": "Another way to unregister is by running one of the followingcommands at the PowerShell command prompt:", 
            "title": "Alternative Unregister of Citrix.PVS.SnapIn.dll inPowerShell"
        }, 
        {
            "location": "/#64-bit-unregister-in-powershell", 
            "text": "$installutil= $env:systemroot + '\\Microsoft.NET\\Framework64\\v4.0.30319\\installutil.exe'  ;$installutil-u Citrix.PVS.SnapIn.dll", 
            "title": "64-bit Unregister in PowerShell"
        }, 
        {
            "location": "/#32-bit-unregister-in-powershell", 
            "text": "$installutil= $env:systemroot + '\\Microsoft.NET\\Framework32\\v4.0.30319\\installutil.exe'  ;$installutil-u Citrix.PVS.SnapIn.dll", 
            "title": "32-bit Unregister in PowerShell"
        }, 
        {
            "location": "/#setup-of-the-soap-server-communication", 
            "text": "Unless the defaults are fine, use this command to set thevalues for the SOAP Server connection:", 
            "title": "Setup of the SOAP Server Communication"
        }, 
        {
            "location": "/#set-pvsconnection", 
            "text": "Set the SoapServer connection, and if -Persist isspecified the connection settings are saved in the registry. A PvsConnectionobject can be used as the parameter.  Required  PvsConnection Connection: PvsConnection object withchanged property value(s) to be set. The object can come from a pileline.  These values are in the PvsConnection object, andonly will be set if the value has changed.  string Name or Server: Name or IP of the Server toconnect to. Default=localhost  string Port: The Port to use to connect.Default=54321  string User: User name to use for Authentication. Ifit has a value, it will be *****. Default=\"\"  string Domain: Domain name to use forAuthentication. If it has a value, it will be *****. Default=\"\"  string Password: Password to use for Authentication.If it has a value, it will be *****. Default=\"\"  string Persist: True when the connection settingsshould be, for Set, or have been, for Get, saved to the registry.  PvsConnection can be created or modified usingmethods below:  New-Object Citrix.PVS.SnapIn.PvsConnection: Createsdefault Server=localhost, Port=54321, and no authentication.  New-ObjectCitrix.PVS.SnapIn.PvsConnection(Citrix.PVS.SnapIn copyFrom): Creates withsettings of the copyFrom Citrix.PVS.SnapIn.  SetServerToLocalHostDefaultSettings:Server=localhost, Port=54321, and no authentication.  Copy(Citrix.PVS.SnapIn copyFrom): Modifies thesettings to match the copyFrom Citrix.PVS.SnapIn.  Equals(Citrix.PVS.SnapIn compareTo): Returns truewhen the settings match what is in the compareTo.   When Connection is not passed, the parameters beloware used:  Optional field values to set:  string Name or Server: Name or IP of the Server toconnect to. Default=localhost  string Port: The Port to use to connect.Default=54321  string User: User name to use for Authentication. Ifit has a value, it will be *****. Default=\"\"  string Domain: Domain name to use forAuthentication. If it has a value, it will be *****. Default=\"\"  string Password: Password to use for Authentication.If it has a value, it will be *****. Default=\"\"  string Persist: True when the connection settingsshould be, for Set, or have been, for Get, saved to the registry.   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsConnection object is returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsConnection"
        }, 
        {
            "location": "/#example-1-set-pvsconnection-for-individual-fields", 
            "text": "Get the PvsConnection into a $o variable. Change the$o field values and then Set the PvsConnection with the result.  $o = Get-PvsConnection -Fields Port  $o.Port = 54322  Set-PvsConnection $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsConnection for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsconnection-for-a-field-using-pipe", 
            "text": "Get the PvsConnection into a $o variable for thefield that has the wrong value. Change the $o field to the correct value and thenSet the PvsConnection with the result.  Get-PvsConnection -Fields Port | Where-Object{$_.Port -ne 54322} | foreach { $o = $_; $o.Port = 54322; $o } |Set-PvsConnection  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsConnection for a Field Using Pipe"
        }, 
        {
            "location": "/#example-3-set-pvsconnection-port-with-parameter", 
            "text": "Set the PvsConnection Port using the Port parameterinstead of a PvsConnection object.  Set-PvsConnection -Port 54322  This is the only Set command that has fieldparameters.", 
            "title": "EXAMPLE 3: Set PvsConnection Port with Parameter"
        }, 
        {
            "location": "/#command-specific-help", 
            "text": "All of the documentation for specific commands is includedin the command-line help by calling Get-Help and the name of the command, forexample \u201cGet-Help Get-PvsDevice\u201d. The documentation for the specific commandincludes information about the object that is may get or set. The documentationof all of the objects is included in the \u201cObjects, in the Citrix.PVS.SnapInNamespace\u201d section.", 
            "title": "Command Specific Help"
        }, 
        {
            "location": "/#error-handling", 
            "text": "For the Citrix.PVS.SnapIn, if an error occurs, aPvsException will be in the Exception member of the $error. The \u201cError codes\u201dinformation is included in this document.  The members of a PvsException are:  InnerException:The exception that occured. This exception maybe an EAException or otherstandard Exception.  ToString():Has the formatted full Message of the InnerException.  If theInnerException GetType().Name equals \"EAException\", then The membersof it are:   returnCode: The number, as shown below in the Error codes. The name of theerror, for example \"NotImplemented\", is not included in theEAException.   Message: The message, as shown below in the Error codes. The [v1], [v2], [v3],[v4], and [v5] will be replaced with values as required.   Details: Has the Details for the EAException if there are any. OtherException,ManagementInterfaceError and PvsStatusException will have Details.   ToString(): Has the Message as shown below in the Error codes. If there isDetails, it will be returned or included, and if partialReturn, they will beincluded.   partialReturn: Might have a list of EAException objects if any of the itemsprocessed during the command had any issues.   Severity: Can have the values Critical, Error, Warning or Duplicate.   Source: Has the value that is displayed in the Console as a Title or Type forthe error.", 
            "title": "Error Handling"
        }, 
        {
            "location": "/#short-cmdlet-list", 
            "text": "Add-PvsDeviceToDomain  Add-PvsDeviceToView  Add-PvsDiskLocatorToDevice  Add-PvsDiskToUpdateTask  Add-PvsDiskVersion  Clear-PvsConnection  Clear-PvsTask  Copy-PvsDeviceProperties  Copy-PvsDiskProperties  Copy-PvsServerProperties  Disable-PvsDeviceDiskLocator  Dismount-PvsDisk  Enable-PvsDeviceDiskLocator  Export-PvsAuditTrail  Export-PvsDisk  Export-PvsOemLicenses  Get-PvsADAccount  Get-PvsAuditActionParameter  Get-PvsAuditActionProperty  Get-PvsAuditActionSibling  Get-PvsAuditTrail  Get-PvsAuthGroup  Get-PvsAuthGroupUsage  Get-PvsCeipData  Get-PvsCisData  Get-PvsCollection  Get-PvsConnection  Get-PvsCreateDiskStatus  Get-PvsDevice  Get-PvsDeviceBootstrap  Get-PvsDeviceCount  Get-PvsDeviceDiskLocatorEnabled  Get-PvsDeviceDiskTempVersion  Get-PvsDeviceInfo  Get-PvsDevicePersonality  Get-PvsDeviceStatus  Get-PvsDirectory  Get-PvsDisk  Get-PvsDiskInfo  Get-PvsDiskInventory  Get-PvsDiskLocator  Get-PvsDiskLocatorCount  Get-PvsDiskLocatorLock  Get-PvsDiskUpdateDevice  Get-PvsDiskUpdateStatus  Get-PvsDiskVersion  Get-PvsExists  Get-PvsFarm  Get-PvsFarmView  Get-PvsGroup  Get-PvsLocalServer  Get-PvsMaintenanceVersionExists  Get-PvsMinimumLastAutoAddDeviceNumber  Get-PvsMountedDisk  Get-PvsMountedDriveLetter  Get-PvsNewDiskVersion  Get-PvsServer  Get-PvsServerBiosBootstrap  Get-PvsServerBootstrap  Get-PvsServerBootstrapName  Get-PvsServerCount  Get-PvsServerInfo  Get-PvsServerName  Get-PvsServerStatus  Get-PvsServerStore  Get-PvsServerStoreActiveDeviceCount  Get-PvsSite  Get-PvsSiteView  Get-PvsStore  Get-PvsStoreFreeSpace  Get-PvsStoreSharedOrServerPath  Get-PvsTask  Get-PvsTaskStatus  Get-PvsUndefinedDisk  Get-PvsUpdateTask  Get-PvsUploadCeip  Get-PvsVersion  Get-PvsVirtualHostingPool  Get-PvsXDSite  Grant-PvsAuthGroup  Import-PvsDevices  Import-PvsDisk  Import-PvsOemLicenses  Invoke-PvsActivateDeviceMAK  Invoke-PvsMarkDown  Invoke-PvsPromoteDiskVersion  Invoke-PvsRebalanceDevices  Invoke-PvsRevertDiskVersion  Merge-PvsDisk  Mount-PvsDisk  Move-PvsDeviceToCollection  Move-PvsServerToSite  New-PvsAuthGroup  New-PvsCeipData  New-PvsCisData  New-PvsCollection  New-PvsDevice  New-PvsDeviceWithPersonalvDisk  New-PvsDirectory  New-PvsDiskLocator  New-PvsDiskMaintenanceVersion  New-PvsDiskUpdateDevice  New-PvsFarmView  New-PvsServer  New-PvsSite  New-PvsSiteView  New-PvsStore  New-PvsUpdateTask  New-PvsVirtualHostingPool  Remove-PvsAuthGroup  Remove-PvsCollection  Remove-PvsDevice  Remove-PvsDeviceDiskCacheFile  Remove-PvsDeviceFromDomain  Remove-PvsDeviceFromView  Remove-PvsDirectory  Remove-PvsDiskFromUpdateTask  Remove-PvsDiskLocator  Remove-PvsDiskLocatorFromDevice  Remove-PvsDiskUpdateDevice  Remove-PvsDiskVersion  Remove-PvsFarmView  Remove-PvsServer  Remove-PvsServerStore  Remove-PvsSite  Remove-PvsSiteView  Remove-PvsStore  Remove-PvsUpdateTask  Remove-PvsVirtualHostingPool  Reset-PvsDatabase  Reset-PvsDeviceForDomain  Restart-PvsStreamService  Revoke-PvsAuthGroup  Set-PvsAuthGroup  Set-PvsCeipData  Set-PvsCisData  Set-PvsCollection  Set-PvsConnection  Set-PvsDevice  Set-PvsDeviceBootstrap  Set-PvsDevicePersonality  Set-PvsDisk  Set-PvsDiskLocator  Set-PvsDiskUpdateDevice  Set-PvsDiskVersion  Set-PvsFarm  Set-PvsFarmView  Set-PvsOverrideVersion  Set-PvsServer  Set-PvsServerBiosBootstrap  Set-PvsServerBootstrap  Set-PvsServerStore  Set-PvsSite  Set-PvsSiteView  Set-PvsStore  Set-PvsUpdateTask  Set-PvsVirtualHostingPool  Set-PvsXDSite  Start-PvsAutoUpdate  Start-PvsCreateDisk  Start-PvsDeviceBoot  Start-PvsDeviceDiskTempVersionMode  Start-PvsDeviceReboot  Start-PvsDeviceShutdown  Start-PvsDeviceUpdateBdm  Start-PvsDisplayMessage  Start-PvsReportBug  Start-PvsStreamService  Start-PvsUpdateTask  Stop-PvsCreateDisk  Stop-PvsDeviceDiskTempVersionMode  Stop-PvsStreamService  Stop-PvsTask  Stop-PvsUpdateTask  Test-PvsDirectory  Unlock-PvsAllDisk  Unlock-PvsDisk  Update-PvsInventory", 
            "title": "Short cmdlet list"
        }, 
        {
            "location": "/#cmdlet-by-object-type", 
            "text": "", 
            "title": "Cmdlet by Object Type"
        }, 
        {
            "location": "/#many", 
            "text": "Clear-PvsConnection  Get-PvsAuditActionParameter  Get-PvsAuditActionProperty  Get-PvsAuditActionSibling  Get-PvsAuditTrail  Get-PvsConnection  Get-PvsExists  Reset-PvsDatabase  Set-PvsConnection", 
            "title": "Many"
        }, 
        {
            "location": "/#authgroup", 
            "text": "Get-PvsAuthGroup  Get-PvsAuthGroupUsage  Grant-PvsAuthGroup  New-PvsAuthGroup  Remove-PvsAuthGroup  Revoke-PvsAuthGroup  Set-PvsAuthGroup", 
            "title": "AuthGroup"
        }, 
        {
            "location": "/#ceipdata", 
            "text": "Get-PvsCeipData  Get-PvsUploadCeip  New-PvsCeipData  Set-PvsCeipData", 
            "title": "CeipData"
        }, 
        {
            "location": "/#cisdata", 
            "text": "Get-PvsCisData  New-PvsCisData  Set-PvsCisData", 
            "title": "CisData"
        }, 
        {
            "location": "/#collection", 
            "text": "Get-PvsCollection  Get-PvsMinimumLastAutoAddDeviceNumber  New-PvsCollection  Remove-PvsCollection  Set-PvsCollection", 
            "title": "Collection"
        }, 
        {
            "location": "/#device", 
            "text": "Add-PvsDeviceToDomain  Add-PvsDeviceToView  Copy-PvsDeviceProperties  Disable-PvsDeviceDiskLocator  Enable-PvsDeviceDiskLocator  Export-PvsOemLicenses  Get-PvsDevice  Get-PvsDeviceBootstrap  Get-PvsDeviceCount  Get-PvsDeviceDiskLocatorEnabled  Get-PvsDeviceDiskTempVersion  Get-PvsDeviceInfo  Get-PvsDevicePersonality  Get-PvsDeviceStatus  Import-PvsDevices  Import-PvsOemLicenses  Invoke-PvsActivateDeviceMAK  Invoke-PvsMarkDown  Move-PvsDeviceToCollection  New-PvsDevice  New-PvsDeviceWithPersonalvDisk  Remove-PvsDevice  Remove-PvsDeviceDiskCacheFile  Remove-PvsDeviceFromDomain  Remove-PvsDeviceFromView  Reset-PvsDeviceForDomain  Set-PvsDevice  Set-PvsDeviceBootstrap  Set-PvsDevicePersonality  Start-PvsDeviceBoot  Start-PvsDeviceDiskTempVersionMode  Start-PvsDeviceReboot  Start-PvsDeviceShutdown  Start-PvsDeviceUpdateBdm  Start-PvsDisplayMessage  Stop-PvsDeviceDiskTempVersionMode", 
            "title": "Device"
        }, 
        {
            "location": "/#disk", 
            "text": "Add-PvsDiskToUpdateTask  Add-PvsDiskVersion  Copy-PvsDiskProperties  Dismount-PvsDisk  Export-PvsDisk  Get-PvsCreateDiskStatus  Get-PvsDisk  Get-PvsDiskInfo  Get-PvsDiskInventory  Get-PvsDiskUpdateDevice  Get-PvsDiskUpdateStatus  Get-PvsDiskVersion  Get-PvsMaintenanceVersionExists  Get-PvsMountedDisk  Get-PvsMountedDriveLetter  Get-PvsNewDiskVersion  Get-PvsUndefinedDisk  Get-PvsVirtualHostingPool  Import-PvsDisk  Invoke-PvsPromoteDiskVersion  Invoke-PvsRevertDiskVersion  Merge-PvsDisk  Mount-PvsDisk  New-PvsDiskMaintenanceVersion  New-PvsDiskUpdateDevice  New-PvsVirtualHostingPool  Remove-PvsDiskFromUpdateTask  Remove-PvsDiskUpdateDevice  Remove-PvsDiskVersion  Remove-PvsVirtualHostingPool  Set-PvsDisk  Set-PvsDiskUpdateDevice  Set-PvsDiskVersion  Set-PvsOverrideVersion  Set-PvsVirtualHostingPool  Start-PvsCreateDisk  Stop-PvsCreateDisk  Unlock-PvsAllDisk  Unlock-PvsDisk  Update-PvsInventory", 
            "title": "Disk"
        }, 
        {
            "location": "/#disklocator", 
            "text": "Add-PvsDiskLocatorToDevice  Get-PvsDiskLocator  Get-PvsDiskLocatorCount  Get-PvsDiskLocatorLock  New-PvsDiskLocator  Remove-PvsDiskLocator  Remove-PvsDiskLocatorFromDevice  Set-PvsDiskLocator", 
            "title": "DiskLocator"
        }, 
        {
            "location": "/#farm", 
            "text": "Export-PvsAuditTrail  Get-PvsFarm  Get-PvsXDSite  Set-PvsFarm  Set-PvsXDSite", 
            "title": "Farm"
        }, 
        {
            "location": "/#farmview", 
            "text": "Get-PvsFarmView  New-PvsFarmView  Remove-PvsFarmView  Set-PvsFarmView", 
            "title": "FarmView"
        }, 
        {
            "location": "/#server", 
            "text": "Copy-PvsServerProperties  Get-PvsDirectory  Get-PvsServer  Get-PvsServerBiosBootstrap  Get-PvsServerBootstrap  Get-PvsServerBootstrapName  Get-PvsServerCount  Get-PvsServerInfo  Get-PvsServerName  Get-PvsServerStatus  Get-PvsServerStore  Get-PvsServerStoreActiveDeviceCount  Invoke-PvsRebalanceDevices  Move-PvsServerToSite  New-PvsDirectory  New-PvsServer  Remove-PvsDirectory  Remove-PvsServer  Remove-PvsServerStore  Restart-PvsStreamService  Set-PvsServer  Set-PvsServerBiosBootstrap  Set-PvsServerBootstrap  Set-PvsServerStore  Start-PvsAutoUpdate  Start-PvsReportBug  Start-PvsStreamService  Stop-PvsStreamService  Test-PvsDirectory", 
            "title": "Server"
        }, 
        {
            "location": "/#site", 
            "text": "Get-PvsSite  Get-PvsStoreSharedOrServerPath  New-PvsSite  Remove-PvsSite  Set-PvsSite", 
            "title": "Site"
        }, 
        {
            "location": "/#siteview", 
            "text": "Get-PvsSiteView  New-PvsSiteView  Remove-PvsSiteView  Set-PvsSiteView", 
            "title": "SiteView"
        }, 
        {
            "location": "/#store", 
            "text": "Get-PvsStore  Get-PvsStoreFreeSpace  New-PvsStore  Remove-PvsStore  Set-PvsStore", 
            "title": "Store"
        }, 
        {
            "location": "/#system", 
            "text": "Get-PvsADAccount  Get-PvsGroup  Get-PvsLocalServer  Get-PvsVersion", 
            "title": "System"
        }, 
        {
            "location": "/#task", 
            "text": "Clear-PvsTask  Get-PvsTask  Get-PvsTaskStatus  Stop-PvsTask", 
            "title": "Task"
        }, 
        {
            "location": "/#updatetask", 
            "text": "Get-PvsUpdateTask  New-PvsUpdateTask  Remove-PvsUpdateTask  Set-PvsUpdateTask  Start-PvsUpdateTask  Stop-PvsUpdateTask", 
            "title": "UpdateTask"
        }, 
        {
            "location": "/#error-codes", 
            "text": "For the Citrix.PVS.SnapIn, if an error occurs, aPvsException will be in the Exception member of the $error.  The members of a PvsException are:  InnerException: The exception that occured. Thisexception maybe an EAException or other standard Exception.  ToString(): Has the formatted full Message of theInnerException.  If the InnerException GetType().Name equals\"EAException\", then The members of it are:  returnCode: The number, as shown below in the Errorcodes. The name of the error, for example \"NotImplemented\", is notincluded in the EAException.  Message: The message, as shown below in the Errorcodes. The [v1], [v2], [v3], [v4], and [v5] will be replaced with values asrequired.  Details: Has the Details for the EAException ifthere are any. OtherException, ManagementInterfaceError and PvsStatusExceptionwill have Details.  ToString(): Has the Message as shown below in theError codes. If there is Details, it will be returned or included, and ifpartialReturn, they will be included.  partialReturn: Might have a list of EAExceptionobjects if any of the items processed during the command had any issues.  Severity: Can have the values Critical, Error, Warningor Duplicate.  Source: Has the value that is displayed in theConsole as a Title or Type for the error.   0 Success: The command succeeded.  1 NotImplemented: The [v1] feature has not beenimplemented.  2 InvalidCommand: The [v1] command does not exist.  3 InvalidField: The [v1] field does not exist.  4 InvalidFieldFormat: The [v1] field is notformatted properly, the correct format is [v2].  5 InvalidParameter: The [v1] parameter is not valid.  6 InvalidParameterFormat: The [v1] parameter is notformatted property, the correct format is [v2].  7 ReadOnlyField: Unable to change the [v1] fieldbecause it is read-only.  8 RequiredFieldMissing: The required [v1] field ismissing.  9 RequiredFieldsMissing: The required [v1] or [v2]field is missing.  10 RequiredParameterMissing: The required [v1]parameter is missing.  11 RequiredParametersMissing: The required [v1] or[v2] parameter is missing.  12 InternalIdAndNameFieldsMustBeDefined: An internalerror occurred. The [v1] field is not the next FieldSettings object after theID.  13 NoFarmAccess: The domain/user does not haveaccess to the Farm.  14 InvalidForeignKeyValue: The [v1] field with value[v2] is an invalid foreign key.  15 SetupError: The system was not configuredcorrectly.  16 Executing: The [v1] command can only be calledone at a time. Wait for the command to finish before running again.  17 NoDiskMapped: A vDisk has not yet been mapped.  18 DatabaseError: A database error occurred.  19 DuplicateKey: To avoid creating a duplicate key,the Add or Set command was cancelled.  20 DatabaseErrorMissed: An internal error occurred.An uncaught database error occurred.  21 AddCommandFailed: No objects were added duringthe last 'Add' command.  22 InsufficientPrivileges: Access denied. Theappropriate privileges are not assigned to perform this task.  23 ZeroObjectsAffected: No object was added,updated, or deleted in the last operation.  24 OtherException: An unexpected MAPI erroroccurred.  25 InvalidFieldLength: The [v1] field value is toolong, maximum length is [v2].  26 InvalidFieldValueMinMax: The [v1] field value isinvalid, the minimum is [v2] and the maximum is [v3].  27 InvalidFieldValue: The [v1] field can only havevalues [v2] or [v3].  28 TooManyParameters: More parameters were specifiedthan permitted.  29 TooFewParameters: Not enough identifyingparameters specified.  30 FollowingParametersMissing: To use the [v1]parameter, [v2] or [v3] must also be used.  31 InconsistentData: The action is canceled becausethe Store directory date/times does not match. Update the Store directories tomatch.  32 DatabaseOpenFailed: Unable to contact thedatabase server. Ensure Provisioning Services is configured correctly.  33 DatabaseVersionWrong: The wrong database versionis being used.  Found version number: [v1] Expected version number:[v2]  34 DatabaseVersionNotFound: The database versionnumber does not exist or was not found. Ensure Provisioning Services isconfigured correctly.  35 SomeRequiredParametersMissing: Requiredparameters are missing.  36 PartialError: The following items failed:  item1 Error message...  item2 Error message...  37 NoItemsToProcess: There are no items to process.  38 NoDefaultCollectionDefined: Unable to add aDevice until a default Collection is set.  39 NoDefaultSiteDefined: A default Site is not set,no Devices can be added.  40 InvalidCollection: The specified Collection doesnot exist.  41 InvalidAuthGroup: The specified AuthGroup doesnot exist.  42 InvalidGroup: The specified Group does not exist.  43 InvalidDevice: The specified Device does notexist.  44 InvalidDiskLocator: The specified vDisk does notexist.  45 InvalidServer: The specified Server does notexist.  46 InvalidServerSite: Server specified is not in theSite specified.  47 InvalidStoreSite: Store specified is not for theSite specified.  48 InvalidSiteView: The specified Site View does notexist.  49 InvalidSite: The specified Site does not exist.  50 InvalidDeviceDiskLocator: The specified Device orvDisk does not exist.  51 InvalidDeviceImport: Import failed because thefile must have Device Name, Mac Address, Site Name, and Collection Name, andthey must be tab or comma-delimited.  52 InvalidServerFrom: The Server to copy [v1]=[v2]was not found.  53 InvalidServerTo: No Server to copy to ([v1]=[v2])was found.  54 InvalidDeviceFrom: The Device to copy [v1]=[v2]was not found.  55 InvalidDeviceTo: No Devices to copy to are found.  56 InvalidDiskFrom: The vDisk to copy [v1]=[v2] wasnot found.  57 InvalidDiskTo: No vDisk to copy to ([v1]=[v2])was found.  58 InvalidDiskPath: The path '[v1]' to the vDiskfile is not found.  59 VDiskFileNotFound: [v1]: vDisk file was notfound.  60 InvalidDiskServer: There is no Server that canserve the vDisk [v1] or the Store to which this vDisk belongs. Verify that oneor more Servers belonging to the Store are online and that there is sufficientfree space for the operation you are attempting.  61 InvalidDiskForServer: Server [v1] cannot accessall versions of vDisk [v2], the vDisk was updated on at least one other Server.  62 SameSiteRequired: Objects within the same Sitemust be selected.  63 TooFewFields: Not enough fields for a record.  64 ADerrorDC: Unable to connect to the DomainController (if any) or the default rootDSE. Error code: [v1], message: [v2],provider: [v3].  65 ADerrorOU: Unable to get the Organizational Unitsetting (if any). Error code: [v1], message: [v2], provider: [v3].  66 ADerrorDefaultContainer: Unable to get thedefault computer accounts container (default location is Active Directoryroot> Computers). Error code: [v1], message: [v2], provider: [v3].  67 ADerrorCreate: Unable to create the computeraccount in Active Directory. Ensure the account does not already exist and thatthe appropriate permissions are available to perform this task. Error code:[v1], message: [v2], provider: [v3].  68 ADerrorNewAccount: Unable to get the newlycreated Active Directory computer account. Error code: [v1], message: [v2],provider: [v3].  69 ADerrorSam: Unable to set the Active DirectorysamAccountName property. Ensure the appropriate permissions exist to performthis task. Error code: [v1], message: [v2], provider: [v3].  70 ADerrorUserAccount: Unable to set the ActiveDirectory userAccountControl property. Ensure the appropriate permissions existto perform this task. Error code: [v1], message: [v2], provider: [v3].  71 ADerrorSave: Unable to save Active Directorychange. Ensure the appropriate permissions exist to perform this task. Errorcode: [v1], message: [v2], provider: [v3].  72 ADerrorSetPassword: Unable to set a new passwordfor this user account. Ensure the appropriate permissions exist to perform thistask. Error code: [v1], message: [v2], provider: [v3].  73 ADerrorAddTrustee: Unable to add trustee (ifany). Error code: [v1], message: [v2], provider: [v3].  74 ADerrorEnableAccount: Unable to enable the ActiveDirectory account. Error code: [v1], message: [v3], provider: [v2].  75 ADerrorAlreadyExists: The computer name isalready in use. Error code: [v1], message: [v3], provider: [v2]. Select aunique name for this machine.  76 ADerrorGeneral: A general Active Directory erroroccurred. Error code: [v1], message: [v2], provider: [v3].  77 ADerrorDirectorySearch: Unable to find ActiveDirectory items meeting the search criteria entered. Error code: [v1], message:[v2], provider: [v3].  78 ADerrorSearchComputerAccount: Unable to performthe computer accounts search. Error code: [v1], message: [v2], provider: [v3].  79 ADerrorComputerAccountNotFound: Specifiedcomputer account not found. Error code: [v1], message: [v2], provider: [v3].  80 ADerrorComputerAccountHold: This computer accountis currently unavailable. Ensure that Active Directory is running properly.Error code: [v1], message: [v2], provider: [v3].  81 ADerrorComputerAccountMove: Failed to move thecomputer account to the target organizational unit set (also returned if callerlacks permission). Error code: [v1], message: [v2], provider: [v3].  82 ADerrorDelete: Unable to delete this computeraccount. Ensure the appropriate permissions exist to perform this task. Errorcode: [v1], message: [v2], provider: [v3].  83 ADerrorPasswordGeneration: Unable to generatethis password. Ensure the appropriate permissions exist to perform this task.  84 MapDiskNoDriver: Unable to map vDisk because adriver was not found.  85 MapDiskDeniedByServer: Unable to map the vDisk.Mapping was denied by the Server.  86 MapDiskLocalAccessDenied: Unable to map thevDisk. Denied local access.  87 MapDiskMiniportError: Unable to map vDisk becauseof a Miniport error.  88 UnmapDiskFailed: Failed to unmap a vDisk.  89 DuplicateDisk: The vDisk [v1] already exists on[v2] at [v3].  90 DuplicateDiskLocator: A DiskLocator: [v1] alreadyexists on Site: [v2].  91 DiskCreationInProgress: The vDisk [v1] is beingcreated on [v2] at [v3].  92 InvalidServerStore: A database integrity erroroccurred. The Server is not set to deliver vDisks from the Store, but shouldbe.  93 InvalidStore: The specified Store does not exist.  94 InvalidFarmView: Farm View specified does notexist.  95 InvalidStorePath: Store path is empty.  96 ManagementInterfaceError:  Management Interface: Undefined error.  Management Interface: Database interface isinaccessible.  Management Interface: Database interface library isinaccessible.  Management Interface: The database access library isa version incompatible with the Management Server.  Management Interface: Database interface library isinvalid.  Management Interface: Database interface could notbe created.  Management Interface: Database could not be opened.  Management Interface: Database is in use.  Management Interface: Database error occurred.  Management Interface: Not implemented.  Management Interface: Registry entry was not found.  Management Interface: Request was not created.  Management Interface: Operating System erroroccurred.  Management Interface: vDisk error.  Management Interface: vDisk header is incomplete.  Management Interface: vDisk footer is incomplete.  Management Interface: vDisk boot record isincomplete.  Management Interface: vDisk boot sector isincomplete.  Management Interface: vDisk size is below theminimum.  Management Interface: vDisk size is above themaximum.  Management Interface: vDisk boot record template isinaccessible.  Management Interface: vDisk boot sector template isinaccessible.  Management Interface: vDisk lock was not found.  Management Interface: vDisk has exclusive lock.  Management Interface: vDisk has shared lock.  Management Interface: vDisk lock error.  Management Interface: vDisk format is incompatible.  Management Interface: vDisk prefooter is incomplete.  Management Interface: vDisk creation is in progress.  Management Interface: vDisk creation information wasnot found.  Management Interface: vDisk creation cancellationwas requested.  Management Interface: vDisk file was not found.  Management Interface: vDisk file path was not found.  Management Interface: vDisk file access was denied.  Management Interface: Cancelled.  Management Interface: Registry key for the productis inaccessible.  Management Interface: Registry key for theinstallation folder is inaccessible.  Management Interface: Registry key for the managementinterface is inaccessible.  Management Interface: Registry key for the databasepath is inaccessible.  Management Interface: Registry key for themanagement interface IP address is inaccessible.  Management Interface: Buffer size is too small.  Management Interface: Buffer size is too large.  Management Interface: Unknown error.  Management Interface: Remote Server failed to relaya request.  Management Interface: Remote Server is not servicingthe Device.  Management Interface: Remote Server or Devicerefused the request.  Management Interface: Local Server failed tocomplete a request to a Server or Device.  Management Interface: Local Server failed tocomplete a request to a Server.  Management Interface: Remote requests were disabledbecause of an initialization error.  Management Interface: Remote request failed.  Management Interface: Remote request timed out.  Management Interface: Remote request result was notfound.  Management Interface: Remote request receiver failedto initialize.  Management Interface: Management command failed forall objects.  Management Interface: Failed to get the presharedkey in secure version.  Management Interface: VHD Error.  Management Interface: vDisk properties were lost.  Management Interface: Insufficient Memory.  Management Interface: The network path was notfound.  Management Interface: The network name cannot befound.  Management Interface: File already exists.  Management Interface: The geometry of the vDisk isnot accessible.  Management Interface: Unable to create the vDiskbecause the store media is read-only.  Management Interface: vDisk file is being used byanother process.  97 ServerTimeout: Server did not respond to arequest in time.  98 NotFound: [v1] not found.  99 AccountRetrieve: Account information for user[v1] was not found.  100 ActiveDevice: The task cannot be performed onactive Devices. Shut down the Devices before attempting to perform the task.  101 ActiveDiskLocator: The task cannot be performedon active vDisks. Shut down the Devices that are using the vDisks beforeattempting to perform the task.  102 AssignedDiskLocator: Unable to delete a vDiskthat is currently assigned to a Device. Unassign all Devices, then delete thevDisk.  103 ActiveServer: The task cannot be performed onactive Servers. Shut down the Servers before attempting to perform the task.  104 NotEnoughFreeDiskSpace: There is not enough freedisk space to create the vDisk.  105 InvalidDiskName: The vDisk name has one or moreinvalid characters. The invalid characters are  <  > | \" \\ / : * ?.  106 CannotDeleteLastAuthGroup: Deleting the lastAuthorization Group causes the system to be inoperable.  107 CannotDeleteUsedAuthGroup: An AuthorizationGroup that is currently in use cannot be deleted.  108 ServerStartFailed: The Server did not startsuccessfully. Ensure the appropriate permissions exist for the service account.  109 ServerStopFailed: The Server did not stopsuccessfully.  110 LockOwnerNotFound: The Device that owns the lockwas not found, the vDisk was not unlocked.  111 PossiblySharedVDisk: Unable to delete File [v1].It is possible that the file is being referenced in other Sites or Stores.  112 StorePathInaccessible: The Store path [v1] isinaccessible.  113 InvalidAction: The [v1] action does not exist.  114 InvalidObjectType: The [v1] objectType does notexist.  115 TooManyRecords: The amount of data returnedusing Get is too large. Use GetFirst and GetNext instead of Get.  116 InvalidUserGroup: The specified UserGroup doesnot exist.  117 InvalidAuditAction: The specified AuditActiondoes not exist.  118 LoginFailed: The database login failed. Ensurethe appropriate permissions exist to access the database.  119 DatabaseConnectionError: Unable to connect tothe database. Restore the connection in order to manage the farm.  120 CreateTriggersParsing: Unable to parse thedatabase script 'CreateTriggers' at: [v1]  121 CreateStoredProcParsing: Unable to parse thedatabase script 'CreateStoredProcedures' at: [v1]  122 MediaIsReadOnly: Management Interface: Unable tocreate the vDisk because the store media is read-only.  123 ConnectedDeviceForVirtualHostingPool: Unable todelete this VM from a machine catalog because it is connected to a DeliveryGroup.  124 ADerrorDN: Unable to get the distinguishedNameproperty. Ensure the appropriate Active Directory permissions exist to performthis task. Error code: [v1], message: [v2], provider: [v3].  125 ADerrorGetSecDes: Unable to get the ActiveDirectory Security Descriptor property. Error code: [v1], message: [v2],provider: [v3].  126 ADerrorSetSecDes: Unable to set the ActiveDirectory Security Descriptor property. Ensure the appropriate permissionsexist to perform this task. Error code: [v1], message: [v2], provider: [v3].  127 ADerrorDNSHostName: Unable to set the DNS HostName property (dNSHostName). Ensure the appropriate permissions exist toperform this task. Error code: [v1], message: [v2], provider: [v3].  128 ADerrorDisplayName: Unable to set thedisplayName property. Error code: [v1], message: [v2], provider: [v3].  129 ADerrorBind: This device was unable to bind tothe Domain Controller. Ensure the Domain Controller is running. Error code:[v1], message: [v2], provider: [v3].  130 ADerrorGetSPN: Unable to get an Active DirectoryService Principal Name. Error code: [v1], message: [v2], provider: [v3].  131 ADerrorWriteSPN: Unable to write the ActiveDirectory Service Principal Name. Error code: [v1], message: [v2], provider:[v3]  132 ADerrorSearch: Unable to perform the requestedSearch. Error code: [v1], message: [v2], provider: [v3].  133 ADerrorMoveToOU: Unable to move the ActiveDirectory account to the requested Organizational Unit. Ensure the appropriatepermissions exist to perform this task. Error code: [v1], message: [v2],provider: [v3].  134 ADerrorDeleteAccount: Unable to delete thiscomputer account. Ensure the appropriate permissions exist to deleteaccounts.  Error code: [v1], message: [v2], provider: [v3].  135 ADerrorBadParameters: Incorrect parameters sentto Provisioning Services from  Studio. Error code: [v1], message:[v2], provider: [v3].  136 VolumeInUse: The volume is being used.  137 VolumeAccessDenied: Volume access is denied.  138 VolumeUnknownVolume: An unknown volume wasspecified.  139 VolumeGeneralError: An error occured whenexecuting a volume command.  140 MaintenanceServerError: Action cannot beperformed, [v1] is a maintenance server for [v2].  141 NotManagedStore: The action cannot be performedbecause the store is not managed.  142 PathNotExist: The path does not exist on thegiven Server.  143 PathNoCreatePermission: The path does not havethe appropriate create permissions.  144 PathNoReadPermission: The path does not have theappropriate read permissions.  145 PathNoWritePermission: The path does not havethe appropriate write permissions.  146 PathNoDeletePermission: The path does not havethe appropriate delete permissions.  147 IPCProtocolError: An internal error occurred. Afield is missing from the process communication protocol data.  148 InvalidStoreServer: No active Server can servethe Store [v1].  149 ConstraintCheck: A database constraint caused anAdd or Update to be stopped.  150 VamtNotFound: The Volume Activation ManagementTool cannot be found.  151 ADerrorCannotGetObjectSID: Cannot returnobjectSID. Error code: [v1], message: [v2], provider: [v3].  152 ADerrorCannotDisableAccount: Cannot disable theActive Directory account at this time. Ensure that all account users are loggedoff before attempting to disable the account. Error code: [v1], message: [v2],provider: [v3].  153 ADerrorFailedToChangePassword: Unable to resetthe machine account password. Ensure the appropriate permissions exist toperform this Active Directory task. Error code: [v1], message: [v2], provider:[v3].  154 ADerrorFailedToCopyDCName: Unable to copy theDomain Controller name. Error code: [v1], message: [v2], provider: [v3].  155 ADerrorDCNameIsTooLong: The Domain Controllername entered exceeds the maximum character length of [v4]. Error code: [v1],message: [v2], provider: [v3].  156 SiteMakUserPassword: The Site's makUser andmakPassword fields must have values.  157 VamtError: See the log for additional errordetails.  158 InactiveDevice: Device specified is not active.  159 DiskIsInPrivateMode: This task cannot beperformed because the vDisk is in private image mode.  160 AlreadyInChangeMode: Unable to complete this operation,vDisk is already in Maintenance, Merge, or Test mode.  161 CannotCreateMaintenanceDisk: Cannot createmaintenance vDisk.  162 CannotEnterMaintenanceMode: To place a vDisk inMaintenance Mode requires using a Server. No Server is available at this time.  163 NotInMaintenanceMode: Unable to perform thisaction because the vDisk is not in Maintenance Mode.  164 NoVersionForMaintenanceMode: Unable to placethis vDisk in Maintenance Mode because the highest version is not found.  165 NoVersionFound: Unable to perform this actionbecause a version record was not found in the database.  166 Obsolete: The [v1] feature is obsolete.  167 DatabaseWarning: A database warning occurred.  168 DatabaseSQL: A database SQL error occurred.  169 DatabaseResource: A database resource erroroccurred.  170 InvalidUpdateTask: The specified UpdateTask doesnot exist.  171 InvalidVirtualHostingPool: The specifiedVirtualHostingPool does not exist.  172 RemoteCommand: An exception occurred executing acommand on a remote Server.  173 IpcNotConfigured: An internal error occurred.The process communication interface must be configured before executing remotecommands.  174 DiskAlreadSetForUpdate: The vDisk is already setfor Update with Device [v1] in Site [v2].  175 InvalidDiskVersion: The vDisk Version specifiedis not valid.  176 HostResolution: Could not resolve the host namefor [v1].  177 InProcess: The remote task is taking longer thanexpected. TaskId: [v1]  178 DateMustBeInFuture: The [v1] must be in thefuture.  179 InvalidRemoteReturn: The remote command did notreturn valid data.  180 InvalidParameterValueMinMax: The [v1] parametervalue is invalid, the minimum is [v2] and the maximum is [v3].  181 InvalidParameterNotNumeric: The [v1] parametervalue is invalid, it is not numeric.  182 InvalidParameterNotGuid: The [v1] parametervalue is invalid, it is not a GUID.  183 PassThroughMessage: [v1]  184 DiskUpdateNotEnabled: The Automatic vDisk Updateoption must be enabled and the vDisk Update Server must be defined. Set thesein the Site properties.  185 PvsStatusException:  Windows API error occurred, number 0xE000FFFF.  SQL error occurred, number 0xE001FFFF.  Manager error occurred. Error number 0xE002FFFF.  StreamProcess error occurred. Error number0xE003FFFF.  Stream Database error occurred. Error number0xE004FFFF.  Management error occurred. Error number 0xE005FFFF.  Shutdown in progress; request ignored. Error number0xE0050001.  CreateDiffDisk: Malformed packet; missing one ormore arguments. Error number 0xE0050002.  DeleteDiffDisk: Malformed file name; cannot parsedirectory and name. Error number 0xE0050003.  DeleteDiffDisk: Malformed packet; missing one ormore arguments. Error number 0xE0050004.  IPC: Failed to read mtGetLocks parameters. Errornumber 0xE0050005.  IPC: Failed to read mtGetLockStatus parameters.Error number 0xE0050006.  IPC: Failed to read mtLock parameters. Error number0xE0050007.  IPC: Failed to read mtUnlock parameters. Errornumber 0xE0050008.  MergeDisk event: Malformed packet; unknown messagetype. Error number 0xE0050009.  MergeDisk event: Unknown target request ID. Errornumber 0xE005000A.  MergeDisk event: Malformed packet; missing one ormore arguments. Error number 0xE005000B.  MergeDisk: Malformed packet; missing one or morearguments. Error number 0xE005000C.  ValidateDisk: Malformed packet; missing one or morearguments. Error number 0xE005000D.  VHD Library error occurred. Error number 0xE006FFFF.  VHD Library: Not implemented. Error number0xE0060001.  VHD Library: Handle pointer is invalid. Error number0xE0060002.  VHD Library: Length of the path exceeds the limit ofthe file system. Error number 0xE0060003.  VHD Library: Name is empty. Error number 0xE0060004.  VHD Library: Length of the name exceeds the limit ofthe file system. Error number 0xE0060005.  VHD Library: Size of a parameter was too big. Errornumber 0xE0060006.  VHD Library: Size of a parameter was too small.Error number 0xE0060007.  VHD Library: The media is write protected. Errornumber 0xE0060008.  VHD Library: Type is invalid. Error number0xE0060009.  VHD Library: Footer is incomplete. Error number0xE006000A.  VHD Library: Failed to read or write the entire VHDHeader. Error number 0xE006000B.  VHD Library: Failed to read or write the entire VHDBlock Allocation Table. Error number 0xE006000C.  VHD Library: Failed to read or write all of the VHDproperties. Error number 0xE006000D.  VHD Library: VHD footer is corrupt. Error number0xE006000E.  VHD Library: VHD header is corrupt. Error number0xE006000F.  VHD Library: Failed to read or write the VHDobjects. Error number 0xE0060010.  VHD Library: Destination string is too small. Errornumber 0xE0060011.  VHD Library: Destination string pointer is NULL.Error number 0xE0060012.  VHD Library: Source string pointer is NULL. Errornumber 0xE0060013.  VHD Library: Offset is before the beginning of theVHD data area. Error number 0xE0060014.  VHD Library: Offset is after the end of the VHD dataarea. Error number 0xE0060015.  VHD Library: Failed to allocate memory because itwas unavailable. Error number 0xE0060016.  VHD Library: Caller cancelled the last createrequest. Error number 0xE0060017.  VHD Library: Failed to read or write all of the dataas requested. Error number 0xE0060018.  VHD Library: Failed to create a Universal UniqueIdentification for a VHD. Error number 0xE0060019.  VHD Library: Failed to find the VHD properties.Error number 0xE006001A.  VHD Library: Failed to read or write the entiresector bitmap within a block. Error number 0xE006001B.  VHD Library: Failed to read or write the entireblock. Error number 0xE006001C.  VHD Library: Failed to open the file that representsthe VHD. Error number 0xE006001D.  VHD Library: Requested number of bytes exceeds theremainder of bytes in a block. Error number 0xE006001E.  VHD Library: Accessed past end of the VHD file. Errornumber 0xE006001F.  VHD Library: Differencing VHD Unique ID (UUID)differs to parent VHD Unique ID. Error number 0xE0060020.  VHD Library: Differencing VHD timestamp differs toparent VHD last modified time. Error number 0xE0060021.  VHD Library: Failed to read or write the entire VHDBlock Allocation Table Map. Error number 0xE0060022.  IPC error occurred. Error number 0xE007FFFF.  There was an unknown transmission error. Errornumber 0xE0070001.  No response received for successful send. Errornumber 0xA0070002.  Message processor timed out. Error number0xE0070003.  Retry limit exhausted. Error number 0xE0070004.  Message recipient task is not active. Error number0xE0070005.  Socket send/recv cannot be retried. Error number0xE0070006.  Port shutdown due to connection opens exhausted.Error number 0xE0070007.  Port shutdown due to flood of junk packets. Errornumber 0xE0070008.  Port shutdown due to receive retries exhausted.Error number 0xE0070009.  Transport does not support fragmentation. Errornumber 0xE007000A.  One or more packet fragments are missing. Errornumber 0xE007000B.  Error sending message. Error number 0xE0070100.  Message acknowledgement timeout. Error number0xA0070101.  Command timeout. Error number 0xE0070102.  Not implemented. Error number 0xE0070103.  Error verifying message port number, must be >= 0and  < = 65535. Error number 0xE0070104.  Command initialization failed. Error number0xE0070105.  Start of IPC failed. Error number 0xE0070106.  Stop of IPC failed. Error number 0xE0070107.  Memory allocation failure. Error number 0xE0070108.  Internal error, failure to wait long enough for acommunication response to be received. Error number 0xE0070109.  Disk Update error occurred. Error number 0xE008FFFF.  Inventory error occurred. Error number 0xE009FFFF.  Inventory Table: Failed to start thread. Errornumber 0xE0090001.  Inventory Table: Invalid Entry. Error number0xE0090002.  Inventory Table: Failed to initialize inventory.Error number 0xE0090003.  Shutdown in progress; request ignored. Error number0xE0090004.  Get Disk Inventory: Parameters bad. Error number0xE0090033.  Populate database: Failed offline. Error number0xE0090065.  Populate database: Server get by name failed. Errornumber 0xE0090066.  Populate database: Uninitialized. Error number 0xE0090067.  Populate database: Get host name failed. Errornumber 0xE0090068.  Populate database: Char conversion failed. Errornumber 0xE0090069.  Populate database: Initialization failed. Errornumber 0xE009006A.  Populate database: Database open failed. Errornumber 0xE009006B.  Populate database: Get all disk locators failed.Error number 0xE009006C.  Inventory Table: Not yet implemented. Error number0xE009006D.  Notifier error occurred. Error number 0xE00AFFFF.  MAPI error occurred. Error number 0xE00BFFFF.  186 TaskCancelled: Task [v1] is cancelled and is notrunning.  187 TaskCompleted: Task [v1] has been completed andis not running.  188 TaskInProgress: Task [v1] is running and cannotbe processed.  189 InvalidTask: The specified Task does not exist.  190 InventoryServerCannotContactDatabase: TheInventory Service cannot contact the database.  191 ServerOffline: The Server is offline.  192 ServerStateUnknown: The Server state is unknown.  193 HighestVersionIsPending: Could not complete thisaction because the  highest vDisk version is still pending. Thescheduled date for the version has not occurred yet.  194 MergeInvalidWithCurrentVersions: Merge is notvalid with the current versions that exist.  195 DiskInventoryError: vDisk versions are not up todate on all Servers that access this vDisk. Update all Servers with the latestversions of the vDisk files.  196 VDiskFileNotFoundWarning: [v1]: vDisk file wasnot found because it was deleted.  197 CannotAssignActiveServer: Stop the Server beforeattempting to assign the Server to a different site.  198 CannotAssignServerWithActiveDevice: Beforeattempting to assign the Server to a different site, shut down Devicesconnecting to the Server, then shut down the Server.  199 MappedDiskLocator: The vDisk is mapped andcannot be changed.  200 InvalidTemplateDevice: The Template Device mustbe a Production Device that does not have a Personal vDisk.  201 DeviceWithPersonalVDiskInvalid: Unable toprocess a Device that uses a personal vDisk.  202 CreatingDisk: Server is creating a vDisk sochange cannot be done.  203 AssignedDiskLocatorToDeviceWithPersonalvDisk:Unable to delete a vDisk if the vDisk is currently assigned to a Device thatuses a Personal vDisk. Unassign the Device, then delete the vDisk.  204 InvalidMacAddress: The MAC address for this VMis invalid. Configure the VM with a valid MAC address.  205 CannotGetMacFromHypervisor: The hypervisor didnot return the MAC address for this VM: [v1]  206 Win32SystemException: A system error occurred.  207 RemoteManagementIpCannotBeResolved: Unable toresolve the management IP for Server [v1].  208 LocalManagementIpNotSet: The management IP forlocal server [v1] is not set in registry IPC\\IPv4Address.  209 PerformVolumeMaintenanceTaskPermissions: Ensurethe Service Account user has the appropriate 'Perform volume maintenance task'permissions.  210 CannotLoginToVirtualHostingPool: Unable to logon to the virtual hosting pool [v1]. Ensure that the hypervisior server isrunning properly.  211 VirtualHostingPoolNotSetForDevice: ThevirtualHostingPoolId for device [v1] with bdmBoot must be set.  212 ActiveBdmBootDeviceCannotProcess: The BootDevice Manager [v1] did not process successfully.  213 CannotMovePvdDeviceToAnotherSite: Personal vDiskDevices cannot be moved to another site.  214 XenDesktopSiteInvalid: XenDesktop Site forDevices is not valid, the XenDesktop Site is: [v1]  215 XenDesktopServiceListOutOfDate: XenDesktop Site[v1] is not reachable, check that the Citrix PVS Soap Server service user hasXenDesktop permissions and network connectivity.  216 NoXenDesktopServiceForPersonalVDiskCapability:No XenDesktop service found for Personal vDisk capability.  217 InsufficientPermissionsToPreparePersonalVDisks:The user account for the Citrix PVS Soap Server has insufficient permissions toprepare Personal vDisks.  218 NotEnoughFreeDiskSpaceForManifest: There is notenough free disk space to create the manifest.  219 OperationCannotBeDoneOnlyPvdDevicesAssigned:Operation cannot be done, only Personal vDisk Devices are assigned.  220 DiskFormatCannotBeSetToVHD: The format cannot beset to VHD since no VHD vDisk file is found in the path, [v1], for Server,[v2].  221 DiskFormatCannotBeSetToVHDX: The format cannotbe set to VHDX since no VHDX vDisk file is found in the path, [v1], for Server,[v2].  222 TemporaryVersionIsSet: This task cannot beperformed because a temporary version is set.  223 DiskIsUsingPersistentCacheOnServer: A temporaryversion cannot be used for a vDisk that is using persistent cache on server.  224 UploadAlreadyInProgress: An upload is already inprogress by Server [v1].  225 FieldMustBeNull: Field [v1] must be null.  226 DuplicateData: Record already exists in [v1]table for Farm.  227 CisUploadTokenGenerateError: Error generatingupload token for My Citrix username [v1] ([v2]).  228 InvalidCredentials: The username or password isincorrect.  229 NoWriteAccessToFolders: No write access tofolders [v1] or [v2].  230 ReportCreationError: Error creating problemreport: [v1].  4100 ADerrorUnexpectedError: An unexpected ActiveDirectory related error occured. Ensure the appropriate permissions exist toperform this task. Error code: [v1], message: [v2], provider: [v3].", 
            "title": "Error codes"
        }, 
        {
            "location": "/#objects-in-the-citrixpvssnapin-namespace", 
            "text": "", 
            "title": "Objects, in the Citrix.PVS.SnapIn Namespace"
        }, 
        {
            "location": "/#pvsadaccount", 
            "text": "Read-Only Fields  string Domain: Domain the account is a member of.  string DomainController: The name of the DC used tocreate the host's computer account.  string Name: Name of the Device for the account.  string Sid: The value of the objectSID AD attributeof the same name for the Device's computer account.", 
            "title": "PvsADAccount"
        }, 
        {
            "location": "/#pvsauditaction", 
            "text": "Read-Only Fields  Guid Guid or AuditActionId: GUID of the action.  Guid ObjectId: GUID of the object of the action.  string ObjectName: Name of the object of the action.Max Length=1000  string Path: Path of the object of the action. Anexample is Site\\Collection for a Device. Default=\"\" Max Length=101  Guid SiteId: GUID of the Site for the object of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000  Guid SubId: GUID of the Collection or Store of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000  uint Type: Type of object that action was performedon. Values are: 1 (AuthGroup), 2 (Collection), 3 (Device), 4 (Disk), 5(DiskLocator), 6 (Farm), 7 (FarmView), 8 (Server), 9 (Site), 10 (SiteView), 11(Store), 12 (System), and 13 (UserGroup)", 
            "title": "PvsAuditAction"
        }, 
        {
            "location": "/#pvsauditactionparameter", 
            "text": "Read-Only Fields  Guid AuditActionId: GUID of the Audit Action usedfor Get and Set.  string Name or AuditParameterName: Name of theparameter. Max Length=50  string Value: Value of the parameter. MaxLength=1000", 
            "title": "PvsAuditActionParameter"
        }, 
        {
            "location": "/#pvsauditactionproperty", 
            "text": "Read-Only Fields  Guid AuditActionId: GUID of the Audit Action usedfor Get and Set.  string Name or AuditPropertyName: Name of theproperty. Max Length=50  string NewValue: New value of the Property.Default=\"\" Max Length=1000  string OldValue: Previous value of the Property.Default=\"\" Max Length=1000", 
            "title": "PvsAuditActionProperty"
        }, 
        {
            "location": "/#pvsaudittrail", 
            "text": "Read-Only Fields  uint Action: Name of the action taken. This is anumber that is converted to a string for display. Values are: 1 (AddAuthGroup),2 (AddCollection), 3 (AddDevice), 4 (AddDiskLocator), 5 (AddFarmView), 6(AddServer), 7 (AddSite), 8 (AddSiteView), 9 (AddStore), 10 (AddUserGroup), 11(AddVirtualHostingPool), 12 (AddUpdateTask), 13 (AddDiskUpdateDevice), 1001(DeleteAuthGroup), 1002 (DeleteCollection), 1003 (DeleteDevice), 1004(DeleteDeviceDiskCacheFile), 1005 (DeleteDiskLocator), 1006 (DeleteFarmView),1007 (DeleteServer), 1008 (DeleteServerStore), 1009 (DeleteSite), 1010 (DeleteSiteView),1011 (DeleteStore), 1012 (DeleteUserGroup), 1013 (DeleteVirtualHostingPool),1014 (DeleteUpdateTask), 1015 (DeleteDiskUpdateDevice), 1016(DeleteDiskVersion), 2001 (RunAddDeviceToDomain), 2002 (RunApplyAutoUpdate),2003 (RunApplyIncrementalUpdate), 2004 (RunArchiveAuditTrail), 2005(RunAssignAuthGroup), 2006 (RunAssignDevice), 2007 (RunAssignDiskLocator), 2008(RunAssignServer), 2009 (RunWithReturnBoot), 2010 (RunCopyPasteDevice), 2011(RunCopyPasteDisk), 2012 (RunCopyPasteServer), 2013 (RunCreateDirectory), 2014(RunCreateDiskCancel), 2015 (RunDisableCollection), 2016 (RunDisableDevice),2017 (RunDisableDeviceDiskLocator), 2018 (RunDisableDiskLocator), 2019(RunDisableUserGroup), 2020 (RunDisableUserGroupDiskLocator), 2021(RunWithReturnDisplayMessage), 2022 (RunEnableCollection), 2023(RunEnableDevice), 2024 (RunEnableDeviceDiskLocator), 2025(RunEnableDiskLocator), 2026 (RunEnableUserGroup), 2027(RunEnableUserGroupDiskLocator), 2028 (RunExportOemLicenses), 2029(RunImportDatabase), 2030 (RunImportDevices), 2031 (RunImportOemLicenses), 2032(RunMarkDown), 2033 (RunWithReturnReboot), 2034 (RunRemoveAuthGroup), 2035(RunRemoveDevice), 2036 (RunRemoveDeviceFromDomain), 2037 (RunRemoveDirectory),2038 (RunRemoveDiskLocator), 2039 (RunResetDeviceForDomain), 2040(RunResetDatabaseConnection), 2041 (RunRestartStreamingService), 2042(RunWithReturnShutdown), 2043 (RunStartStreamingService), 2044(RunStopStreamingService), 2045 (RunUnlockAllDisk), 2046 (RunUnlockDisk), 2047(RunServerStoreVolumeAccess), 2048 (RunServerStoreVolumeMode), 2049(RunMergeDisk), 2050 (RunRevertDiskVersion), 2051 (RunPromoteDiskVersion), 2052(RunCancelDiskMaintenance), 2053 (RunActivateDevice), 2054 (RunAddDiskVersion),2055 (RunExportDisk), 2056 (RunAssignDisk), 2057 (RunRemoveDisk), 2058(RunDiskUpdateStart), 2059 (RunDiskUpdateCancel), 2060 (RunSetOverrideVersion),2061 (RunCancelTask), 2062 (RunClearTask), 2063 (RunForceInventory), 2064RunUpdateBDM, 2065 (RunStartDeviceDiskTempVersionMode), 2066(RunStopDeviceDiskTempVersionMode), 3001 (RunWithReturnCreateDisk), 3002(RunWithReturnCreateDiskStatus), 3003 (RunWithReturnMapDisk), 3004(RunWithReturnRebalanceDevices), 3005 (RunWithReturnCreateMaintenanceVersion),3006 (RunWithReturnImportDisk), 4001 (RunByteArrayInputImportDevices), 4002(RunByteArrayInputImportOemLicenses), 5001(RunByteArrayOutputArchiveAuditTrail), 5002(RunByteArrayOutputExportOemLicenses), 6001 (SetAuthGroup), 6002(SetCollection), 6003 (SetDevice), 6004 (SetDisk), 6005 (SetDiskLocator), 6006(SetFarm), 6007 (SetFarmView), 6008 (SetServer), 6009 (SetServerBiosBootstrap),6010 (SetServerBootstrap), 6011 (SetServerStore), 6012 (SetSite), 6013(SetSiteView), 6014 (SetStore), 6015 (SetUserGroup), 6016SetVirtualHostingPool, 6017 SetUpdateTask, 6018 SetDiskUpdateDevice, 7001(SetListDeviceBootstraps), 7002 (SetListDeviceBootstrapsDelete), 7003(SetListDeviceBootstrapsAdd), 7004 (SetListDeviceCustomProperty), 7005(SetListDeviceCustomPropertyDelete), 7006 (SetListDeviceCustomPropertyAdd),7007 (SetListDeviceDiskPrinters), 7008 (SetListDeviceDiskPrintersDelete), 7009(SetListDeviceDiskPrintersAdd), 7010 (SetListDevicePersonality), 7011(SetListDevicePersonalityDelete), 7012 (SetListDevicePersonalityAdd), 7013(SetListDiskLocatorCustomProperty), 7014 (SetListDiskLocatorCustomPropertyDelete),7015 (SetListDiskLocatorCustomPropertyAdd), 7016 (SetListServerCustomProperty),7017 (SetListServerCustomPropertyDelete), 7018(SetListServerCustomPropertyAdd), 7019 (SetListUserGroupCustomProperty), 7020(SetListUserGroupCustomPropertyDelete), and 7021(SetListUserGroupCustomPropertyAdd)  uint Attachments: An or'ed value that indicates ifthere are any details for this action. A value of 15 indicates that there areChildren, Sibling, Parameters and Properties for the action. Values are: 0(None), 1 (Children), 2 (Sibling), 4 (Parameters), and 8 (Properties) Default=0  Guid Guid or AuditActionId: GUID of the action.  string Domain: Domain of the user that performed theaction. Max Length=255  Guid ObjectId: GUID of the object of the action. Default=00000000-0000-0000-0000-000000000000  string ObjectName: Name of the object of the action.Default=\"\" Max Length=1000  Guid ParentId: GUID of the parent action (one thattriggered this action) if one exists. 00000000-0000-0000-0000-000000000000 whennot valid. Default=00000000-0000-0000-0000-000000000000  string Path: Path of the object of the action. Anexample is Site\\Collection for a Device. Default=\"\" Max Length=101  Guid RootId: GUID of the root action (one thattriggered this group of actions) if one exists.00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000  Guid SiteId: GUID of the Site for the object of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000  Guid SubId: GUID of the Collection or Store of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000  DateTime Time: Date/Time the action occurred down tothe millisecond. Has the date and time including milliseconds. Default=Empty  uint Type: Type of object that action was performedon. Values are: 0 (Many), 1 (AuthGroup), 2 (Collection), 3 (Device), 4 (Disk),5 (DiskLocator), 6 (Farm), 7 (FarmView), 8 (Server), 9 (Site), 10 (SiteView),11 (Store), 12 (System), and 13 (UserGroup)  string UserName: User that performed the action. MaxLength=255", 
            "title": "PvsAuditTrail"
        }, 
        {
            "location": "/#pvsauthgroup", 
            "text": "Read/Write Fields  string Name or AuthGroupName: Name of the ActiveDirectory or Windows Group. Max Length=450  string Description: User description.Default=\"\" Max Length=250  Read-Only Fields  Guid Guid or AuthGroupId: Read-only GUID thatuniquely identifies this AuthGroup.  uint Role: Role of the AuthGroup for a Collection.role can only be used with CollectionId or CollectionName. 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999", 
            "title": "PvsAuthGroup"
        }, 
        {
            "location": "/#pvsauthgroupusage", 
            "text": "Read-Only Fields  Guid Guid or Id: GUID of the item. The item can be aFarm, Site or Collection. It will be 00000000-0000-0000-0000-000000000000 forFarm.  string Name: Name of the item. The item can be aFarm, Site or Collection.  uint Role: Role of the AuthGroup for the item. 100is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999", 
            "title": "PvsAuthGroupUsage"
        }, 
        {
            "location": "/#pvsceipdata", 
            "text": "Read/Write Fields  uint Enabled: 1 if CEIP is enabled, otherwise 0.Min=0, Max=1  uint InProgress: 1 if an upload is currently inprogress, otherwise 0. Default=0  DateTime NextUpload: Date and time next CEIP uploadis due if enabled is 1. Default=Empty  uint OneTimeUpload: 1 to perform a one time upload.  Guid ServerId: ID of server that is currentlyuploading, null if InProgress is 0.Default=00000000-0000-0000-0000-000000000000  Read-Only Field  Guid Uuid: CEIP UUID.", 
            "title": "PvsCeipData"
        }, 
        {
            "location": "/#pvscisdata", 
            "text": "Read/Write Fields  string Password: Password of the user required toobtain the token. This is required only by Set and Add  string Path: Path where the last problem reportbundle was saved Default=\"\" Max Length=255  string UserName: Username used to obtain the tokenDefault=\"\" Max Length=255  Read-Only Fields  Guid Guid or CisDataId: CIS UUID  string UploadToken: Token for uploading bundles toCIS Default=\"\" Max Length=10", 
            "title": "PvsCisData"
        }, 
        {
            "location": "/#pvscollection", 
            "text": "Read/Write Fields  uint AutoAddNumberLength: The maximum length of theDevice Number for Auto Add. This length plus the AutoAddPrefix length plus theAutoAddSuffix length must be less than 16. Required that((lenautoAddPrefix+lenautoAddSuffix)+AutoAddNumberLength) < =15. Min=3, Max=9,Default=4  string AutoAddPrefix: The string put before theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno end digit Max Length=12  string AutoAddSuffix: The string put after theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno begin digit Max Length=12  bool AutoAddZeroFill: True when zeros be placed beforethe Device Number up to the AutoAddNumberLength for Auto Add, false otherwise.Default=true  string Name or CollectionName: Name of theCollection. It is unique within the Site. Max Length=50  string Description: User description.Default=\"\" Max Length=250  bool Enabled: True when Devices in the Collectioncan be booted, false otherwise. Default=true  uint LastAutoAddDeviceNumber: The Device Number ofthe last Auto Added Device. Default=0  Guid TemplateDeviceId: GUID of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith templateDeviceName. Default=00000000-0000-0000-0000-000000000000  string TemplateDeviceName: Name of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith TemplateDeviceId. Default=\"\"  Read-Only Fields  uint ActiveDeviceCount: Read-only count of activeDevices in this Collection. Default=0  Guid Guid or CollectionId: Read-only GUID thatuniquely identifies this Collection.  uint DeviceCount: Read-only count of Devices in thisCollection. Default=0  uint DeviceWithPVDCount: Read-only count of Deviceswith Personal vDisk in this Collection. Default=0  uint MakActivateNeededCount: Read-only count ofactive Devices that need MAK activation in this Collection. Default=0  uint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999  Guid SiteId: GUID of the Site that this Collectionis a member of. It is not used with SiteName.  string SiteName: Name of the Site that thisCollection is a member of. It is not used with SiteId.", 
            "title": "PvsCollection"
        }, 
        {
            "location": "/#pvsconnection", 
            "text": "Read/Write Fields  string Domain: Domain name to use forAuthentication. If it has a value, it will be *****. Default=\"\"  string Password: Password to use for Authentication.If it has a value, it will be *****. Default=\"\"  string Persist: True when the connection settingsshould be, for Set, or have been, for Get, saved to the registry.  string Port: The Port to use to connect.Default=54321  string Name or Server: Name or IP of the Server toconnect to. Default=localhost  string User: User name to use for Authentication. Ifit has a value, it will be *****. Default=\"\"  Read-Only Field  string Connected: True when the Citrix.PVS.SnapIn iscurrently connected to the SoapServer with the settings in this PvsConnection.  PvsConnection can be created or modified usingmethods below:  New-Object Citrix.PVS.SnapIn.PvsConnection: Createsdefault Server=localhost, Port=54321, and no authentication.  New-ObjectCitrix.PVS.SnapIn.PvsConnection(Citrix.PVS.SnapIn copyFrom): Creates withsettings of the copyFrom Citrix.PVS.SnapIn.  SetServerToLocalHostDefaultSettings:Server=localhost, Port=54321, and no authentication.  Copy(Citrix.PVS.SnapIn copyFrom): Modifies thesettings to match the copyFrom Citrix.PVS.SnapIn.  Equals(Citrix.PVS.SnapIn compareTo): Returns truewhen the settings match what is in the compareTo.", 
            "title": "PvsConnection"
        }, 
        {
            "location": "/#pvsdevice", 
            "text": "Read/Write Fields  uint AdSignature: The signature of the Active Directorymachine account password. Do not set this field, it is only set internally byPVS. Default=0  uint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0  uint Authentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. This cannotbe Set for a Device with Personal vDisk. Min=0, Max=2, Default=0  bool BdmBoot: Use PXE boot when set to false, BDMboot when set to true. Default is PXE Default=false  DateTime BdmCreated: Timstamp when BDM device wascreated  Default=Empty  uint BdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3use USB. Default=0  uint BdmType: Use PXE boot when set to 0, BDM (Bios)boot when set to 1 and BDM (Uefi) boot when set to 2.  Default=0  DateTime BdmUpdated: Timestamp of the last BDM bootdisk update. Default=Empty  uint BootFrom: Device to boot from. Choices are 1for vDisk, 2 for Hard Disk, and 3 for Floppy. This cannot be Set for a Devicewith Personal vDisk. Min=1, Max=3, Default=1  string ClassName: Used by Automatic Update featureto match new versions of Disks to a Device. This cannot be Set for a Devicewith Personal vDisk. Default=\"\" Max Length=41  string Description: User description.Default=\"\" Max Length=250  PvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.  string Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15  string DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000  string DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255  string DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186  DateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty  bool Enabled: True when it can be booted, falseotherwise. This cannot be Set for a Device with Personal vDisk. Default=true  bool LocalDiskEnabled: If there is a local disk menuchoice for the Device, this is true. This cannot be Set for a Device withPersonal vDisk. Default=false  uint LocalWriteCacheDiskSize: The size in GB toformat the Device cache file disk. If the value is 0, then the disk is notformatted. Min=0, Max=2048, Default=0  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0  string Password: Password of user to authenticatebefore the boot process continues. This cannot be Set for a Device withPersonal vDisk. Default=\"\" ASCII Max Length=100  uint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901  uint Type: 1 when it performs test of Disks, 2 whenit performs maintenance on Disks, 3 when it has a Personal vDisk, 4 when it hasa Personal vDisk and performs tests, 0 otherwise. A Device with type 0 - 3 canonly be Set to 0 - 3, and a Device with type 3 - 4 can only be Set to 3 - 4.Min=0, Max=4, Default=0  string User: Name of user to authenticate before theboot process continues. This cannot be Set for a Device with Personal vDisk.Default=\"\" ASCII Max Length=20  bool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false  Guid XsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000  Read-Only Fields  bool Active: True if the Device is currently active,false otherwise. Default=false  Guid CollectionId: GUID of the Collection thisDevice is to be a member of. It is not used with CollectionName.  string CollectionName: Name of the Collection thisDevice is to be a member of. SiteName or SiteId must also be used.  Guid Guid or DeviceId: Read-only GUID that uniquelyidentifies this Device.  string PvdDriveLetter: Read-only Personal vDiskDrive letter. Range is E to U and W to Z. Default=\"\" Max Length=1  uint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999  Guid SiteId: GUID of the Site the CollectionName isto be a member of. This or SiteName is used with CollectionName.  string SiteName: Name of the Site the CollectionNameis to be a member of. This or SiteId is used with CollectionName.  bool Template: True if the Device is the template inits Collection, false otherwise. Default=false  bool TemporaryVersionSet: Read-only true whentemporary version is set. Default=false  Guid VirtualHostingPoolId: GUID that uniquelyidentifies the Virtual Hosting Pool for a VM. This is needed when Adding a VMdevice. Default=00000000-0000-0000-0000-000000000000", 
            "title": "PvsDevice"
        }, 
        {
            "location": "/#pvsdevicebootstrap", 
            "text": "Read-Only Fields  Guid Guid or DeviceId: GUID of the Device.  PvsDeviceBootstrapList: Each one of these has these2 fields:  string Name or Bootstrap: Name of the bootstrapfile. Max Length=259  string MenuText: Text that is displayed in the BootMenu. If this field has no value, the bootstrap value is used.Default=\"\" ASCII Max Length=64  PvsDeviceBootstrapList[] DeviceBootstrap: List ofobjects that can be changed with the methods below.  Methods  Add(string bootstrap, string menuText): Used to adda PvsDeviceBootstrapList to the end of the array.  Insert(int position, string bootstrap, stringmenuText): Used to insert a PvsDeviceBootstrapList array item at position. Theposition is 0 based.  Remove(int position): Used to remove aPvsDeviceBootstrapList array item at position. The position is 0 based.  Set(int position, string menuText): Used to set aPvsDeviceBootstrapList array item MenuText at position. The position is 0based.  Reorder(int oldPosition, int newPosition): Used tomove a PvsDeviceBootstrapList array item from the oldPosition to thenewPosition. The oldPosition and newPosition are 0 based.", 
            "title": "PvsDeviceBootstrap"
        }, 
        {
            "location": "/#pvsdevicebootstraplist", 
            "text": "Read/Write Fields  string Name or Bootstrap: Name of the bootstrapfile. Max Length=259  string MenuText: Text that is displayed in the BootMenu. If this field has no value, the bootstrap value is used.Default=\"\" ASCII Max Length=64", 
            "title": "PvsDeviceBootstrapList"
        }, 
        {
            "location": "/#pvsdevicedisktempversion", 
            "text": "Read-Only Fields  Guid Guid or DeviceId: Read-only GUID that uniquelyidentifies the Device with temporary version.  string Name or DeviceName: Read-only Computer namethat uniquely identifies the Device with temporary version. ASCII computer namecharacters  Guid DiskLocatorId: Read-only GUID that uniquelyidentifies then Disk Locator with temporary version.  string DiskLocatorName: Read-only Name of the DiskLocator File with temporary version. It is unique within the Store. ASCII  Guid SiteId: Read-only GUID of the Site the Deviceand DiskLocator are a member of.  string SiteName: Read-only Name of the Site theDevice and DiskLocator are a member of.  Guid StoreId: Read-only GUID of the Store that theDisk Locator is a member of.  string StoreName: Read-only Name of the Store thatthe Disk Locator is a member of.  uint Version: Read-only Disk version the temporaryis for.", 
            "title": "PvsDeviceDiskTempVersion"
        }, 
        {
            "location": "/#pvsdeviceinfo", 
            "text": "Read-Only Fields  bool Active: True if the Device is currently active,false otherwise. Default=false  uint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0  uint AdTimestamp: The time the Active Directory machineaccount password was generated. Do not set this field, it is only setinternally by PVS. Default=0  uint Authentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. This cannotbe Set for a Device with Personal vDisk. Min=0, Max=2, Default=0  bool BdmBoot: Use PXE boot when set to false, BDMboot when set to true. Default is PXE Default=false  DateTime BdmCreated: Timstamp when BDM device wascreated  Default=Empty  uint BdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3use USB. Default=0  uint BdmType: Use PXE boot when set to 0, BDM (Bios)boot when set to 1 and BDM (Uefi) boot when set to 2.  Default=0  DateTime BdmUpdated: Timestamp of the last BDM bootdisk update. Default=Empty  uint BootFrom: Device to boot from. Choices are 1for vDisk, 2 for Hard Disk, and 3 for Floppy. This cannot be Set for a Devicewith Personal vDisk. Min=1, Max=3, Default=1  string ClassName: Used by Automatic Update featureto match new versions of Disks to a Device. This cannot be Set for a Devicewith Personal vDisk. Default=\"\" Max Length=41  Guid CollectionId: GUID of the Collection thisDevice is to be a member of. It is not used with CollectionName.  string CollectionName: Name of the Collection thisDevice is to be a member of. SiteName or SiteId must also be used.  string Description: User description.Default=\"\" Max Length=250  Guid Guid or DeviceId: Read-only GUID that uniquelyidentifies this Device.  PvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.  string Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15  string DiskFileName: Name of the Disk File includingthe extension. It is equal to \"\" if the Device is not active.  Guid DiskLocatorId: Read-only GUID of the DiskLocator that the Device is using. It is equal to00000000-0000-0000-0000-000000000000 if the Device is not active.  string DiskLocatorName: Read-only name of the DiskLocator File that the Device is using. It is equal to the list of Disk Locatornames for the Device if the Device is not active.  uint DiskVersion: Read-only version of the DiskLocator File that the Device is using. It is equal to 0 if the Device is notactive. Default=0  uint DiskVersionAccess: State of the Disk Version.Values are: 0 (Production), 1 (Maintenance), 2 (MaintenanceHighestVersion), 3(Override), 4 (Merge), 5 (MergeMaintenance), 6 (MergeTest), and 7 (Test). It isequal to 0 if the Device is not active. Default=0  string DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000  string DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255  string DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" Max Length=186  DateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty  bool Enabled: True when it can be booted, falseotherwise. This cannot be Set for a Device with Personal vDisk. Default=true  System.Net.IPAddress Ip: Read-only IP of the Device.It is equal to 0.0.0.0 if the Device is not active.  uint License: Oem Only: Read-only type of thelicense. Values are 0 when None, 1 or 2 when Desktop. It is equal to 0 if theDevice is not active. Default=0  uint LicenseType: 0 when None, 1 for Desktop, 2 forServer, 5 for OEM SmartClient, 6 for XenApp, 7 for XenDesktop. It is equal to 0if the Device is not active. Default=0  bool LocalDiskEnabled: If there is a local disk menuchoice for the Device, this is true. This cannot be Set for a Device withPersonal vDisk. Default=false  uint LocalWriteCacheDiskSize: The size in GB toformat the Device cache file disk. If the value is 0, then the disk is notformatted. Min=0, Max=2048, Default=0  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0  uint MakLicenseActivated: Read-only indicator if MAKlicensing is being used and is activated. Values are: 0 (MAK not used), 1 (NotActivated), 2 (Activated). It is equal to 0 if the Device is not active.Default=0  string Model: Oem Only: Read-only model of thecomputer. Values are OptiPlex 745, 755, 320, 760, FX160, or Default. It isequal to \"\" if the Device is not active.  string Password: Password of user to authenticatebefore the boot process continues. This cannot be Set for a Device withPersonal vDisk. Default=\"\" ASCII Max Length=100  uint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901  string PvdDriveLetter: Read-only Personal vDiskDrive letter. Range is E to U and W to Z. Default=\"\" Max Length=1  uint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999  Guid ServerId: Read-only GUID of the Server that theDevice is using. It is equal to 00000000-0000-0000-0000-000000000000 if theDevice is not active.  System.Net.IPAddress ServerIpConnection: Read-onlyIP of the Server that the Device is using. It is equal to 0.0.0.0 if the Deviceis not active.  string ServerName: Read-only Name of the Server thatthe Device is using. It is equal to \"\" if the Device is not active.  uint ServerPortConnection: Read-only Port of theServer that the Device is using. It is equal to 0 if the Device is not active.Default=0  Guid SiteId: GUID of the Site the CollectionName isto be a member of. This or SiteName is used with CollectionName.  string SiteName: Name of the Site the CollectionNameis to be a member of. This or SiteId is used with CollectionName.  string Status: 1 or 2 numbers in the format n,n.They are the number of retries and if ram cache is being used, ram cachepercent used. It is equal to \"\" if the Device is not active.  bool Template: True if the Device is the template inits Collection, false otherwise. Default=false  bool TemporaryVersionSet: Read-only true whentemporary version is set. Default=false  uint Type: 1 when it performs test of Disks, 2 whenit performs maintenance on Disks, 3 when it has a Personal vDisk, 4 when it hasa Personal vDisk and performs tests, 0 otherwise. Min=0, Max=4, Default=0  string User: Name of user to authenticate before theboot process continues. This cannot be Set for a Device with Personal vDisk.Default=\"\" ASCII Max Length=20  Guid VirtualHostingPoolId: GUID that uniquelyidentifies the Virtual Hosting Pool for a VM. This is needed when Adding a VMdevice. Default=00000000-0000-0000-0000-000000000000  bool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false  Guid XsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000", 
            "title": "PvsDeviceInfo"
        }, 
        {
            "location": "/#pvsdevicepersonality", 
            "text": "Read-Only Fields  Guid Guid or DeviceId: GUID of the Device.  PvsDevicePersonalityList: Each one of these hasthese 2 fields:  string Name: Name of the Device personality item.Max Length=250  string Value: Value for the Device personality item.Max Length=1000  PvsDevicePersonalityList[] DevicePersonality: Listof objects that can be changed with the methods below.  Methods  Add(string name, string value): Used to add aPvsDevicePersonalityList to the end of the array.  Insert(int position, string name, string value):Used to insert a PvsDevicePersonalityList array item at position. The positionis 0 based.  Remove(int position): Used to remove aPvsDevicePersonalityList array item at position. The position is 0 based.  Set(int position, string value): Used to set aPvsDevicePersonalityList array item Value at position. The position is 0 based.  Reorder(int oldPosition, int newPosition): Used tomove a PvsDevicePersonalityList array item from the oldPosition to thenewPosition. The oldPosition and newPosition are 0 based.", 
            "title": "PvsDevicePersonality"
        }, 
        {
            "location": "/#pvsdevicepersonalitylist", 
            "text": "Read/Write Fields  string Name: Name of the Device personality item.Max Length=250  string Value: Value for the Device personality item.Max Length=1000", 
            "title": "PvsDevicePersonalityList"
        }, 
        {
            "location": "/#pvsdevicestatus", 
            "text": "Read-Only Fields  Guid Guid or DeviceId: Read-only GUID of the Device.Can be used with Get Device.  string Name or DeviceName: Read-only Name of theDevice. Can be used with Get Device.  string DiskFileName: Name of the Disk File includingthe extension.  Guid DiskLocatorId: Read-only GUID of the DiskLocator that the Device is using.  string DiskLocatorName: Read-only name of the DiskLocator File that the Device is using.  uint DiskVersion: Read-only version of the DiskLocator File that the Device is using. Default=0  uint DiskVersionAccess: State of the Disk Version.Values are: 0 (Production), 1 (Maintenance), 2 (MaintenanceHighestVersion), 3(Override), 4 (Merge), 5 (MergeMaintenance), 6 (MergeTest), and 7 (Test)Default=0  System.Net.IPAddress Ip: Read-only IP of the Device.  uint LicenseType: 0 when None, 1 for Desktop, 2 forServer, 5 for OEM SmartClient, 6 for XenApp, 7 for XenDesktop. Default=0  uint MakLicenseActivated: Read-only indicator if MAKlicensing is being used and is activated. Values are: 0 (MAK not used), 1 (NotActivated), 2 (Activated). Default=0  Guid ServerId: Read-only GUID of the Server that theDevice is using.  System.Net.IPAddress ServerIpConnection: Read-onlyIP of the Server that the Device is using.  string ServerName: Read-only Name of the Server thatthe Device is using.  uint ServerPortConnection: Read-only Port of the Serverthat the Device is using. Default=0  string Status: 1 or 2 numbers in the format n,n.They are the number of retries and if ram cache is being used, ram cachepercent used.", 
            "title": "PvsDeviceStatus"
        }, 
        {
            "location": "/#pvsdisk", 
            "text": "Read/Write Fields  bool ActivationDateEnabled: Use activation date to activateimage when set to true. Default false  DateTime ActiveDate: Date to activate the disk ifAutoUpdateEnabled and activationDateEnabled are true. Has the date. Empty whenthe AutoUpdateEnabled or activationDateEnabled are false.  bool AdPasswordEnabled: Enable AD passwordmanagement when set to true.  string Author: User defined author. Max Length=40  bool AutoUpdateEnabled: Automatically update thisimage for matching Devices when set to true. Default false  UInt64 Build: User defined build number. Min=0,Max=4294967295, Default=0  string Class: Class of the Disk. Max Length=40  string Company: User defined company. Max Length=40  string Date: User defined date. Max Length=40  bool VHDX: If VHDX is true, the format of the imageis VHDX. Otherwise it is VHD. Default=false  bool HaEnabled: Enable HA when set to true.  string HardwareTarget: User defined hardware target.Max Length=127  string ImageType: Type of this image (softwaretype). Max Length=40  string InternalName: User defined name. MaxLength=63  uint LicenseMode: 0 (None), 1 (Multiple ActivationKey), or 2 (Key Management Service). Min=0, Max=2, Default=0  string LongDescription: Description of the Disk. MaxLength=399  UInt64 MajorRelease: User defined major releasenumber. Min=0, Max=4294967295, Default=0  UInt64 MinorRelease: User defined minor releasenumber. Min=0, Max=4294967295, Default=0  string OriginalFile: User defined original file. MaxLength=127  bool PrinterManagementEnabled: Invalid printers willbe deleted from the Device when set to true.  string SerialNumber: User defined serial number. MaxLength=36  string Title: User defined title. Max Length=40  UInt64 WriteCacheSize: RAM cache size (MB). Not 0when used with Cache in Device RAM, and Cache in Device RAM with Overflow onHard Disk. A value of 0 will disable the RAM use for Cache in Device RAM withOverflow on Hard Disk. Min=0, Max=131072, Default=0  uint WriteCacheType: 0 (Private), (other values arestandard image) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache onDevice Hard Disk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9(Cache in Device RAM with Overflow on Hard Disk). Min=0, Max=9, Default=0  Read-Only Fields  Guid Guid or DiskLocatorId: GUID of the DiskLocatorused for Get and Set.  UInt64 DiskSize: Read-only size of the image. Thevalue is 0 when it is not available. Default=0  string LogicalSectorSize: Logical Sector Size.Values are: 512, 4096, Default=512  uint VhdBlockSize: Block size in KB. For VHD it isonly used with Dynamic type. Tested sizes for VHD are 512, 2048, and 16384. VHDMin=512, Max=16384, Default=2048. For VHDX it is used for all types. Testedsize for VHDX is 32768. VHDX Min=1024, Max= 262144, Default=32768. Default=0", 
            "title": "PvsDisk"
        }, 
        {
            "location": "/#pvsdiskinfo", 
            "text": "Read-Only Fields  bool ActivationDateEnabled: Use activation date toactivate image when set to true. Default false  bool Active: True if the DiskLocator is currentlyactive, false otherwise. Default=false  DateTime ActiveDate: Date to activate the disk ifAutoUpdateEnabled and activationDateEnabled are true. Has the date. Empty whenthe AutoUpdateEnabled or activationDateEnabled are false.  bool AdPasswordEnabled: Enable AD passwordmanagement when set to true.  string Author: User defined author. Max Length=40  bool AutoUpdateEnabled: Automatically update thisimage for matching Devices when set to true. Default false  UInt64 Build: User defined build number. Min=0,Max=4294967295, Default=0  string Class: Class of the Disk. Max Length=40  string Company: User defined company. Max Length=40  string Date: User defined date. Max Length=40  string Description: User description.Default=\"\" Max Length=250  uint DeviceCount: Read-only count of Devices.Default=0  Guid Guid or DiskLocatorId: Read-only GUID thatuniquely identifies this Disk Locator.  string Name or DiskLocatorName: Name of the Disk LocatorFile. It is unique within the Store. ASCII Max Length=52  UInt64 DiskSize: Read-only size of the image. Thevalue is 0 when it is not available. Default=0  Guid DiskUpdateDeviceId: GUID of theDiskUpdateDevice that is used when updates are performed.Default=00000000-0000-0000-0000-000000000000  string DiskUpdateDeviceName: Name of theDiskUpdateDevice that is used when updates are performed. Default=\"\"  bool Enabled: True when this disk can be booted,false otherwise. Default=true  bool EnabledForDevice: True when this disk isenabled for the Device specified, false otherwise. This is only returned when aDevice is specified. Default=true  bool VHDX: If VHDX is true, the format of the imageis VHDX. Otherwise it is VHD. Default=false  bool HaEnabled: Enable HA when set to true.  string HardwareTarget: User defined hardware target.Max Length=127  string ImageType: Type of this image (softwaretype). Max Length=40  string InternalName: User defined name. MaxLength=63  uint LicenseMode: 0 (None), 1 (Multiple ActivationKey), or 2 (Key Management Service). Min=0, Max=2, Default=0  bool Locked: True if the Disk is currently locked,false otherwise. Default=false  string LogicalSectorSize: Logical Sector Size.Values are: 512, 4096, Default=512  string LongDescription: Description of the Disk. MaxLength=399  UInt64 MajorRelease: User defined major releasenumber. Min=0, Max=4294967295, Default=0  bool Mapped: True if the Disk is currently mapped,false otherwise. Default=false  string MenuText: Text that is displayed in the BootMenu. If this field has no value, the name value is used. Default=\"\"ASCII Max Length=64  UInt64 MinorRelease: User defined minor releasenumber. Min=0, Max=4294967295, Default=0  string OriginalFile: User defined original file. MaxLength=127  bool PrinterManagementEnabled: Invalid printers willbe deleted from the Device when set to true.  bool RebalanceEnabled: True when this Server canautomatically rebalance Devices, false otherwise. Default=false  uint RebalanceTriggerPercent: Percent over fair loadthat triggers a dynamic Device rebalance. Min=5, Max=5000, Default=25  uint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 999 is read-only. Default=999  string SerialNumber: User defined serial number. MaxLength=36  Guid ServerId: GUID of the single Server that thisDisk Locator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000  string ServerName: Name of the single Server thatthis Disk Locator is assigned to. It is not used with ServerId.Default=\"\"  Guid SiteId: GUID of the Site this DiskLocator is tobe a member of. It is not used with SiteName.  string SiteName: Name of the Site this DiskLocatoris to be a member of. It is not used with SiteId.  Guid StoreId: GUID of the Store that this DiskLocator is a member of. SiteName or SiteId must also be used. It is not usedwith StoreName.  string StoreName: Name of the Store that this DiskLocator is a member of. SiteName or SiteId must also be used. It is not usedwith StoreId.  uint SubnetAffinity: Qualifier for subnet affinitywhen assigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2,Default=0  bool TemporaryVersionSet: Read-only true whentemporary version(s) are set. Default=false  string Title: User defined title. Max Length=40  uint VhdBlockSize: Block size in KB. For VHD it isonly used with Dynamic type. Tested sizes for VHD are 512, 2048, and 16384. VHDMin=512, Max=16384, Default=2048. For VHDX it is used for all types. Testedsize for VHDX is 32768. VHDX Min=1024, Max= 262144, Default=32768. Default=0  UInt64 WriteCacheSize: RAM cache size (MB). Not 0when used with Cache in Device RAM, and Cache in Device RAM with Overflow onHard Disk. A value of 0 will disable the RAM use for Cache in Device RAM withOverflow on Hard Disk. Min=0, Max=131072, Default=0  uint WriteCacheType: 0 (Private), (other values arestandard image) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache onDevice Hard Disk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9(Cache in Device RAM with Overflow on Hard Disk). Min=0, Max=9, Default=0", 
            "title": "PvsDiskInfo"
        }, 
        {
            "location": "/#pvsdiskinventory", 
            "text": "Read-Only Fields  string Active: 1 if the Server is currently active,2 if unknown, and 0 otherwise.  Guid Guid or DiskLocatorId: GUID of the DiskLocatorused for Get and Set.  string FilePath: Path used to access the diskversion from the Server. Empty if the information is not available.  DateTime FileTime: Date/Time of the date versionfile. Has the date and time without milliseconds. Empty if the information isnot available.  DateTime PropertiesTime: Date/Time of the diskproperties. Has the date and time without milliseconds. Empty if theinformation is not available.  Guid ServerId: GUID of the Server that the DiskVersion Inventory is being reported about.  string ServerName: Name of the Server that the DiskVersion Inventory is being reported about.  string State: The number code of the inventorystate. Values are: 0 (Up to date), 1 (version file is missing), 2 (version fileis out of date), 3 (properties are missing), 4 (properties are out of date), 5(server is not reachable).  string Version: Version number. The base disk isversion 0, the other version numbers are in part of the file name.", 
            "title": "PvsDiskInventory"
        }, 
        {
            "location": "/#pvsdisklocator", 
            "text": "Read/Write Fields  string Description: User description.Default=\"\" Max Length=250  bool Enabled: True when this disk can be booted,false otherwise. Default=true  string MenuText: Text that is displayed in the BootMenu. If this field has no value, the name value is used. Default=\"\"ASCII Max Length=64  bool RebalanceEnabled: True when this Server canautomatically rebalance Devices, false otherwise. Default=false  uint RebalanceTriggerPercent: Percent over fair loadthat triggers a dynamic Device rebalance. Min=5, Max=5000, Default=25  Guid ServerId: GUID of the single Server that thisDisk Locator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000  string ServerName: Name of the single Server thatthis Disk Locator is assigned to. It is not used with ServerId.Default=\"\"  uint SubnetAffinity: Qualifier for subnet affinitywhen assigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2,Default=0  Read-Only Fields  bool Active: True if the DiskLocator is currentlyactive, false otherwise. Default=false  Guid Guid or DiskLocatorId: Read-only GUID thatuniquely identifies this Disk Locator.  string Name or DiskLocatorName: Name of the DiskLocator File. It is unique within the Store. ASCII Max Length=52  Guid DiskUpdateDeviceId: GUID of theDiskUpdateDevice that is used when updates are performed.Default=00000000-0000-0000-0000-000000000000  string DiskUpdateDeviceName: Name of theDiskUpdateDevice that is used when updates are performed. Default=\"\"  bool EnabledForDevice: True when this disk isenabled for the Device specified, false otherwise. This is only returned when aDevice is specified. Default=true  bool Mapped: True if the Disk is currently mapped,false otherwise. Default=false  uint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 999 is read-only. Default=999  Guid SiteId: GUID of the Site this DiskLocator is tobe a member of. It is not used with SiteName.  string SiteName: Name of the Site this DiskLocatoris to be a member of. It is not used with SiteId.  Guid StoreId: GUID of the Store that this DiskLocator is a member of. SiteName or SiteId must also be used. It is not usedwith StoreName.  string StoreName: Name of the Store that this DiskLocator is a member of. SiteName or SiteId must also be used. It is not usedwith StoreId.  bool TemporaryVersionSet: Read-only true whentemporary version(s) are set. Default=false", 
            "title": "PvsDiskLocator"
        }, 
        {
            "location": "/#pvsdisklocatorlock", 
            "text": "Read-Only Fields  Guid DeviceId: GUID of the Device that has the lock,will be 00000000-0000-0000-0000-000000000000 if a Server has the lock.  string DeviceName: Name of the Device that has thelock, will not be included if a Server has the lock.  bool Exclusive: True when the lock is exclusive,false when it is shared. Default=false  bool ReadOnly: True when lock is because file systemis read only, false when file system is read write Default=false  Guid ServerId: GUID of the Server that has the lock,will be 00000000-0000-0000-0000-000000000000 if a Device has the lock.  string ServerName: Name of the Server that has thelock, will not be included if a Device has the lock.", 
            "title": "PvsDiskLocatorLock"
        }, 
        {
            "location": "/#pvsdiskupdatedevice", 
            "text": "Read/Write Fields  uint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0  uint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0  string Description: User description.Default=\"\" Max Length=250  string DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000  string DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255  string DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186  DateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0  uint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901  Read-Only Fields  bool Active: True if the Device is currently active,false otherwise. Default=false  Guid Guid or DeviceId: Read-only GUID that uniquelyidentifies this Device.  PvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.  string Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15  Guid DiskLocatorId: GUID of the Disk Locator toupdate with this Device.  string DiskLocatorName: Name of the Disk LocatorFile to update with this Device.  uint DiskVersion: Read-only version of the DiskLocator File that the Device is using. It is equal to 0 if the Device is notactive. Default=0  System.Net.IPAddress Ip: Read-only IP of the Device.It is equal to 0.0.0.0 if the Device is not active.  uint License: Oem Only: Read-only type of thelicense. Values are 0 when None, 1 or 2 when Desktop. It is equal to 0 if theDevice is not active. Default=0  uint LicenseType: 0 when None, 1 for Desktop, 2 forServer, 5 for OEM SmartClient, 6 for XenApp, 7 for XenDesktop. It is equal to 0if the Device is not active. Default=0  uint MakLicenseActivated: Read-only indicator if MAKlicensing is being used and is activated. Values are: 0 (MAK not used), 1 (NotActivated), 2 (Activated). It is equal to 0 if the Device is not active.Default=0  string Model: Oem Only: Read-only model of thecomputer. Values are OptiPlex 745, 755, 320, 760, FX160, or Default. It isequal to \"\" if the Device is not active.  Guid ServerId: Read-only GUID of the Server that theDevice is using. It is equal to 00000000-0000-0000-0000-000000000000 if theDevice is not active.  System.Net.IPAddress ServerIpConnection: Read-onlyIP of the Server that the Device is using. It is equal to 0.0.0.0 if the Deviceis not active.  string ServerName: Read-only Name of the Server thatthe Device is using. It is equal to \"\" if the Device is not active.  uint ServerPortConnection: Read-only Port of theServer that the Device is using. It is equal to 0 if the Device is not active.Default=0  Guid SiteId: GUID of the Site this Disk UpdateDevice is to be a member of.  string SiteName: Name of the Site this Disk UpdateDevice is to be a member of.  string Status: 1 or 2 numbers in the format n,n.They are the number of retries and if ram cache is being used, ram cachepercent used. It is equal to \"\" if the Device is not active.  Guid StoreId: GUID of the Store that the DiskLocator is a member of.  string StoreName: Name of the Store that the DiskLocator is a member of.  Guid VirtualHostingPoolId: GUID of the VirtualHosting Pool. It is not used with VirtualHostingPoolName.Default=00000000-0000-0000-0000-000000000000  string VirtualHostingPoolName: Name of the VirtualHosting Pool.", 
            "title": "PvsDiskUpdateDevice"
        }, 
        {
            "location": "/#pvsdiskupdatestatus", 
            "text": "Read-Only Fields  uint CurrentStatus: Current status of the update.Values are: 0 (Ready), 1 (Update Pending), 2 (Preparing Image), 3 (StartingVM), 4 (Update In Progress), 5 (Stopping VM), 6 (Submitting Image), 7(Reverting Image), 8 (Invalid), 9 (Aborted), 10 (Completed Successfully), 11(No Updates) Min=0, Max=11, Default=0  string CurrentStatusMessage: Message string thatincludes the results of the run. Default=\"\" Max Length=255  string Description: User description of the UpdateTask.  Guid DeviceId: GUID that Device being used to do theupdate.  string DeviceName: Name of the Device being used todo the update.  Guid DiskLocatorId: GUID of the Disk Locator toupdate.  string Name or DiskLocatorName: Name of the DiskLocator File to update.  Guid Guid or DiskUpdateTaskId: GUID that uniquelyidentifies this Update Task and Device relationship.  uint PreviousResult: Status of the last run. Valuesare: 0 (Ready), 1 (Update Pending), 2 (Preparing Image), 3 (Starting VM), 4(Update In Progress), 5 (Stopping VM), 6 (Submitting Image), 7 (RevertingImage), 8 (Invalid), 9 (Aborted), 10 (Completed Successfully), 11 (No Updates)Min=0, Max=11, Default=0  string PreviousResultMessage: Message string thatincludes the results of the last run. Default=\"\" Max Length=255  Guid SiteId: GUID of the Site that this Update TaskName is a member of.  string SiteName: Name of the Site that this UpdateTask Name is a member of.  Guid StoreId: GUID of the Store that the DiskLocator is a member of.  string StoreName: Name of the Store that the DiskLocator is a member of.  Guid UpdateTaskId: GUID that uniquely identifies theUpdate Task.  string UpdateTaskName: Name of the Update Task.  Guid VirtualHostingPoolId: GUID of the VirtualHosting Pool being used for the update.  string VirtualHostingPoolName: Name of the VirtualHosting Pool being used for the update.", 
            "title": "PvsDiskUpdateStatus"
        }, 
        {
            "location": "/#pvsdiskversion", 
            "text": "Read/Write Fields  string Description: User description.Default=\"\" Max Length=250  DateTime ScheduledDate: Date/Time that the DiskVersion is scheduled to become available. Has the date, hour and minute. Emptywhen the disk version is made available immediately. Default=Empty  Read-Only Fields  uint Access: Read-only access of the Disk Version.Values are: 0 (Production), 1 (Maintenance), 2 (MaintenanceHighestVersion), 3(Override), 4 (Merge), 5 (MergeMaintenance), 6 (MergeTest), and 7 (Test) Min=0,Max=7, Default=0  bool CanDelete: Read-only true when the version canbe deleted. Default=false  bool CanMerge: Read-only true when the version canbe update merged. Will be set for the highest version number. Default=false  bool CanMergeBase: Read-only true when the versioncan be base merged. Will be set for the highest version number. Default=false  bool CanOverride: Read-only true when the versioncan be set as the Override. Default=false  bool CanPromote: Read-only true when the version canbe promoted. Default=false  bool CanRevertMaintenance: Read-only true when theversion can be reverted to Maintenance Access. Default=false  bool CanRevertTest: Read-only true when the versioncan be reverted to Test Access. Default=false  bool CanSetScheduledDate: Read-only true when theversion can have the scheduled date modified. Default=false  string CreateDate: Read-only Date/Time that the DiskVersion was created. Default=getdate  bool DeleteWhenFree: Read-only true if the DiskVersion is no longer needed because of a merge. If not current booted by aDevice, it can be deleted. Default=false  uint DeviceCount: Read-only count of Devices.Default=0  string Name or DiskFileName: Name of the Disk Fileincluding the extension. Default=\"\"  Guid Guid or DiskLocatorId: GUID of the DiskLocatorused for Get and Set.  bool GoodInventoryStatus: True when the up to datefile is accessible by all Servers, false otherwise. Default=false  bool IsPending: Read-only true when the versionScheduledDate has not occurred. Default=false  uint TaskId: When a Merge is occurring, this will beset with the task number of the process that is occurring. Default=\"\"  bool TemporaryVersionSet: Read-only true whentemporary version(s) are set. Some changes cannot be made to the version whenthis is set. Default=false  uint Type: Read-only type of the Disk Version.Values are: 0 (Base), 1 (Manual), 2 (Automatic), 3 (Merge), and 4 (MergeBase)Min=0, Max=4, Default=0  uint Version: Read-only version number. The basedisk is version 0, the other version numbers are in part of the file name.Default=0", 
            "title": "PvsDiskVersion"
        }, 
        {
            "location": "/#pvsfarm", 
            "text": "Read/Write Fields  bool AuditingEnabled: True when Auditing is enabled,false otherwise. Default=false  bool AutoAddEnabled: True when Auto Add is enabled,false otherwise. Default=false  bool AutomaticMergeEnabled: True when AutomaticMerge is enabled, false otherwise. If the number of versions becomes more thanthe MaxVersions value, a merge will occur at the end of PromoteDiskVersion.Default=true  Guid DefaultSiteId: GUID of the Site to place newDevices into automatically. Not used with defaultSiteName.Default=00000000-0000-0000-0000-000000000000  string DefaultSiteName: Name of the Site to placenew Devices into automatically. Not used with DefaultSiteId.Default=\"\"  string Description: User description.Default=\"\" Max Length=250  string Name or FarmName: Name of the Farm.Default=\"\" Max Length=50  DateTime LastAuditArchiveDate: Last date of AuditTrail data that was Archived. Has the date. Default=Empty  string LicenseServer: License server name.Default=\"\" Max Length=255  uint LicenseServerPort: License server port.Min=1025, Max=65534, Default=27000  uint MaxVersions: Maximum number a versions of aDisk that can exist before a merge will automatically occur. Min=3, Max=50,Default=5  uint MergeMode: Mode to place the version in after amerge has occurred. Values are: 0 (Production), 1 (Test) and 2 (Maintenance).Min=0, Max=2, Default=2  bool OfflineDatabaseSupportEnabled: True whenOffline Database Support is enabled, false otherwise. Default=false  Read-Only Fields  bool AdGroupsEnabled: Active Directory groups areused for authorization, when set to true. Windows groups are used when set tofalse. Default=false  string DatabaseInstanceName: Read-only name of thedatabase instance.  string DatabaseName: Read-only name of the database.  string DatabaseServerName: Read-only name of thedatabase server.  string FailoverPartnerInstanceName: Read-only nameof the database server instance.  string FailoverPartnerServerName: Read-only name ofthe database server.  Guid Guid or FarmId: Read-only GUID that uniquelyidentifies this Farm.  string MultiSubnetFailover: Read-only DatabaseMultiSubnetFailover value  uint Role: Read-only Role of the user for this item.100 is Farm Administrator, and 999 is read-only. Default=999", 
            "title": "PvsFarm"
        }, 
        {
            "location": "/#pvsfarmview", 
            "text": "Read/Write Fields  string Description: User description.Default=\"\" Max Length=250  string Name or FarmViewName: name of the Farm View.Max Length=50  Read-Only Fields  uint ActiveDeviceCount: Read-only count of activeDevices in this Farm View. Default=0  uint DeviceCount: Read-only count of Devices in thisFarm View. Default=0  Guid Guid or FarmViewId: Read-only GUID thatuniquely identifies this Farm View.  uint MakActivateNeededCount: Read-only count ofactive Devices that need MAK activation in this Farm View. Default=0", 
            "title": "PvsFarmView"
        }, 
        {
            "location": "/#pvsgroup", 
            "text": "Read-Only Fields  Guid Guid: GUID of the Active Directory group.00000000-0000-0000-0000-000000000000 for Windows groups.  string Name: Name of the Group.", 
            "title": "PvsGroup"
        }, 
        {
            "location": "/#pvslocalserver", 
            "text": "Read-Only Field  string Name or LocalServer: NetBios name of local server.", 
            "title": "PvsLocalServer"
        }, 
        {
            "location": "/#pvsnewdiskversion", 
            "text": "Read-Only Fields  string Name: Name of the disk file without theextension.  uint Status: Status of the disk file. Values are: 0(Valid), 1 (Missing Properties File), 2 (Access Denied), 3 (Access Denied andMissing Properties File), 4 (Invalid Disk File), 5 (Manifest Invalid)", 
            "title": "PvsNewDiskVersion"
        }, 
        {
            "location": "/#pvsphysicaladdress", 
            "text": "Derived fromSystem.Net.NetworkInformation.PhysicalAddress. GetString() returns a -delimited MAC address.", 
            "title": "PvsPhysicalAddress"
        }, 
        {
            "location": "/#pvsserver", 
            "text": "Read/Write Fields  uint AdMaxPasswordAge: Number of days before apassword expires. Min=1, Max=30, Default=7  bool AdMaxPasswordAgeEnabled: Age the password, whenset to true. Default=false  uint BootPauseSeconds: Number of seconds that aDevice will pause during login if its server busy. Min=1, Max=60, Default=10  uint BuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24  uint BusyDbConnectionRetryCount: Number of times afailed database connection will be retried. Min=0, Max=32767, Default=2  uint BusyDbConnectionRetryInterval: Interval, in numberof milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25  string Description: User description.Default=\"\" Max Length=250  bool EventLoggingEnabled: Enable event logging, whenset to true. Default=false  uint FirstPort: Number of the first UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910  uint InitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000,Default=50  uint InitialTransactionConnectionPoolSize: Initialsize of database connection pool for transactional queries. Min=1, Max=1000,Default=50  uint IoBurstSize: Number of bytes read/writes cansend in a burst of packets. Required thatIoBurstSize/(MaxTransmissionUnits-76) < =32. Min=4096, Max=61440,Default=32768  System.Net.IPAddress[] Ip: One or more streaming ipaddresses.  DateTime LastBugReportAttempt: Time that this serverlast attempted to upload or generate a bug report bundle. Default=Empty  string LastBugReportResult: Status of the last bugreport on this server. Default=\"\" Max Length=4000  string LastBugReportStatus: Status of the last bugreport on this server. Default=\"\" Max Length=250  string LastBugReportSummary: Summary of the last bugreport on this server. Default=\"\" Max Length=250  DateTime LastCeipUploadAttempt: Time that thisserver last attempted a CEIP upload. Default=Empty  uint LastPort: Number of the last UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930  uint LicenseTimeout: Amount of seconds before alicense times out. Min=15, Max=300, Default=30  uint LocalConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are local. A value of 0 disables thefeature. Min=0, Max=128, Default=4  uint LogFileBackupCopiesMax: Maximum number of logfile backups. Min=1, Max=50, Default=4  uint LogFileSizeMax: Maximum size log files canreach in Megabytes. Min=1, Max=50, Default=5  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=4  uint MaxBootDevicesAllowed: Maximum number ofDevices allowed to boot simultaneously. Min=1, Max=1000, Default=500  uint MaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60  uint MaxQueryConnectionPoolSize: Maximum size ofdatabase connection pool for non-transactional queries. Min=1, Max=32767,Default=1000  uint MaxTransactionConnectionPoolSize: Maximum sizeof database connection pool for transactional queries. Min=1, Max=32767,Default=1000  uint MaxTransmissionUnits: Ethernet maximumtransmission unit size for the protocol for use for Server and Device. Requiredthat IoBurstSize/(MaxTransmissionUnits-76) < =32. Min=502, Max=16426,Default=1506  bool NonBlockingIoEnabled: Use non-Blocking IO, whenset to true. Default=true  float PowerRating: A strictly relative rating ofthis Server's capabilities when compared to other Servers in the Store(s) itbelongs too; can be used to help tune load balancing. Min=0.1, Max=1000,Default=1  uint RamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10  bool RamDiskInvitationType: Either false for Fixed,or true for Variable. Default=false  System.Net.IPAddress RamDiskIpAddress: IP address touse for transferring the RAM Disk. When equal to 0.0.0.0 the server IP is usedwith the first part replaced with 233. Default=0.0.0.0  uint RamDiskTimeToLive: Time to live for theinvitation packet sent to Devices. Min=1, Max=255, Default=1  uint RefreshInterval: Interval, in number ofseconds, the server should wait before refreshing settings. If set to 0, unuseddatabase connections are never released. Min=0, Max=32767, Default=300  uint RemoteConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are remote. A value of 0 disables thefeature. Min=0, Max=128, Default=4  uint ServerCacheTimeout: Number of seconds to waitbefore considering another Server is down. Min=5, Max=60, Default=8  string Name or ServerName: Computer name with nospaces. ASCII computer name characters Max Length=21  uint ThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs)  < = 1000.Min=1, Max=60, Default=8  uint UnusedDbConnectionTimeout: Interval, in numberof seconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300  uint VDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0  Read-Only Fields  uint Active: 1 if the Server is currently active, 2if unknown, and 0 otherwise. Min=0, Max=2, Default=0  System.Net.IPAddress ManagementIp: IP address usedfor management communications between Servers. Default=0.0.0.0  uint Role: Read-only Role of the user for this item.100 is Farm Administrator, and 200 is Site Administrator. Default=999  string ServerFqdn: Read-only fully qualified domainname. Default=\"\" Max Length=1024  Guid Guid or ServerId: Read-only GUID that uniquelyidentifies this Server.  Guid SiteId: GUID of the Site this Server is to be amember of. It is not used with SiteName.  string SiteName: Name of the Site this Server is tobe a member of. It is not used with SiteId.", 
            "title": "PvsServer"
        }, 
        {
            "location": "/#pvsserverbiosbootstrap", 
            "text": "Read/Write Fields  bool BootFromHdOnFail: For network recovery rebootto hard drive when set to true, restore network connection when set to false.Default=false  System.Net.IPAddress Bootserver1_Ip: 1st boot serverIP. Only used when Lookup is false.  uint Bootserver1_Port: 1st boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910  System.Net.IPAddress Bootserver2_Ip: 2nd boot serverIP. Only used when Lookup is false. Default=0.0.0.0  uint Bootserver2_Port: 2nd boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910  System.Net.IPAddress Bootserver3_Ip: 3rd boot serverIP. Only used when Lookup is false. Default=0.0.0.0  uint Bootserver3_Port: 3rd boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910  System.Net.IPAddress Bootserver4_Ip: 4th boot serverIP. Only used when Lookup is false. Default=0.0.0.0  uint Bootserver4_Port: 4th boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910  bool DhcpEnabled: Use DHCP to retrieve target deviceIP when set to true, otherwise use the static domain, dnsIpAddresstrue anddnsIpAddress2 settings. Default=true  System.Net.IPAddress DnsIpAddress1: Primary DNSserver IP. Only used when DhcpEnabled is false.  System.Net.IPAddress DnsIpAddress2: Secondary DNSserver IP. Only used when DhcpEnabled is false.  string Domain: Domain of the primary and secondaryDNS servers. Only used when DhcpEnabled is false.  bool Enabled: Automatically update the BIOS on thetarget device with these setting when set to true, otherwise do not use thesesettings. Default=false  uint GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000  bool InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false  bool Lookup: Use DNS to find the Server when set totrue with the ServerName host value, otherwise use the bootservertrue_Ip,bootservertrue_Port, bootserver2_Ip, bootserver2_Port, bootserver3_Ip,bootserver3_Port, bootserver4_Ip, and bootserver4_Port settings. Default=true  bool PaeMode: PAE mode (use if PAE enabled inboot.ini of target device) when set to true. Default=false  uint PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000  uint RecoveryTime: When bootFromHdOnFail is 1, thisis the number of seconds to wait before reboot to hard drive. Min=10,Max=60000, Default=50  string Name or ServerName: Host to use for DNSlookup. Only used when Lookup is true. Default=IMAGESERVER1  bool VerboseMode: Display verbose diagnosticinformation when set to true. Default=false  Read-Only Field  Guid Guid or ServerId: GUID of the Server used forGet and Set.", 
            "title": "PvsServerBiosBootstrap"
        }, 
        {
            "location": "/#pvsserverbootstrap", 
            "text": "Read/Write Fields  bool BootFromHdOnFail: For network recovery rebootto hard drive when set to true, restore network connection when set to false.Default=false  System.Net.IPAddress Bootserver1_Gateway: 1st bootserver gateway. Default=0.0.0.0  System.Net.IPAddress Bootserver1_Ip: 1st boot serverIP.  System.Net.IPAddress Bootserver1_Netmask: 1st bootserver netmask. Default=0.0.0.0  uint Bootserver1_Port: 1st boot server port.Min=1025, Max=65536, Default=6910  System.Net.IPAddress Bootserver2_Gateway: 2nd bootserver gateway. Default=0.0.0.0  System.Net.IPAddress Bootserver2_Ip: 2nd boot serverIP. Default=0.0.0.0  System.Net.IPAddress Bootserver2_Netmask: 2nd bootserver netmask. Default=0.0.0.0  uint Bootserver2_Port: 2nd boot server port.Min=1025, Max=65536, Default=6910  System.Net.IPAddress Bootserver3_Gateway: 3rd bootserver gateway. Default=0.0.0.0  System.Net.IPAddress Bootserver3_Ip: 3rd boot serverIP. Default=0.0.0.0  System.Net.IPAddress Bootserver3_Netmask: 3rd bootserver netmask. Default=0.0.0.0  uint Bootserver3_Port: 3rd boot server port. Min=1025,Max=65536, Default=6910  System.Net.IPAddress Bootserver4_Gateway: 4th bootserver gateway. Default=0.0.0.0  System.Net.IPAddress Bootserver4_Ip: 4th boot serverIP. Default=0.0.0.0  System.Net.IPAddress Bootserver4_Netmask: 4th bootserver netmask. Default=0.0.0.0  uint Bootserver4_Port: 4th boot server port.Min=1025, Max=65536, Default=6910  uint GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000  bool InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false  bool PaeMode: PAE mode (use if PAE enabled inboot.ini of target device) when set to true. Default=false  uint PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000  uint RecoveryTime: When bootFromHdOnFail is 1, thisis the number of seconds to wait before reboot to hard drive. Min=10,Max=60000, Default=50  bool VerboseMode: Display verbose diagnosticinformation when set to true. Default=false  Read-Only Fields  string Name: Name of the bootstrap file used to Getand Set.  Guid Guid or ServerId: GUID of the Server used forGet and Set.", 
            "title": "PvsServerBootstrap"
        }, 
        {
            "location": "/#pvsserverbootstrapname", 
            "text": "Read-Only Field  string Name: Bootstrap file name.", 
            "title": "PvsServerBootstrapName"
        }, 
        {
            "location": "/#pvsserverinfo", 
            "text": "Read-Only Fields  uint Active: 1 if the Server is currently active, 2if unknown, and 0 otherwise. Min=0, Max=2, Default=0  uint AdMaxPasswordAge: Number of days before apassword expires. Min=1, Max=30, Default=7  bool AdMaxPasswordAgeEnabled: Age the password, whenset to true. Default=false  uint BootPauseSeconds: Number of seconds that aDevice will pause during login if its server busy. Min=1, Max=60, Default=10  uint BuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24  uint BusyDbConnectionRetryCount: Number of times afailed database connection will be retried. Min=0, Max=32767, Default=2  uint BusyDbConnectionRetryInterval: Interval, innumber of milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25  System.Net.IPAddress ContactIp: Read-only contact IPfor the Server.  string ContactPort: Read-only contact port for theServer.  string Description: User description.Default=\"\" Max Length=250  uint DeviceCount: Read-only count of Devices.Default=0  bool EventLoggingEnabled: Enable event logging, whenset to true. Default=false  uint FirstPort: Number of the first UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910  uint InitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000,Default=50  uint InitialTransactionConnectionPoolSize: Initialsize of database connection pool for transactional queries. Min=1, Max=1000,Default=50  uint IoBurstSize: Number of bytes read/writes cansend in a burst of packets. Required thatIoBurstSize/(MaxTransmissionUnits-76) < =32. Min=4096, Max=61440,Default=32768  System.Net.IPAddress[] Ip: One or more streaming ipaddresses.  DateTime LastBugReportAttempt: Time that this serverlast attempted to upload or generate a bug report bundle. Default=Empty  string LastBugReportResult: Status of the last bugreport on this server. Default=\"\" Max Length=4000  string LastBugReportStatus: Status of the last bugreport on this server. Default=\"\" Max Length=250  string LastBugReportSummary: Summary of the last bugreport on this server. Default=\"\" Max Length=250  DateTime LastCeipUploadAttempt: Time that thisserver last attempted a CEIP upload. Default=Empty  uint LastPort: Number of the last UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930  uint LicenseTimeout: Amount of seconds before alicense times out. Min=15, Max=300, Default=30  uint LocalConcurrentIoLimit: Maximum concurrent IO transactionsit performs for vDisks that are local. A value of 0 disables the feature.Min=0, Max=128, Default=4  uint LogFileBackupCopiesMax: Maximum number of logfile backups. Min=1, Max=50, Default=4  uint LogFileSizeMax: Maximum size log files canreach in Megabytes. Min=1, Max=50, Default=5  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=4  System.Net.IPAddress ManagementIp: IP address usedfor management communications between Servers. Default=0.0.0.0  uint MaxBootDevicesAllowed: Maximum number ofDevices allowed to boot simultaneously. Min=1, Max=1000, Default=500  uint MaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60  uint MaxQueryConnectionPoolSize: Maximum size ofdatabase connection pool for non-transactional queries. Min=1, Max=32767,Default=1000  uint MaxTransactionConnectionPoolSize: Maximum sizeof database connection pool for transactional queries. Min=1, Max=32767,Default=1000  uint MaxTransmissionUnits: Ethernet maximumtransmission unit size for the protocol for use for Server and Device. Requiredthat IoBurstSize/(MaxTransmissionUnits-76) < =32. Min=502, Max=16426,Default=1506  bool NonBlockingIoEnabled: Use non-Blocking IO, whenset to true. Default=true  float PowerRating: A strictly relative rating ofthis Server's capabilities when compared to other Servers in the Store(s) itbelongs too; can be used to help tune load balancing. Min=0.1, Max=1000,Default=1  uint RamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10  bool RamDiskInvitationType: Either false for Fixed,or true for Variable. Default=false  System.Net.IPAddress RamDiskIpAddress: IP address touse for transferring the RAM Disk. When equal to 0.0.0.0 the server IP is usedwith the first part replaced with 233. Default=0.0.0.0  uint RamDiskTimeToLive: Time to live for theinvitation packet sent to Devices. Min=1, Max=255, Default=1  uint RefreshInterval: Interval, in number ofseconds, the server should wait before refreshing settings. If set to 0, unuseddatabase connections are never released. Min=0, Max=32767, Default=300  uint RemoteConcurrentIoLimit: Maximum concurrent IO transactionsit performs for vDisks that are remote. A value of 0 disables the feature.Min=0, Max=128, Default=4  uint Role: Read-only Role of the user for this item.100 is Farm Administrator, and 200 is Site Administrator. Default=999  uint ServerCacheTimeout: Number of seconds to waitbefore considering another Server is down. Min=5, Max=60, Default=8  string ServerFqdn: Read-only fully qualified domainname. Default=\"\" Max Length=1024  Guid Guid or ServerId: Read-only GUID that uniquelyidentifies this Server.  string Name or ServerName: Computer name with nospaces. ASCII computer name characters Max Length=21  Guid SiteId: GUID of the Site this Server is to be amember of. It is not used with SiteName.  string SiteName: Name of the Site this Server is tobe a member of. It is not used with SiteId.  uint ThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs)  < = 1000.Min=1, Max=60, Default=8  uint UnusedDbConnectionTimeout: Interval, in numberof seconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300  uint VDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0", 
            "title": "PvsServerInfo"
        }, 
        {
            "location": "/#pvsserverstatus", 
            "text": "Read-Only Fields  uint DeviceCount: Read-only count of Devices. Default=0  System.Net.IPAddress Ip: Read-only contact IP forthe Server.  uint Port: Read-only contact port for the Server.  Guid Guid or ServerId: Read-only GUID of the Server.Can be used with Get Server.  string Name or ServerName: Read-only Name of the Server.Can be used with Get Server.  uint Status: Status of the server, 0 if down, 1 ifup and 2 if unknown. Default=0", 
            "title": "PvsServerStatus"
        }, 
        {
            "location": "/#pvsserverstore", 
            "text": "Read/Write Fields  string[] CachePath: Cache path(s) that the Serveruses with the Store. If none are specified the caches will be placed in theStore cachePath. Default=None  string Path: Directory path that the Server uses toaccess the Store. Default=\"\" Max Length=255  Read-Only Fields  Guid ServerId: GUID of the server that uses theStore. ServerName can be used instead.  string ServerName: Name of the server that uses theStore. ServerId can be used instead.  Guid StoreId: GUID of the Store. StoreName can beused instead.  string StoreName: Name of the Store. StoreId can beused instead.", 
            "title": "PvsServerStore"
        }, 
        {
            "location": "/#pvssite", 
            "text": "Read/Write Fields  Guid DefaultCollectionId: GUID of the Collection toplace new Devices into automatically. Not used with defaultCollectionName.Default=00000000-0000-0000-0000-000000000000  string DefaultCollectionName: Name of the Collectionto place new Devices into automatically. Not used with DefaultCollectionId.Default=\"\"  string Description: User description.Default=\"\" Max Length=250  Guid DiskUpdateServerId: GUID of the Disk UpdateServer for the Site. Not used with DiskUpdateServerName.Default=00000000-0000-0000-0000-000000000000  string DiskUpdateServerName: Name of the Disk UpdateServer for the Site. Not used with DiskUpdateServerId. Default=\"\"  bool EnableDiskUpdate: True when Disk Updated isenabled for the Site, false otherwise. Default=false  uint InventoryFilePollingInterval: The number ofseconds between polls for Disk changes in the Stores. Min=1, Max=600,Default=60  string MakPassword: User password used for MAKactivation. Default=\"\" Max Length=64  string MakUser: User name used for MAK activation.Default=\"\" Max Length=64  string Name or SiteName: Name of the Site. MaxLength=50  Read-Only Fields  uint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, and 999 is read-only.Default=999  Guid Guid or SiteId: Read-only GUID that uniquelyidentifies this Site.", 
            "title": "PvsSite"
        }, 
        {
            "location": "/#pvssiteview", 
            "text": "Read/Write Fields  string Description: User description.Default=\"\" Max Length=250  string Name or SiteViewName: Name of the Site View.Max Length=50  Read-Only Fields  uint ActiveDeviceCount: Read-only count of activeDevices in this Site View. Default=0  uint DeviceCount: Read-only count of Devices in thisSite View. Default=0  uint DeviceWithPVDCount: Read-only count of Deviceswith Personal vDisk in this Site View. Default=0  uint MakActivateNeededCount: Read-only count ofactive Devices that need MAK activation in this Site View. Default=0  uint Role: Read-only Role of the user for this item.100 is Farm Administrator, and 200 is Site Administrator. Default=999  Guid SiteId: GUID of the Site this View is to be amember of. It is not used with SiteName.  string SiteName: Name of the Site this View is to bea member of. It is not used with SiteId.  Guid Guid or SiteViewId: Read-only GUID thatuniquely identifies this Site View.", 
            "title": "PvsSiteView"
        }, 
        {
            "location": "/#pvsstore", 
            "text": "Read/Write Fields  string[] CachePath: Default Cache path(s) that theServers use with this Store. If none are specified the caches will be placed inthe WriteCache subdirectory of the Store path. Default=None  string Description: User description.Default=\"\" Max Length=250  string Path: Default directory path that the Serversuse to access this Store. Max Length=255  Guid SiteId: GUID of the Site where Administratorsof that Site can change this Store. Not used for Farm Stores. SiteName can beused instead. Default=00000000-0000-0000-0000-000000000000  string SiteName: Name of the Site whereAdministrators of that Site can change this Store. Not used for Farm Stores.SiteId can be used instead. Default=\"\"  string Name or StoreName: Name of the Store. MaxLength=50  Read-Only Fields  string PathType: Read-only field indicating if thevdisks are on a server's local hard disk or on a remote share.  uint Role: Read-only Role of the user for this item.100 is Farm Administrator, 200 is Site Administrator, and 999 is read-only.Default=999  Guid Guid or StoreId: Read-only GUID that uniquelyidentifies this Store.", 
            "title": "PvsStore"
        }, 
        {
            "location": "/#pvsstoresharedorserverpath", 
            "text": "Read-Only Fields  string Path: Directory path that the Servers use toaccess this Store.  Guid StoreId: GUID of the Store.  string StoreName: Name of the Store.", 
            "title": "PvsStoreSharedOrServerPath"
        }, 
        {
            "location": "/#pvstask", 
            "text": "Read-Only Fields  string Command: Command being processed.Default=\"\" Max Length=50  string CommandType: Type of the command. Values are:Add, Delete, Get, Info, Run, RunWithReturn, Set and SetList.Default=\"\" Max Length=13  DateTime ExpirationTime: Time the task record may beremoved from the database if the task does not complete. Has the date and timewithout milliseconds.  uint Handle: Handle to a running function.  System.Net.IPAddress Ip: IP Address of the remotehost.  string MapiException: Exception result in XMLformat. Default=\"\"  uint Port: Port number of the remote service.  string Results: Result in XML format.Default=\"\"  string ServerFqdn: Qualified name of the server.Default=\"\" Max Length=1024  Guid SiteId: GUID of the Site that this Task isbeing processed in. Default=00000000-0000-0000-0000-000000000000  string SiteName: Name of the Site that that thisTask is being processed in.  DateTime StartTime: Time the task was started. Hasthe date and time without milliseconds.  uint State: State of the Task. Values are: 0(Processing), 1 (Cancelled), and 2 (Complete). Min=0, Max=2  uint TaskId: Unique ID of the task.", 
            "title": "PvsTask"
        }, 
        {
            "location": "/#pvsundefineddisk", 
            "text": "Read-Only Fields  bool VHDX: If VHDX is true, the format of the imageis VHDX. Otherwise it is VHD. Default=false  string Name: Name of the disk file without theextension.  uint Status: Status of the disk file. Values are: 0(Valid), 1 (Missing Properties File), 2 (Access Denied), 3 (Access Denied andMissing Properties File), 4 (Invalid Disk File), 5 (Manifest Missing orInvalid), 6 (Both VHD and VHDX)", 
            "title": "PvsUndefinedDisk"
        }, 
        {
            "location": "/#pvsupdatetask", 
            "text": "Read/Write Fields  uint[] Date: Days of the month. Numbers from 1-31are the only valid values. This is used with Monthly Date recurrence.Default=\"\" Max Length=83  uint DayMask: Days selected values. 1 = Monday, 2 =Tuesday, 4 = Wednesday, 8 = Thursday, 16 = Friday, 32 = Saturday, 64 = Sunday,128 = Day. Default=0. This is used with Weekly and Monthly Type recurrence.Min=1, Max=255, Default=4  string Description: User description.Default=\"\" Max Length=250  string Domain: Domain to add the Disk UpdateDevice(s) to. If not included, the first Domain Controller found on the Serveris used. Default=\"\" Max Length=255  bool Enabled: True when it will be processed, falseotherwise. Default=true  string EsdType: Esd to use. Valid values are SCCM orWSUS. If no value, a custom script is run on the client. Default=\"\"Max Length=50  uint Hour: The hour of the day to perform the task.Min=0, Max=23, Default=0  uint Minute: The minute of the hour to perform thetask. Min=0, Max=59, Default=0  uint MonthlyOffset: When to happen monthly. 0 =None, 1 = First, 2 = Second, 3 = Third, 4 = Forth, 5 = Last. This is used withMonthly Type recurrence. Min=0, Max=5, Default=3  string OrganizationUnit: Organizational Unit to addthe Disk Update Device(s) to. This parameter is optional. If it is notspecified, the device is added to the built in Computers container. Child OU'sshould be delimited with forward slashes, e.g. \"ParentOU/ChildOU\".Special characters in an OU name, such as '\"', '#', '+', ',', ';', '>','=', must be escaped with a backslash. For example, an OU called\"commaIn,TheMiddle\" must be specified as\"commaIn\\,TheMiddle\". The old syntax of delimiting child OU's with acomma is still supported, but deprecated. Note that in this case, the child OUcomes first, e.g. \"ChildOU,ParentOU\". Default=\"\" MaxLength=255  uint PostUpdateApprove: Access to place the versionin after the update has occurred. 0 = Production, 1 = Test, 2 = Maintenance.Min=0, Max=2, Default=0  string PostUpdateScript: Script file to run afterthe update finishes. Default=\"\" Max Length=255  string PostVmScript: Script file to run after the VMis unloaded. Default=\"\" Max Length=255  string PreUpdateScript: Script file to run beforethe update starts. Default=\"\" Max Length=255  string PreVmScript: Script file to run before the VMis loaded. Default=\"\" Max Length=255  uint Recurrence: The update will reoccur on thisschedule. 0 = None, 1 = Daily, 2 = Every Weekday, 3 = Weekly, 4 = Monthly Date,5 = Monthly Type. Min=0, Max=5, Default=0  string Name or UpdateTaskName: Name of the UpdateTask. It is unique within the Site. Max Length=50  Read-Only Fields  Guid SiteId: GUID of the Site that this Update Taskis a member of. It is not used with SiteName.  string SiteName: Name of the Site that this UpdateTask is a member of. It is not used with SiteId.  Guid Guid or UpdateTaskId: Read-only GUID thatuniquely identifies this Update Task.", 
            "title": "PvsUpdateTask"
        }, 
        {
            "location": "/#pvsversion", 
            "text": "Read-Only Fields  string DbEdition: Edition of the database. If'Express Edition', monitor dbSize.  uint DbSize: Size of the database in MB. Monitorthis value if the edition is 'Express Edition' and this value is close toreaching the 4000 MB maximum. Default=0  uint DbVersion: Version of the database schema as anumber. Default=0  string MapiVersion: Version of the system inmajor.minor.point.build format.  uint MapiVersionNumber: Internal version number ofthe system. It is a number that is increaed by 100 for each major and minorrelease. Point releases are the numbers between each 100. Value is 0 when thesystem does not support MapiVersionNumber. Default=0  string SdkVersion: Version of the SDK inmajor.minor.build format.  uint Type: Type of system. Values are 0 (Normal), 1(OROM), and 2 (Secure). Default=0", 
            "title": "PvsVersion"
        }, 
        {
            "location": "/#pvsvirtualhostingpool", 
            "text": "Read/Write Fields  string Datacenter: Datacenter of the Virtual HostingPool. Default=\"\" Max Length=250  string Description: User description.Default=\"\" Max Length=250  string Password: Password to use when logging intothe Server.  uint Port: Port of the Host Server. Min=80,Max=65534, Default=80  bool PrepopulateEnabled: Enable prepopulate when setto true Default=false  string Server: Name or IP of the Host Server. MaxLength=255  uint ShutdownTimeout: Timeout for shutdown. Min=2,Max=30, Default=10  uint Type: Type of the Virtual Hosting Pool. 0 =Citrix XenServer, 1 = Microsoft SCVMM/Hyper-V, 2 = VMWare vSphere/ESX. Min=0,Max=2, Default=0  uint UpdateLimit: Number of updates at the sametime. Min=2, Max=1000, Default=1000  uint UpdateTimeout: Timeout for updates. Min=2,Max=240, Default=60  string UserName: Name to use when logging into theServer.  string Name or VirtualHostingPoolName: Name of theVirtual Hosting Pool. It is unique within the Site. Max Length=50  Guid XdHostingUnitUuid: UUID of XenDesktop HostingUnit Default=00000000-0000-0000-0000-000000000000  bool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false  Guid XsPvsSiteUuid: UUID of XenServerPVS_site  Default=00000000-0000-0000-0000-000000000000  Read-Only Fields  Guid SiteId: GUID of the Site that this VirtualHosting Pool is a member of. It is not used with SiteName.  string SiteName: Name of the Site that this VirtualHosting Pool is a member of. It is not used with SiteId.  Guid Guid or VirtualHostingPoolId: Read-only GUIDthat uniquely identifies this Virtual Hosting Pool.", 
            "title": "PvsVirtualHostingPool"
        }, 
        {
            "location": "/#pvsxdsite", 
            "text": "Read/Write Field  string[] ConfigServices: XenDesktop Serveraddresses. Max Length=2000  Read-Only Field  Guid Guid or XdSiteId: GUID of the XenDesktop Site.", 
            "title": "PvsXDSite"
        }, 
        {
            "location": "/#cmdlets", 
            "text": "", 
            "title": "Cmdlets"
        }, 
        {
            "location": "/#add-pvsdevicetodomain", 
            "text": "Add a Device, all Devices in a Collection or View toa Domain.  One of these required  Guid[] Guid or DeviceId: GUID of the Device to Addto the Domain.  string[] Name or DeviceName: Name of the Device toAdd to the Domain.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toAdd to the Domain.  Guid[] CollectionId: GUID of the Collection to Addall Devices to the Domain.  Guid[] SiteViewId: GUID of the Site View to Add allDevices to the Domain.  Guid[] FarmViewId: GUID of the Farm View to Add allDevices to the Domain.  string[] FarmViewName: Name of the Farm View to Addall Devices to the Domain.  or one of these required ; resolutions  string[] CollectionName: Name of the Collection toAdd all Devices to the Domain.  string[] SiteViewName: Name of the Site View to Addall Devices to the Domain.  Optional  string[] Domain: Domain to add the Device(s) to. Ifnot included, the first Domain Controller found on the Server is used.  string[] OrganizationUnit: Organizational Unit toadd the Device(s) to. This parameter is optional. If it is not specified, thedevice is added to the built in Computers container. Child OU's should bedelimited with forward slashes, e.g. \"ParentOU/ChildOU\". Specialcharacters in an OU name, such as '\"', '#', '+', ',', ';', '>', '=',must be escaped with a backslash. For example, an OU called\"commaIn,TheMiddle\" must be specified as\"commaIn\\,TheMiddle\". The old syntax of delimiting child OU's with acomma is still supported, but deprecated. Note that in this case, the child OUcomes first, e.g. \"ChildOU,ParentOU\".  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId, CollectionId, SiteViewId or FarmViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Add-PvsDeviceToDomain"
        }, 
        {
            "location": "/#example-1-add-pvsdevicetodomain-for-name-with-domain-and-organizationunit", 
            "text": "Add-PvsDeviceToDomain -Name theDevice -DomaintheDomain -OrganizationUnit theOrganizationUnit", 
            "title": "EXAMPLE 1: Add-PvsDeviceToDomain for Name with Domain and OrganizationUnit"
        }, 
        {
            "location": "/#example-2-add-pvsdevicetodomain-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theAdd-PvsDeviceToDomain.  Get-PvsDevice -Name theDevice -Fields Guid |Add-PvsDeviceToDomain -Domain theDomain -OrganizationUnit theOrganizationUnit  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Add-PvsDeviceToDomain for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-3-add-pvsdevicetodomain-for-farmviewname-with-domain-andorganizationunit", 
            "text": "Add-PvsDeviceToDomain -FarmViewName theFarmView-Domain theDomain -OrganizationUnit theOrganizationUnit", 
            "title": "EXAMPLE 3: Add-PvsDeviceToDomain for FarmViewName with Domain andOrganizationUnit"
        }, 
        {
            "location": "/#example-4-add-pvsdevicetodomain-for-pvsfarmview-using-pipe", 
            "text": "The Get-PvsFarmView output is piped to theAdd-PvsDeviceToDomain.  Get-PvsFarmView -Name theFarmView -Fields Guid |Add-PvsDeviceToDomain -Domain theDomain -OrganizationUnit theOrganizationUnit  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 4: Add-PvsDeviceToDomain for PvsFarmView Using Pipe"
        }, 
        {
            "location": "/#example-5-add-pvsdevicetodomain-for-collectionname-with-domain-andorganizationunit", 
            "text": "Add-PvsDeviceToDomain -CollectionName theCollection-SiteName theSite -Domain theDomain -OrganizationUnit theOrganizationUnit  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 5: Add-PvsDeviceToDomain for CollectionName with Domain andOrganizationUnit"
        }, 
        {
            "location": "/#example-6-add-pvsdevicetodomain-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theAdd-PvsDeviceToDomain.  Get-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Add-PvsDeviceToDomain -Domain theDomain-OrganizationUnit theOrganizationUnit  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 6: Add-PvsDeviceToDomain for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#example-7-add-pvsdevicetodomain-for-siteviewname-with-domain-andorganizationunit", 
            "text": "Add-PvsDeviceToDomain -SiteViewName theSiteView-SiteName theSite -Domain theDomain -OrganizationUnit theOrganizationUnit  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 7: Add-PvsDeviceToDomain for SiteViewName with Domain andOrganizationUnit"
        }, 
        {
            "location": "/#example-8-add-pvsdevicetodomain-for-pvssiteview-using-pipe", 
            "text": "The Get-PvsSiteView output is piped to theAdd-PvsDeviceToDomain.  Get-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Add-PvsDeviceToDomain -Domain theDomain -OrganizationUnittheOrganizationUnit  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 8: Add-PvsDeviceToDomain for PvsSiteView Using Pipe"
        }, 
        {
            "location": "/#add-pvsdevicetoview", 
            "text": "Move a Device to a Collection. Personal vDiskDevices cannot be moved to a Collection in another Site.  One of these required  Guid[] Guid or DeviceId: GUID of the Device to Add.  string[] Name or DeviceName: Name of the Device toAdd.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toAdd.  One of these required  Guid[] SiteViewId: GUID of the Site View to Add theDevice to.  Guid[] FarmViewId: GUID of the Farm View to Add theDevice to.  string[] FarmViewName: Name of the Farm View to Addthe Device to.  or this required ; resolution  string[] SiteViewName: Name of the Site View to Addthe Device to.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId, SiteViewId or FarmViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Add-PvsDeviceToView"
        }, 
        {
            "location": "/#example-1-add-pvsdevicetoview-for-pvsdevice-to-pvsfarmview", 
            "text": "Add-PvsDeviceToView -Name theDevice -PvsFarmViewNamethePvsFarmView", 
            "title": "EXAMPLE 1: Add-PvsDeviceToView for PvsDevice to PvsFarmView"
        }, 
        {
            "location": "/#example-2-add-pvsdevicetoview-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theAdd-PvsDeviceToView.  Get-PvsDevice -Name theDevice -Fields Guid |Add-PvsDeviceToView -PvsFarmViewName thePvsFarmView  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Add-PvsDeviceToView for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-3-add-pvsdevicetoview-for-pvsfarmview-using-pipe", 
            "text": "The Get-PvsFarmView output is piped to theAdd-PvsDeviceToView.  Get-PvsFarmView -Name theFarmView -Fields Guid |Add-PvsDeviceToView -Name theDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 3: Add-PvsDeviceToView for PvsFarmView Using Pipe"
        }, 
        {
            "location": "/#example-4-add-pvsdevicetoview-for-pvsdevice-to-pvssiteview", 
            "text": "Add-PvsDeviceToView -Name theDevice -SiteViewNametheSiteView -SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 4: Add-PvsDeviceToView for PvsDevice to PvsSiteView"
        }, 
        {
            "location": "/#example-5-add-pvsdevicetoview-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theAdd-PvsDeviceToView.  Get-PvsDevice -Name theDevice -Fields Guid |Add-PvsDeviceToView -SiteViewName theSiteView -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 5: Add-PvsDeviceToView for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-6-add-pvsdevicetoview-for-pvssiteview-using-pipe", 
            "text": "The Get-PvsSiteView output is piped to theAdd-PvsDeviceToView.  Get-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Add-PvsDeviceToView -Name theDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 6: Add-PvsDeviceToView for PvsSiteView Using Pipe"
        }, 
        {
            "location": "/#add-pvsdisklocatortodevice", 
            "text": "Assign a Disk Locator to a Device, a Collection orView.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to Assign.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator File to Assign.  One of these required  Guid[] DeviceId: GUID of the Device to Assign a DiskLocator.  string[] DeviceName: Name of the Device to Assign aDisk Locator.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toAssign a Disk Locator.  Guid[] CollectionId: GUID of the Collection toAssign a Disk Locator or Locators to all Devices.  Guid[] SiteViewId: GUID of the Site View to Assign aDisk Locator to all Devices.  Guid[] FarmViewId: GUID of the Farm View to Assign aDisk Locator to all Devices.  string[] FarmViewName: Name of the Farm View toAssign a Disk Locator to all Devices.  or one of these required ; resolutions  string[] CollectionName: Name of the Collection toAssign a Disk Locator or Locators to all Devices.  string[] SiteViewName: Name of the Site View toAssign a Disk Locator to all Devices.  Optional  SwitchParameter RemoveExisting: If -RemoveExistingis specified, remove the existing Disk Locators before assigning the new one.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId, DeviceId, CollectionId, SiteViewId orFarmViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Add-PvsDiskLocatorToDevice"
        }, 
        {
            "location": "/#example-1-add-pvsdisklocatortodevice-for-pvsdisklocator-to-pvsdevice", 
            "text": "Add-PvsDiskLocatorToDevice -Name theDiskLocator-DeviceName theDevice -SiteName theSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Add-PvsDiskLocatorToDevice for PvsDiskLocator to PvsDevice"
        }, 
        {
            "location": "/#example-2-add-pvsdisklocatortodevice-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theAdd-PvsDiskLocatorToDevice.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Add-PvsDiskLocatorToDevice-DeviceName theDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Add-PvsDiskLocatorToDevice for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-3-add-pvsdisklocatortodevice-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theAdd-PvsDiskLocatorToDevice.  Get-PvsDevice -Name theDevice -Fields Guid |Add-PvsDiskLocatorToDevice -Name theDiskLocator -SiteName theSite -StoreNametheStoreName  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 3: Add-PvsDiskLocatorToDevice for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-4-add-pvsdisklocatortodevice-for-pvsdisklocator-to-pvscollection", 
            "text": "Add-PvsDiskLocatorToDevice -Name theDiskLocator-CollectionName theCollection -SiteName theSite -StoreName theStore", 
            "title": "EXAMPLE 4: Add-PvsDiskLocatorToDevice for PvsDiskLocator to PvsCollection"
        }, 
        {
            "location": "/#example-5-add-pvsdisklocatortodevice-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theAdd-PvsDiskLocatorToDevice.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Add-PvsDiskLocatorToDevice-CollectionName theCollection -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 5: Add-PvsDiskLocatorToDevice for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-6-add-pvsdisklocatortodevice-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theAdd-PvsDiskLocatorToDevice.  Get-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Add-PvsDiskLocatorToDevice -Name theDiskLocator-SiteName theSite -StoreName theStoreName  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 6: Add-PvsDiskLocatorToDevice for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#example-7-add-pvsdisklocatortodevice-for-pvsdisklocator-to-pvsfarmview", 
            "text": "Add-PvsDiskLocatorToDevice -Name theDiskLocator-FarmViewName theFarmView -SiteName theSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 7: Add-PvsDiskLocatorToDevice for PvsDiskLocator to PvsFarmView"
        }, 
        {
            "location": "/#example-8-add-pvsdisklocatortodevice-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theAdd-PvsDiskLocatorToDevice.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Add-PvsDiskLocatorToDevice-FarmViewName theFarmView  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 8: Add-PvsDiskLocatorToDevice for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-9-add-pvsdisklocatortodevice-for-pvsfarmview-using-pipe", 
            "text": "The Get-PvsFarmView output is piped to theAdd-PvsDiskLocatorToDevice.  Get-PvsFarmView -Name theFarmView -Fields Guid |Add-PvsDiskLocatorToDevice -Name theDiskLocator -SiteName theSite -StoreName theStoreName  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 9: Add-PvsDiskLocatorToDevice for PvsFarmView Using Pipe"
        }, 
        {
            "location": "/#example-10-add-pvsdisklocatortodevice-for-pvsdisklocator-to-pvssiteview", 
            "text": "Add-PvsDiskLocatorToDevice -Name theDiskLocator-SiteViewName theSiteView -SiteName theSite -StoreName theStore", 
            "title": "EXAMPLE 10: Add-PvsDiskLocatorToDevice for PvsDiskLocator to PvsSiteView"
        }, 
        {
            "location": "/#example-11-add-pvsdisklocatortodevice-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theAdd-PvsDiskLocatorToDevice.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Add-PvsDiskLocatorToDevice-SiteViewName theSiteView -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 11: Add-PvsDiskLocatorToDevice for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-12-add-pvsdisklocatortodevice-for-pvssiteview-using-pipe", 
            "text": "The Get-PvsSiteView output is piped to theAdd-PvsDiskLocatorToDevice.  Get-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Add-PvsDiskLocatorToDevice -Name theDiskLocator -SiteNametheSite -StoreName theStoreName  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 12: Add-PvsDiskLocatorToDevice for PvsSiteView Using Pipe"
        }, 
        {
            "location": "/#add-pvsdisktoupdatetask", 
            "text": "Add a Disk to an Update Task.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to Assign.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator File to Assign.  One of these required  Guid[] UpdateTaskId: GUID of the Update Task toAssign a Disk.  string[] UpdateTaskName: Name of the Update Task toAssign a Disk.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId or UpdateTaskId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Add-PvsDiskToUpdateTask"
        }, 
        {
            "location": "/#example-1-add-pvsdisktoupdatetask-for-pvsdisklocator-to-pvsupdatetask", 
            "text": "Add-PvsDiskToUpdateTask -Name theDiskLocator-UpdateTaskName theUpdateTask -SiteName theSite -StoreName theStore  UpdateTaskId can be used instead of UpdateTaskNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Add-PvsDiskToUpdateTask for PvsDiskLocator to PvsUpdateTask"
        }, 
        {
            "location": "/#example-2-add-pvsdisktoupdatetask-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theAdd-PvsDiskToUpdateTask.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Add-PvsDiskToUpdateTask-UpdateTaskName theUpdateTask -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Add-PvsDiskToUpdateTask for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-3-add-pvsdisktoupdatetask-for-pvsupdatetask-using-pipe", 
            "text": "The Get-PvsUpdateTask output is piped to theAdd-PvsDiskToUpdateTask.  Get-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Fields Guid | Add-PvsDiskToUpdateTask -Name theDiskLocator -SiteNametheSite -StoreName theStore  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 3: Add-PvsDiskToUpdateTask for PvsUpdateTask Using Pipe"
        }, 
        {
            "location": "/#add-pvsdiskversion", 
            "text": "Add one or more new Versions to a Disk. A manifestfile for the new Disk Version(s) must exist in the Store.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator File to Add the new Disk Version(s) to.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator File to Add the new Disk Version(s) to.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Add-PvsDiskVersion"
        }, 
        {
            "location": "/#example-1-add-pvsdiskversion-for-name", 
            "text": "Add-PvsDiskVersion -Name theDiskLocator -SiteNametheSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Add-PvsDiskVersion for Name"
        }, 
        {
            "location": "/#example-2-add-pvsdiskversion-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theAdd-PvsDiskVersion.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Add-PvsDiskVersion  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Add-PvsDiskVersion for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#clear-pvsconnection", 
            "text": "Closes the existing SoapServer connection, and if-Persist is specified the connection settings in the registry are removed.  Optional  SwitchParameter Persist: If -Persist is specified,clear the connection settings in the registry.  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Clear-PvsConnection"
        }, 
        {
            "location": "/#example-1-clear-pvsconnection", 
            "text": "Clear-PvsConnection", 
            "title": "EXAMPLE 1: Clear-PvsConnection"
        }, 
        {
            "location": "/#example-2-clear-pvsconnection-with-persist", 
            "text": "Clear-PvsConnection -Persist", 
            "title": "EXAMPLE 2: Clear-PvsConnection with Persist"
        }, 
        {
            "location": "/#clear-pvstask", 
            "text": "Clear a single or all completed or cancelled Tasksin a Site or the whole Farm.  One of these optional  uint TaskId: Id of the Task to Clear.  Guid[] SiteId: Site Id of the Tasks to Clear.  string[] SiteName: Site Name of the Tasks to Clear.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  TaskId or SiteId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Clear-PvsTask"
        }, 
        {
            "location": "/#example-1-clear-pvstask-for-taskid", 
            "text": "Clear-PvsTask -TaskId 101", 
            "title": "EXAMPLE 1: Clear-PvsTask for TaskId"
        }, 
        {
            "location": "/#example-2-clear-pvstask-for-pvstask-using-pipe", 
            "text": "The Get-PvsTask output is piped to theClear-PvsTask.  Get-PvsTask -TaskId 101 -Fields -TaskId |Clear-PvsTask  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Clear-PvsTask for PvsTask Using Pipe"
        }, 
        {
            "location": "/#example-3-clear-pvstask-for-sitename", 
            "text": "Clear-PvsTask -SiteName theSite", 
            "title": "EXAMPLE 3: Clear-PvsTask for SiteName"
        }, 
        {
            "location": "/#example-4-clear-pvstask-for-pvstask-using-pipe", 
            "text": "The Get-PvsTask output is piped to theClear-PvsTask.  Get-PvsTask -SiteName theSite -Fields -SiteId |Clear-PvsTask  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 4: Clear-PvsTask for PvsTask Using Pipe"
        }, 
        {
            "location": "/#copy-pvsdeviceproperties", 
            "text": "Copy properties of one Device to a Device, all theDevices in a Collection, Site View or Farm View.  One of these required  Guid DeviceIdFrom: GUID of the Device to Copy from.  string DeviceNameFrom: Name of the Device to Copyfrom.  PvsPhysicalAddress DeviceMacFrom: Mac of the Deviceto Copy from.  One of these required  Guid Guid or DeviceId: GUID of the Device to Copyto.  string Name or DeviceName: Name of the Device toCopy to.  PvsPhysicalAddress DeviceMac: MAC of the Device toCopy to.  Guid CollectionId: GUID of the Collection to Copyto.  Guid SiteViewId: GUID of the Site View to Copy to.  Guid FarmViewId: GUID of the Farm View to Copy to.  string FarmViewName: Name of the Farm View to Copyto.  or one of these required ; resolutions  string CollectionName: Name of the Collection toCopy to.  string SiteViewName: Name of the Site View to Copyto.  Optional  uint[] Properties: If not specified, all are copied.Properties to copy. Values are: 1 (Description), 2 (Class), 3 (Port), 4(Disabled), 5 (Boot Behavior), 6 (Disk Assignment), 7 (Personality), 8(Printer), 9 (Type), 10 (Authentication) and 11 (Logging).  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId, CollectionId, SiteViewId or FarmViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Copy-PvsDeviceProperties"
        }, 
        {
            "location": "/#example-1-copy-pvsdeviceproperties-for-name", 
            "text": "Copy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -Name theDeviceTo", 
            "title": "EXAMPLE 1: Copy-PvsDeviceProperties for Name"
        }, 
        {
            "location": "/#example-2-copy-pvsdeviceproperties-for-name-with-properties", 
            "text": "Copy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -Name theDeviceTo -Properties 2, 3", 
            "title": "EXAMPLE 2: Copy-PvsDeviceProperties for Name with Properties"
        }, 
        {
            "location": "/#example-3-copy-pvsdeviceproperties-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theCopy-PvsDeviceProperties.  Get-PvsDevice -Name theDeviceTo -Fields Guid |Copy-PvsDeviceProperties -DeviceNameFrom theDeviceFrom -Properties 2, 3  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 3: Copy-PvsDeviceProperties for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-4-copy-pvsdeviceproperties-for-name", 
            "text": "Copy-PvsDeviceProperties -DeviceMacFrom\"00-11-22-33-44-55\" -Name theDeviceTo", 
            "title": "EXAMPLE 4: Copy-PvsDeviceProperties for Name"
        }, 
        {
            "location": "/#example-5-copy-pvsdeviceproperties-for-name-with-properties", 
            "text": "Copy-PvsDeviceProperties -DeviceMacFrom\"00-11-22-33-44-55\" -Name theDeviceTo -Properties 2, 3", 
            "title": "EXAMPLE 5: Copy-PvsDeviceProperties for Name with Properties"
        }, 
        {
            "location": "/#example-6-copy-pvsdeviceproperties-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theCopy-PvsDeviceProperties.  Get-PvsDevice -Name theDeviceTo -Fields Guid |Copy-PvsDeviceProperties -DeviceMacFrom \"00-11-22-33-44-55\"-Properties 2, 3  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 6: Copy-PvsDeviceProperties for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-7-copy-pvsdeviceproperties-for-farmviewname", 
            "text": "Copy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -FarmViewName theFarmViewNameTo", 
            "title": "EXAMPLE 7: Copy-PvsDeviceProperties for FarmViewName"
        }, 
        {
            "location": "/#example-8-copy-pvsdeviceproperties-for-farmviewname-with-properties", 
            "text": "Copy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -FarmViewName theFarmViewNameTo -Properties 2, 3", 
            "title": "EXAMPLE 8: Copy-PvsDeviceProperties for FarmViewName with Properties"
        }, 
        {
            "location": "/#example-9-copy-pvsdeviceproperties-for-pvsfarmview-using-pipe", 
            "text": "The Get-PvsFarmView output is piped to theCopy-PvsDeviceProperties.  Get-PvsFarmView -Name theFarmViewTo -Fields Guid |Copy-PvsDeviceProperties -DeviceNameFrom theDeviceFrom -Properties 2, 3  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 9: Copy-PvsDeviceProperties for PvsFarmView Using Pipe"
        }, 
        {
            "location": "/#example-10-copy-pvsdeviceproperties-for-collectionname", 
            "text": "Copy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -CollectionName theCollectionNameTo -SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 10: Copy-PvsDeviceProperties for CollectionName"
        }, 
        {
            "location": "/#example-11-copy-pvsdeviceproperties-for-collectionname-with-properties", 
            "text": "Copy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -CollectionName theCollectionNameTo -SiteName theSite -Properties2, 3  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 11: Copy-PvsDeviceProperties for CollectionName with Properties"
        }, 
        {
            "location": "/#example-12-copy-pvsdeviceproperties-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theCopy-PvsDeviceProperties.  Get-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Copy-PvsDeviceProperties -DeviceNameFrom theDeviceFrom-Properties 2, 3  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 12: Copy-PvsDeviceProperties for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#example-13-copy-pvsdeviceproperties-for-siteviewname", 
            "text": "Copy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -SiteViewName theSiteViewNameTo -SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 13: Copy-PvsDeviceProperties for SiteViewName"
        }, 
        {
            "location": "/#example-14-copy-pvsdeviceproperties-for-siteviewname-with-properties", 
            "text": "Copy-PvsDeviceProperties -DeviceNameFromtheDeviceFrom -SiteViewName theSiteViewNameTo -SiteName theSite -Properties 2,3  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 14: Copy-PvsDeviceProperties for SiteViewName with Properties"
        }, 
        {
            "location": "/#example-15-copy-pvsdeviceproperties-for-pvssiteview-using-pipe", 
            "text": "The Get-PvsSiteView output is piped to theCopy-PvsDeviceProperties.  Get-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Copy-PvsDeviceProperties -DeviceNameFrom theDeviceFrom-Properties 2, 3  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 15: Copy-PvsDeviceProperties for PvsSiteView Using Pipe"
        }, 
        {
            "location": "/#copy-pvsdiskproperties", 
            "text": "Copy properties of one Disk to a Disk.  This required  Guid DiskLocatorIdFrom: GUID of the Disk Locator toCopy from.  This required  Guid Guid or DiskLocatorId: GUID of the Disk Locatorto Copy to.  Optional  uint[] Properties: If not specified, all are copied.Properties to copy. Values are: 1 (Description), 2 (Class), 3 (Type), 4 (DiskMode), 5 (Auto Update), 6 (HA), 7 (Active Directory), 8 (Printer), 10(Version), 11 (Date), 12 (Author), 13 (Title), 14 (Company), 15 (InternalFilename), 16 (Original Filename), 17 (Hardware Target), 18 (Menu Text), 19(Enabled), 20 (Server), and 21 (Store).  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Copy-PvsDiskProperties"
        }, 
        {
            "location": "/#example-1-copy-pvsdiskproperties-for-guid", 
            "text": "Copy-PvsDiskProperties -DiskLocatorIdFrom\"66302103-2991-4e42-ba58-a1614cec070c\" -Guid\"f5eb3de9-bcf4-416f-a289-6a9472c13f8b\"", 
            "title": "EXAMPLE 1: Copy-PvsDiskProperties for Guid"
        }, 
        {
            "location": "/#example-2-copy-pvsdiskproperties-for-guid-with-properties", 
            "text": "Copy-PvsDiskProperties -DiskLocatorIdFrom\"66302103-2991-4e42-ba58-a1614cec070c\" -Guid\"f5eb3de9-bcf4-416f-a289-6a9472c13f8b\" -Properties 2, 3", 
            "title": "EXAMPLE 2: Copy-PvsDiskProperties for Guid with Properties"
        }, 
        {
            "location": "/#example-3-copy-pvsdiskproperties-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theCopy-PvsDiskProperties.  Get-PvsDiskLocator -Guid\"f5eb3de9-bcf4-416f-a289-6a9472c13f8b\" -Fields Guid |Copy-PvsDiskProperties -DiskLocatorIdFrom\"66302103-2991-4e42-ba58-a1614cec070c\" -Properties 2, 3  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 3: Copy-PvsDiskProperties for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#copy-pvsserverproperties", 
            "text": "Copy properties of one Server to a Server.  One of these required  Guid ServerIdFrom: GUID of the Server to Copy from.  string ServerNameFrom: Name of the Server to Copyfrom.  One of these required  Guid Guid or ServerId: GUID of the Server to Copyto.  string Name or ServerName: Name of the Server toCopy to.  Optional  uint[] Properties: If not specified, all are copied.Properties to copy. Values are: 1 (Configuration), 2 (Port), 4 (ActiveDirectory), 5 (Advanced Server), 6 (Advanced Network), 7 (Advanced Pacing), 8(Advanced Device) and 9 (Logging).  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Copy-PvsServerProperties"
        }, 
        {
            "location": "/#example-1-copy-pvsdiskproperties-for-name", 
            "text": "Copy-PvsDiskProperties -ServerNameFrom theServerFrom-Name theServerTo", 
            "title": "EXAMPLE 1: Copy-PvsDiskProperties for Name"
        }, 
        {
            "location": "/#example-2-copy-pvsdiskproperties-for-name-with-properties", 
            "text": "Copy-PvsDiskProperties -ServerNameFrom theServerFrom-Name theServerTo -Properties 2, 3", 
            "title": "EXAMPLE 2: Copy-PvsDiskProperties for Name with Properties"
        }, 
        {
            "location": "/#example-3-copy-pvsdiskproperties-for-pvsserver-using-pipe", 
            "text": "The Get-PvsServer output is piped to theCopy-PvsDiskProperties.  Get-PvsServer -Name theServerTo -Fields Guid |Copy-PvsDiskProperties -ServerNameFrom theServerFrom -Properties 2, 3  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 3: Copy-PvsDiskProperties for PvsServer Using Pipe"
        }, 
        {
            "location": "/#disable-pvsdevicedisklocator", 
            "text": "Disable a Device's DiskLocator.  One of these required  Guid[] Guid or DeviceId: GUID of the Device toDisable the DiskLocator for.  string[] Name or DeviceName: Name of the Device toDisable the DiskLocator for.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toDisable the DiskLocator for.  This required  Guid[] DiskLocatorId: GUID of the DiskLocator toDisable for the Device.  or this required ; resolution  string[] DiskLocatorName: Name of the DiskLocatorFile to Disable for the Device.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the members belowcan be used as the Object parameter or from a pileline:  DeviceId or DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Disable-PvsDeviceDiskLocator"
        }, 
        {
            "location": "/#example-1-disable-a-pvsdevice-pvsdisklocator", 
            "text": "This example disables the PvsDiskLocator namedtheDiskLocator for the PvsDevice named theDevice.  Disable-PvsDeviceDiskLocator -Name theDevice-DiskLocatorName theDiskLocator -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Disable a PvsDevice PvsDiskLocator"
        }, 
        {
            "location": "/#dismount-pvsdisk", 
            "text": "No longer Map the Disk.", 
            "title": "Dismount-PvsDisk"
        }, 
        {
            "location": "/#example-1-dismount-pvsdisk", 
            "text": "Dismount-PvsDisk", 
            "title": "EXAMPLE 1: Dismount-PvsDisk"
        }, 
        {
            "location": "/#enable-pvsdevicedisklocator", 
            "text": "Enable a Device's DiskLocator. If the DiskLocator isDisabled, that overrides the Device DiskLocator setting.  One of these required  Guid[] Guid or DeviceId: GUID of the Device toEnable the DiskLocator for.  string[] Name or DeviceName: Name of the Device toEnable the DiskLocator for.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toEnable the DiskLocator for.  This required  Guid[] DiskLocatorId: GUID of the DiskLocator toEnable for the Device.  or this required ; resolution  string[] DiskLocatorName: Name of the DiskLocator toEnable for the Device.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId or DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Enable-PvsDeviceDiskLocator"
        }, 
        {
            "location": "/#example-1-enable-a-pvsdevice-pvsdisklocator", 
            "text": "This example enables the PvsDiskLocator namedtheDiskLocator for the PvsDevice named theDevice.  Enable-PvsDeviceDiskLocator -Name theDevice-DiskLocatorName theDiskLocator -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Enable a PvsDevice PvsDiskLocator"
        }, 
        {
            "location": "/#export-pvsaudittrail", 
            "text": "Archive the information in the Audit Trail up to acertain date to a file. When finished, the information archived will be removedfrom the Audit Trail.  This required  string[] FileName: Name of the file to archive theAudit Trail to. This must be a full file path name.  Optional  DateTime EndDate: Last date of information toArchive. If not entered, all information is Archived. Uses only the date.  SwitchParameter NoPurgeData: If -NoPurgeData isspecified, the information archived will not be removed from the Audit Trail.  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Export-PvsAuditTrail"
        }, 
        {
            "location": "/#example-1-export-audittrail-for-pvsfarm", 
            "text": "Export-AuditTrail -Name\"C:\\export\\theFileName\"", 
            "title": "EXAMPLE 1: Export-AuditTrail for PvsFarm"
        }, 
        {
            "location": "/#example-2-export-audittrail-for-pvsfarm-with-enddate", 
            "text": "Export-AuditTrail-EndDate  \"01/01/2015\" -Name\"C:\\export\\theFileName\"", 
            "title": "EXAMPLE 2: Export-AuditTrail for PvsFarm with EndDate"
        }, 
        {
            "location": "/#example-3-export-audittrail-for-pvsfarm-with-enddate-and-nopurgedata", 
            "text": "Export-AuditTrail-EndDate  \"01/01/2015\" -NoPurgeData -Name\"C:\\export\\theFileName\"", 
            "title": "EXAMPLE 3: Export-AuditTrail for PvsFarm with EndDate and NoPurgeData"
        }, 
        {
            "location": "/#export-pvsdisk", 
            "text": "Export the disk stack to a manifest file.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator that identifies the disk to export.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator that identifies the disk to export.  Optional  uint Version: Version to use as the start of theexport. The export will include all versions starting with this to the highestone.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId", 
            "title": "Export-PvsDisk"
        }, 
        {
            "location": "/#example-1-export-pvsdisk-for-name", 
            "text": "Export-PvsDisk -Name theDiskLocator -SiteNametheSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Export-PvsDisk for Name"
        }, 
        {
            "location": "/#example-2-export-pvsdisk-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theExport-PvsDisk.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Export-PvsDisk  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Export-PvsDisk for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-3-export-pvsdisk-for-name-with-version", 
            "text": "Export-PvsDisk -Name theDiskLocator -SiteNametheSite -StoreName theStore -Version 4  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 3: Export-PvsDisk for Name with Version"
        }, 
        {
            "location": "/#example-4-export-pvsdisk-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theExport-PvsDisk.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Export-PvsDisk -Version 4  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Export-PvsDisk for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#export-pvsoemlicenses", 
            "text": "Oem Only: Export the Oem Licenses for the Devices tothe fileName specified.  This required  string FileName: Name of the file to export the OemLicenses to. This must be a full file path name.  One of these required  Guid Guid or DeviceId: GUID of the Device to ExportOem Licenses to the fileName specified.  string Name or DeviceName: Name of the Device toExport Oem Licenses to the fileName specified.  PvsPhysicalAddress DeviceMac: MAC of the Device toExport Oem Licenses to the fileName specified.  Guid CollectionId: GUID of the Collection to Exportall Device Oem Licenses to the fileName specified.  Guid SiteViewId: GUID of the Site View to Export allDevice Oem Licenses to the fileName specified.  Guid FarmViewId: GUID of the Farm View to Export allDevice Oem Licenses to the fileName specified.  string FarmViewName: Name of the Farm View to Exportall Device Oem Licenses to the fileName specified.  or one of these required ; resolutions  string CollectionName: Name of the Collection toExport all Device Oem Licenses to the fileName specified.  string SiteViewName: Name of the Site View to Exportall Device Oem Licenses to the fileName specified.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId, CollectionId, SiteViewId or FarmViewId", 
            "title": "Export-PvsOemLicenses"
        }, 
        {
            "location": "/#example-1-export-pvsoemlicenses-for-name", 
            "text": "Export-PvsOemLicenses -Name theDevice -FileName\"C:\\export\\theFileName\"", 
            "title": "EXAMPLE 1: Export-PvsOemLicenses for Name"
        }, 
        {
            "location": "/#example-2-export-pvsoemlicenses-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theExport-PvsOemLicenses.  Get-PvsDevice -Name theDevice -Fields Guid |Export-PvsOemLicenses -FileName \"C:\\export\\theFileName\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Export-PvsOemLicenses for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-3-export-pvsoemlicenses-for-devicemac", 
            "text": "Export-PvsOemLicenses -DeviceMac\"00-11-22-33-44-55\" -FileName \"C:\\export\\theFileName\"", 
            "title": "EXAMPLE 3: Export-PvsOemLicenses for DeviceMac"
        }, 
        {
            "location": "/#example-4-export-pvsoemlicenses-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theExport-PvsOemLicenses.  Get-PvsDevice -DeviceMac\"00-11-22-33-44-55\" -Fields Guid | Export-PvsOemLicenses -FileName\"C:\\export\\theFileName\"  The -Fields parameter with only the needed fields specifiedmakes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 4: Export-PvsOemLicenses for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-5-export-pvsoemlicenses-for-farmviewname", 
            "text": "Export-PvsOemLicenses -FarmViewName theFarmView-FileName \"C:\\export\\theFileName\"", 
            "title": "EXAMPLE 5: Export-PvsOemLicenses for FarmViewName"
        }, 
        {
            "location": "/#example-6-export-pvsoemlicenses-for-pvsfarmview-using-pipe", 
            "text": "The Get-PvsFarmView output is piped to theExport-PvsOemLicenses.  Get-PvsFarmView -Name theFarmView -Fields Guid |Export-PvsOemLicenses -FileName \"C:\\export\\theFileName\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 6: Export-PvsOemLicenses for PvsFarmView Using Pipe"
        }, 
        {
            "location": "/#example-7-export-pvsoemlicenses-for-collectionname", 
            "text": "Export-PvsOemLicenses -CollectionName theCollection-SiteName theSite -FileName \"C:\\export\\theFileName\"  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 7: Export-PvsOemLicenses for CollectionName"
        }, 
        {
            "location": "/#example-8-export-pvsoemlicenses-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theExport-PvsOemLicenses.  Get-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Export-PvsOemLicenses -FileName\"C:\\export\\theFileName\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 8: Export-PvsOemLicenses for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#example-9-export-pvsoemlicenses-for-siteviewname", 
            "text": "Export-PvsOemLicenses -SiteViewName theSiteView-SiteName theSite -FileName \"C:\\export\\theFileName\"  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 9: Export-PvsOemLicenses for SiteViewName"
        }, 
        {
            "location": "/#example-10-export-pvsoemlicenses-for-pvssiteview-using-pipe", 
            "text": "The Get-PvsSiteView output is piped to theExport-PvsOemLicenses.  Get-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Export-PvsOemLicenses -FileName\"C:\\export\\theFileName\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 10: Export-PvsOemLicenses for PvsSiteView Using Pipe"
        }, 
        {
            "location": "/#get-pvsadaccount", 
            "text": "Return a PvsAdAccount object if the named DeviceAccount in the domain is found.  This required  string Domain: Domain the account is a member of.  This required  string Name: Name of the Device for the account.  PvsADAccount: If successful, the PvsADAccount objectis returned.", 
            "title": "Get-PvsADAccount"
        }, 
        {
            "location": "/#example-1-get-pvsadaccount", 
            "text": "Get the PvsADAccount in the Domain named theDomainfor the Device named theDevice.  Get-PvsADAccount -Domain theDomain -Name theDevice", 
            "title": "EXAMPLE 1: Get PvsADAccount"
        }, 
        {
            "location": "/#get-pvsauditactionparameter", 
            "text": "Get the Parameters of an Audit Action.  This required  Guid[] AuditActionId: GUID of the Audit Action toGet Parameters for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  AuditActionId  If only selected fields are needed, pass them in theFields parameter as a string array.  Name or AuditParameterName: Name of the parameter.Max Length=50  Value: Value of the parameter. Max Length=1000  PvsAuditActionParameter[]: If successful, thePvsAuditActionParameter object(s) are returned.", 
            "title": "Get-PvsAuditActionParameter"
        }, 
        {
            "location": "/#example-1-get-pvsauditactionparameter", 
            "text": "Get all PvsAuditActionParameter for theAuditActionId e8baa554-7c2d-49e5-9f6b-e0bc46179fc7.  Get-PvsAuditActionParameter -AuditActionId\"e8baa554-7c2d-49e5-9f6b-e0bc46179fc7\"", 
            "title": "EXAMPLE 1: Get PvsAuditActionParameter"
        }, 
        {
            "location": "/#example-2-get-pvsauditactionparameter-for-multiple-auditactionid", 
            "text": "Get all PvsAuditActionParameter for theAuditActionId e8baa554-7c2d-49e5-9f6b-e0bc46179fc7 and54ee6180-7fbc-42a2-9499-2e4936f039dc.  Get-PvsAuditActionParameter -AuditActionId\"e8baa554-7c2d-49e5-9f6b-e0bc46179fc7\",\"54ee6180-7fbc-42a2-9499-2e4936f039dc\"", 
            "title": "EXAMPLE 2: Get PvsAuditActionParameter for Multiple AuditActionId"
        }, 
        {
            "location": "/#example-3-get-pvsauditactionparameter-for-get-pvsaudittrail-results-withparameters", 
            "text": "Get-PvsAuditTrail is called and only thePvsAuditTrail.Attachment with bit 4 (Parameters) set are used to callGet-PvsAuditActionParameter.  Get-PvsAuditTrail | Where-Object {($_.Attachments-band 4) -eq 4} | Get-PvsAuditActionParameter", 
            "title": "EXAMPLE 3: Get PvsAuditActionParameter for Get-PvsAuditTrail Results withParameters"
        }, 
        {
            "location": "/#get-pvsauditactionproperty", 
            "text": "Get the Properties of an Audit Action.  This required  Guid[] AuditActionId: GUID of the Audit Action toGet Properties for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  AuditActionId  If only selected fields are needed, pass them in theFields parameter as a string array.  Name or AuditPropertyName: Name of the property. MaxLength=50  OldValue: Previous value of the Property.Default=\"\" Max Length=1000  NewValue: New value of the Property.Default=\"\" Max Length=1000  PvsAuditActionProperty[]: If successful, thePvsAuditActionProperty object(s) are returned.", 
            "title": "Get-PvsAuditActionProperty"
        }, 
        {
            "location": "/#example-1-get-pvsauditactionproperty", 
            "text": "Get all PvsAuditActionProperty for the AuditActionIde8baa554-7c2d-49e5-9f6b-e0bc46179fc7.  Get-PvsAuditActionProperty -AuditActionId\"e8baa554-7c2d-49e5-9f6b-e0bc46179fc7\"", 
            "title": "EXAMPLE 1: Get PvsAuditActionProperty"
        }, 
        {
            "location": "/#example-2-get-pvsauditactionproperty-for-multiple-auditactionid", 
            "text": "Get all PvsAuditActionProperty for the AuditActionIde8baa554-7c2d-49e5-9f6b-e0bc46179fc7 and 54ee6180-7fbc-42a2-9499-2e4936f039dc.  Get-PvsAuditActionProperty -AuditActionId \"e8baa554-7c2d-49e5-9f6b-e0bc46179fc7\",\"54ee6180-7fbc-42a2-9499-2e4936f039dc\"", 
            "title": "EXAMPLE 2: Get PvsAuditActionProperty for Multiple AuditActionId"
        }, 
        {
            "location": "/#example-3-get-pvsauditactionproperty-for-get-pvsaudittrail-results-withproperties", 
            "text": "Get-PvsAuditTrail is called and only thePvsAuditTrail.Attachment with bit 8 (Properties) set are used to callGet-PvsAuditActionProperty.  Get-PvsAuditTrail | Where-Object {($_.Attachments-band 8) -eq 8} | Get-PvsAuditActionProperty", 
            "title": "EXAMPLE 3: Get PvsAuditActionProperty for Get-PvsAuditTrail Results withProperties"
        }, 
        {
            "location": "/#get-pvsauditactionsibling", 
            "text": "Get the Sibling of an Audit Action. It is the 2ndobject involved with the action.  This required  Guid[] Guid or AuditActionId: GUID of the AuditAction to Get Sibling for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  AuditActionId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or AuditActionId: GUID of the action.  Type: Type of object that action was performed on.Values are: 1 (AuthGroup), 2 (Collection), 3 (Device), 4 (Disk), 5(DiskLocator), 6 (Farm), 7 (FarmView), 8 (Server), 9 (Site), 10 (SiteView), 11(Store), 12 (System), and 13 (UserGroup)  ObjectId: GUID of the object of the action.  ObjectName: Name of the object of the action. MaxLength=1000  Path: Path of the object of the action. An exampleis Site\\Collection for a Device. Default=\"\" Max Length=101  SiteId: GUID of the Site for the object of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000  SubId: GUID of the Collection or Store of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000  PvsAuditAction[]: If successful, the PvsAuditActionobject(s) are returned.", 
            "title": "Get-PvsAuditActionSibling"
        }, 
        {
            "location": "/#example-1-get-pvsauditactionsibling", 
            "text": "Get all PvsAuditActionSibling for the AuditActionIde8baa554-7c2d-49e5-9f6b-e0bc46179fc7.  Get-PvsAuditActionSibling -Guid\"e8baa554-7c2d-49e5-9f6b-e0bc46179fc7\"", 
            "title": "EXAMPLE 1: Get PvsAuditActionSibling"
        }, 
        {
            "location": "/#example-2-get-pvsauditactionsibling-for-multiple-auditactionid", 
            "text": "Get all PvsAuditActionSibling for the AuditActionIde8baa554-7c2d-49e5-9f6b-e0bc46179fc7 and 54ee6180-7fbc-42a2-9499-2e4936f039dc.  Get-PvsAuditActionSibling -Guid\"e8baa554-7c2d-49e5-9f6b-e0bc46179fc7\",\"54ee6180-7fbc-42a2-9499-2e4936f039dc\"", 
            "title": "EXAMPLE 2: Get PvsAuditActionSibling for Multiple AuditActionId"
        }, 
        {
            "location": "/#example-3-get-pvsauditactionsibling-for-get-pvsaudittrail-results-withsiblings", 
            "text": "Get-PvsAuditTrail is called and only thePvsAuditTrail.Attachment with bit 2 (Siblings) set are used to callGet-PvsAuditActionSibling.  Get-PvsAuditTrail | Where-Object {($_.Attachments-band 2) -eq 2} | Get-PvsAuditActionSibling", 
            "title": "EXAMPLE 3: Get PvsAuditActionSibling for Get-PvsAuditTrail Results withSiblings"
        }, 
        {
            "location": "/#get-pvsaudittrail", 
            "text": "Get the Audit Trail actions for a Farm, Site,Server, DiskLocator, Collection, Device, User Group, Site View, Farm View orStore. All Audit Trail actions are returned if no parameters are passed. Theresult can be filtered by parent, user\\domain and date range.  One of these optional  Guid[] Guid or AuditActionId: GUID of the AuditAction to Get.  Guid[] ParentId: Parent AuditActionId of the recordsto retrieve. If no parameters are included, only records with no parent arereturned.  Guid[] RootId: Root AuditActionId of the records toretrieve. All of the actions caused by the root action are returned. If noparameters are included, only records with no root are returned.  Guid[] SiteId: GUID of the Site to get the AuditTrail for.  string[] SiteName: Name of the Site to get the AuditTrail for.  Guid[] CollectionId: GUID of the Collection to getthe Audit Trail for.  Guid[] SiteViewId: GUID of the Site View to get theAudit Trail for.  Guid[] FarmViewId: GUID of the Farm View to get theAudit Trail for.  string[] FarmViewName: Name of the Farm View to getthe Audit Trail for.  Guid[] ServerId: GUID of the Server to get the AuditTrail for.  string[] ServerName: Name of the Server to get theAudit Trail for.  Guid[] DeviceId: GUID of the Device to get the AuditTrail for.  string[] DeviceName: Name of the Device to get theAudit Trail for.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toget the Audit Trail for.  Guid[] StoreId: GUID of the Store to get the AuditTrail for.  string[] StoreName: Name of the Store to get theAudit Trail for.  Guid[] DiskLocatorId: GUID of the DiskLocator to getthe Audit Trail for.  or one of these optional ; resolutions  string[] CollectionName: Name of the Collection toget the Audit Trail for.  string[] SiteViewName: Name of the Site View to getthe Audit Trail for.  string[] DiskLocatorName: Name of the DiskLocator toget the Audit Trail for.  Optional  string[] UserName: User that performed the action.  string[] Domain: Domain of the user that performedthe action.  DateTime BeginDate: Date/Time of the first actionsto get. If not included, all actions until the endDate are returned. If neitherthis or the endDate are included, then only actions that occurred in the lastweek are returned. Uses only the date, hour and minute. If connected to aServer version previous to 7.7, only the date is used.  DateTime EndDate: Date/Time of the last actions toget. If not included, all actions from the beginDate until now are returned. Ifneither this or the beginDate are included, then only actions that occurred inthe last week are returned. Uses only the date, hour and minute. If connectedto a Server version previous to 7.7, only the date is used.  uint[] Type: Types to get. Values are: 0 (Many), 1(AuthGroup), 2 (Collection), 3 (Device), 4 (Disk), 5 (DiskLocator), 6 (Farm), 7(FarmView), 8 (Server), 9 (Site), 10 (SiteView), 11 (Store), 12 (System), and13 (UserGroup)  uint[] Action: Actions to get. Values are: 1(AddAuthGroup), 2 (AddCollection), 3 (AddDevice), 4 (AddDiskLocator), 5 (AddFarmView),6 (AddServer), 7 (AddSite), 8 (AddSiteView), 9 (AddStore), 10 (AddUserGroup),11 (AddVirtualHostingPool), 12 (AddUpdateTask), 13 (AddDiskUpdateDevice), 1001(DeleteAuthGroup), 1002 (DeleteCollection), 1003 (DeleteDevice), 1004(DeleteDeviceDiskCacheFile), 1005 (DeleteDiskLocator), 1006 (DeleteFarmView),1007 (DeleteServer), 1008 (DeleteServerStore), 1009 (DeleteSite), 1010(DeleteSiteView), 1011 (DeleteStore), 1012 (DeleteUserGroup), 1013(DeleteVirtualHostingPool), 1014 (DeleteUpdateTask), 1015 (DeleteDiskUpdateDevice),1016 (DeleteDiskVersion), 2001 (RunAddDeviceToDomain), 2002(RunApplyAutoUpdate), 2003 (RunApplyIncrementalUpdate), 2004(RunArchiveAuditTrail), 2005 (RunAssignAuthGroup), 2006 (RunAssignDevice), 2007(RunAssignDiskLocator), 2008 (RunAssignServer), 2009 (RunWithReturnBoot), 2010(RunCopyPasteDevice), 2011 (RunCopyPasteDisk), 2012 (RunCopyPasteServer), 2013(RunCreateDirectory), 2014 (RunCreateDiskCancel), 2015 (RunDisableCollection),2016 (RunDisableDevice), 2017 (RunDisableDeviceDiskLocator), 2018(RunDisableDiskLocator), 2019 (RunDisableUserGroup), 2020(RunDisableUserGroupDiskLocator), 2021 (RunWithReturnDisplayMessage), 2022(RunEnableCollection), 2023 (RunEnableDevice), 2024(RunEnableDeviceDiskLocator), 2025 (RunEnableDiskLocator), 2026(RunEnableUserGroup), 2027 (RunEnableUserGroupDiskLocator), 2028(RunExportOemLicenses), 2029 (RunImportDatabase), 2030 (RunImportDevices), 2031(RunImportOemLicenses), 2032 (RunMarkDown), 2033 (RunWithReturnReboot), 2034(RunRemoveAuthGroup), 2035 (RunRemoveDevice), 2036 (RunRemoveDeviceFromDomain),2037 (RunRemoveDirectory), 2038 (RunRemoveDiskLocator), 2039(RunResetDeviceForDomain), 2040 (RunResetDatabaseConnection), 2041(RunRestartStreamingService), 2042 (RunWithReturnShutdown), 2043 (RunStartStreamingService),2044 (RunStopStreamingService), 2045 (RunUnlockAllDisk), 2046 (RunUnlockDisk),2047 (RunServerStoreVolumeAccess), 2048 (RunServerStoreVolumeMode), 2049(RunMergeDisk), 2050 (RunRevertDiskVersion), 2051 (RunPromoteDiskVersion), 2052(RunCancelDiskMaintenance), 2053 (RunActivateDevice), 2054 (RunAddDiskVersion),2055 (RunExportDisk), 2056 (RunAssignDisk), 2057 (RunRemoveDisk), 2058(RunDiskUpdateStart), 2059 (RunDiskUpdateCancel), 2060 (RunSetOverrideVersion),2061 (RunCancelTask), 2062 (RunClearTask), 2063 (RunForceInventory), 2064RunUpdateBDM, 2065 (RunStartDeviceDiskTempVersionMode), 2066(RunStopDeviceDiskTempVersionMode), 3001 (RunWithReturnCreateDisk), 3002(RunWithReturnCreateDiskStatus), 3003 (RunWithReturnMapDisk), 3004 (RunWithReturnRebalanceDevices),3005 (RunWithReturnCreateMaintenanceVersion), 3006 (RunWithReturnImportDisk),4001 (RunByteArrayInputImportDevices), 4002(RunByteArrayInputImportOemLicenses), 5001(RunByteArrayOutputArchiveAuditTrail), 5002 (RunByteArrayOutputExportOemLicenses),6001 (SetAuthGroup), 6002 (SetCollection), 6003 (SetDevice), 6004 (SetDisk),6005 (SetDiskLocator), 6006 (SetFarm), 6007 (SetFarmView), 6008 (SetServer),6009 (SetServerBiosBootstrap), 6010 (SetServerBootstrap), 6011(SetServerStore), 6012 (SetSite), 6013 (SetSiteView), 6014 (SetStore), 6015(SetUserGroup), 6016 SetVirtualHostingPool, 6017 SetUpdateTask, 6018SetDiskUpdateDevice, 7001 (SetListDeviceBootstraps), 7002(SetListDeviceBootstrapsDelete), 7003 (SetListDeviceBootstrapsAdd), 7004 (SetListDeviceCustomProperty),7005 (SetListDeviceCustomPropertyDelete), 7006(SetListDeviceCustomPropertyAdd), 7007 (SetListDeviceDiskPrinters), 7008(SetListDeviceDiskPrintersDelete), 7009 (SetListDeviceDiskPrintersAdd), 7010(SetListDevicePersonality), 7011 (SetListDevicePersonalityDelete), 7012(SetListDevicePersonalityAdd), 7013 (SetListDiskLocatorCustomProperty), 7014(SetListDiskLocatorCustomPropertyDelete), 7015(SetListDiskLocatorCustomPropertyAdd), 7016 (SetListServerCustomProperty), 7017(SetListServerCustomPropertyDelete), 7018 (SetListServerCustomPropertyAdd),7019 (SetListUserGroupCustomProperty), 7020(SetListUserGroupCustomPropertyDelete), and 7021(SetListUserGroupCustomPropertyAdd)  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to get the AuditTrail for.  string[] SiteName: Name of the Site to get the AuditTrail for.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store to get the AuditTrail for.  string[] StoreName: Name of the Store to get theAudit Trail for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  AuditActionId, ParentId, RootId, SiteId,CollectionId, SiteViewId, FarmViewId, ServerId, DeviceId, StoreId orDiskLocatorId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or AuditActionId: GUID of the action.  Time: Date/Time the action occurred down to themillisecond. Has the date and time including milliseconds. Default=Empty  UserName: User that performed the action. MaxLength=255  Domain: Domain of the user that performed theaction. Max Length=255  Type: Type of object that action was performed on.Values are: 0 (Many), 1 (AuthGroup), 2 (Collection), 3 (Device), 4 (Disk), 5(DiskLocator), 6 (Farm), 7 (FarmView), 8 (Server), 9 (Site), 10 (SiteView), 11(Store), 12 (System), and 13 (UserGroup)  Action: Name of the action taken. This is a numberthat is converted to a string for display. Values are: 1 (AddAuthGroup), 2(AddCollection), 3 (AddDevice), 4 (AddDiskLocator), 5 (AddFarmView), 6(AddServer), 7 (AddSite), 8 (AddSiteView), 9 (AddStore), 10 (AddUserGroup), 11(AddVirtualHostingPool), 12 (AddUpdateTask), 13 (AddDiskUpdateDevice), 1001(DeleteAuthGroup), 1002 (DeleteCollection), 1003 (DeleteDevice), 1004(DeleteDeviceDiskCacheFile), 1005 (DeleteDiskLocator), 1006 (DeleteFarmView),1007 (DeleteServer), 1008 (DeleteServerStore), 1009 (DeleteSite), 1010(DeleteSiteView), 1011 (DeleteStore), 1012 (DeleteUserGroup), 1013(DeleteVirtualHostingPool), 1014 (DeleteUpdateTask), 1015(DeleteDiskUpdateDevice), 1016 (DeleteDiskVersion), 2001(RunAddDeviceToDomain), 2002 (RunApplyAutoUpdate), 2003(RunApplyIncrementalUpdate), 2004 (RunArchiveAuditTrail), 2005(RunAssignAuthGroup), 2006 (RunAssignDevice), 2007 (RunAssignDiskLocator), 2008(RunAssignServer), 2009 (RunWithReturnBoot), 2010 (RunCopyPasteDevice), 2011(RunCopyPasteDisk), 2012 (RunCopyPasteServer), 2013 (RunCreateDirectory), 2014(RunCreateDiskCancel), 2015 (RunDisableCollection), 2016 (RunDisableDevice),2017 (RunDisableDeviceDiskLocator), 2018 (RunDisableDiskLocator), 2019(RunDisableUserGroup), 2020 (RunDisableUserGroupDiskLocator), 2021(RunWithReturnDisplayMessage), 2022 (RunEnableCollection), 2023(RunEnableDevice), 2024 (RunEnableDeviceDiskLocator), 2025(RunEnableDiskLocator), 2026 (RunEnableUserGroup), 2027(RunEnableUserGroupDiskLocator), 2028 (RunExportOemLicenses), 2029(RunImportDatabase), 2030 (RunImportDevices), 2031 (RunImportOemLicenses), 2032(RunMarkDown), 2033 (RunWithReturnReboot), 2034 (RunRemoveAuthGroup), 2035(RunRemoveDevice), 2036 (RunRemoveDeviceFromDomain), 2037 (RunRemoveDirectory),2038 (RunRemoveDiskLocator), 2039 (RunResetDeviceForDomain), 2040 (RunResetDatabaseConnection),2041 (RunRestartStreamingService), 2042 (RunWithReturnShutdown), 2043(RunStartStreamingService), 2044 (RunStopStreamingService), 2045(RunUnlockAllDisk), 2046 (RunUnlockDisk), 2047 (RunServerStoreVolumeAccess),2048 (RunServerStoreVolumeMode), 2049 (RunMergeDisk), 2050(RunRevertDiskVersion), 2051 (RunPromoteDiskVersion), 2052(RunCancelDiskMaintenance), 2053 (RunActivateDevice), 2054 (RunAddDiskVersion),2055 (RunExportDisk), 2056 (RunAssignDisk), 2057 (RunRemoveDisk), 2058(RunDiskUpdateStart), 2059 (RunDiskUpdateCancel), 2060 (RunSetOverrideVersion),2061 (RunCancelTask), 2062 (RunClearTask), 2063 (RunForceInventory), 2064RunUpdateBDM, 2065 (RunStartDeviceDiskTempVersionMode), 2066(RunStopDeviceDiskTempVersionMode), 3001 (RunWithReturnCreateDisk), 3002(RunWithReturnCreateDiskStatus), 3003 (RunWithReturnMapDisk), 3004(RunWithReturnRebalanceDevices), 3005 (RunWithReturnCreateMaintenanceVersion),3006 (RunWithReturnImportDisk), 4001 (RunByteArrayInputImportDevices), 4002(RunByteArrayInputImportOemLicenses), 5001(RunByteArrayOutputArchiveAuditTrail), 5002(RunByteArrayOutputExportOemLicenses), 6001 (SetAuthGroup), 6002(SetCollection), 6003 (SetDevice), 6004 (SetDisk), 6005 (SetDiskLocator), 6006(SetFarm), 6007 (SetFarmView), 6008 (SetServer), 6009 (SetServerBiosBootstrap),6010 (SetServerBootstrap), 6011 (SetServerStore), 6012 (SetSite), 6013(SetSiteView), 6014 (SetStore), 6015 (SetUserGroup), 6016SetVirtualHostingPool, 6017 SetUpdateTask, 6018 SetDiskUpdateDevice, 7001(SetListDeviceBootstraps), 7002 (SetListDeviceBootstrapsDelete), 7003(SetListDeviceBootstrapsAdd), 7004 (SetListDeviceCustomProperty), 7005(SetListDeviceCustomPropertyDelete), 7006 (SetListDeviceCustomPropertyAdd),7007 (SetListDeviceDiskPrinters), 7008 (SetListDeviceDiskPrintersDelete), 7009(SetListDeviceDiskPrintersAdd), 7010 (SetListDevicePersonality), 7011(SetListDevicePersonalityDelete), 7012 (SetListDevicePersonalityAdd), 7013(SetListDiskLocatorCustomProperty), 7014(SetListDiskLocatorCustomPropertyDelete), 7015(SetListDiskLocatorCustomPropertyAdd), 7016 (SetListServerCustomProperty), 7017(SetListServerCustomPropertyDelete), 7018 (SetListServerCustomPropertyAdd),7019 (SetListUserGroupCustomProperty), 7020(SetListUserGroupCustomPropertyDelete), and 7021 (SetListUserGroupCustomPropertyAdd)  ObjectId: GUID of the object of the action.Default=00000000-0000-0000-0000-000000000000  ObjectName: Name of the object of the action.Default=\"\" Max Length=1000  Path: Path of the object of the action. An exampleis Site\\Collection for a Device. Default=\"\" Max Length=101  SiteId: GUID of the Site for the object of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000  SubId: GUID of the Collection or Store of theaction. 00000000-0000-0000-0000-000000000000 when not valid.Default=00000000-0000-0000-0000-000000000000  ParentId: GUID of the parent action (one thattriggered this action) if one exists. 00000000-0000-0000-0000-000000000000 whennot valid. Default=00000000-0000-0000-0000-000000000000  RootId: GUID of the root action (one that triggeredthis group of actions) if one exists. 00000000-0000-0000-0000-000000000000 whennot valid. Default=00000000-0000-0000-0000-000000000000  Attachments: An or'ed value that indicates if thereare any details for this action. A value of 15 indicates that there areChildren, Sibling, Parameters and Properties for the action. Values are: 0(None), 1 (Children), 2 (Sibling), 4 (Parameters), and 8 (Properties) Default=0  PvsAuditTrail[]: If successful, the PvsAuditTrailobject(s) are returned.", 
            "title": "Get-PvsAuditTrail"
        }, 
        {
            "location": "/#example-1-get-pvsaudittrail-for-farm", 
            "text": "Get all PvsAuditTrail for the Farm.  Get-PvsAuditTrail", 
            "title": "EXAMPLE 1: Get PvsAuditTrail for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsaudittrail-for-farmview", 
            "text": "Get all PvsAuditTrail for the FarmView namedtheFarmView.  Get-PvsAuditTrail -FarmViewName theFarmView", 
            "title": "EXAMPLE 2: Get PvsAuditTrail for FarmView"
        }, 
        {
            "location": "/#example-3-get-pvsaudittrail-for-site", 
            "text": "Get all PvsAuditTrail for the Site named theSite.  Get-PvsAuditTrail -SiteName theSite", 
            "title": "EXAMPLE 3: Get PvsAuditTrail for Site"
        }, 
        {
            "location": "/#example-4-get-pvsaudittrail-for-siteview", 
            "text": "Get all PvsAuditTrail for the SiteView named theSiteViewin the Site named theSite.  Get-PvsAuditTrail -SiteViewName theSiteView-SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 4: Get PvsAuditTrail for SiteView"
        }, 
        {
            "location": "/#example-5-get-pvsaudittrail-for-collection", 
            "text": "Get all PvsAuditTrail for the Collection namedtheCollection in the Site named theSite.  Get-PvsAuditTrail -CollectionName theCollection-SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 5: Get PvsAuditTrail for Collection"
        }, 
        {
            "location": "/#example-6-get-pvsaudittrail-for-device", 
            "text": "Get all PvsAuditTrail for the Device namedtheDevice.  Get-PvsAuditTrail -DeviceName theDevice", 
            "title": "EXAMPLE 6: Get PvsAuditTrail for Device"
        }, 
        {
            "location": "/#example-7-get-pvsaudittrail-for-device-mac", 
            "text": "Get all PvsAuditTrail for the Device with MAC02-50-F2-00-00-01.  Get-PvsAuditTrail -DeviceMac\"02-50-F2-00-00-01\"", 
            "title": "EXAMPLE 7: Get PvsAuditTrail for Device MAC"
        }, 
        {
            "location": "/#example-8-get-pvsaudittrail-for-server", 
            "text": "Get all PvsAuditTrail for the Server namedtheServer.  Get-PvsAuditTrail -ServerName theServer", 
            "title": "EXAMPLE 8: Get PvsAuditTrail for Server"
        }, 
        {
            "location": "/#example-9-get-pvsaudittrail-for-store", 
            "text": "Get all PvsAuditTrail for the Store named theStore.  Get-PvsAuditTrail -StoreName theStore", 
            "title": "EXAMPLE 9: Get PvsAuditTrail for Store"
        }, 
        {
            "location": "/#example-10-get-pvsaudittrail-for-disklocator", 
            "text": "Get all PvsAuditTrail for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.  Get-PvsAuditTrail -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 10: Get PvsAuditTrail for DiskLocator"
        }, 
        {
            "location": "/#example-11-get-pvsaudittrail-for-user", 
            "text": "Get all PvsAuditTrail for the User named theUser inDomain theDomain.  Get-PvsAuditTrail -UserName theUser -DomainNametheDomain", 
            "title": "EXAMPLE 11: Get PvsAuditTrail for User"
        }, 
        {
            "location": "/#example-12-get-pvsaudittrail-for-january", 
            "text": "Get all PvsAuditTrail for January.  Get-PvsAuditTrail -BeginDate \"01/01/201500:00\" -EndDate \"01/31/2015 23:59\"", 
            "title": "EXAMPLE 12: Get PvsAuditTrail for January"
        }, 
        {
            "location": "/#example-13-get-pvsaudittrail-for-disklocator-and-server-type-actions", 
            "text": "Get all PvsAuditTrail for 5 (DiskLocator) and 8(Server) type actions.  Get-PvsAuditTrail -Type 5 8", 
            "title": "EXAMPLE 13: Get PvsAuditTrail for DiskLocator and Server Type Actions"
        }, 
        {
            "location": "/#example-14-get-pvsaudittrail-for-disklocator-and-server-type-actions", 
            "text": "Get all PvsAuditTrail for the 1003 (DeleteDevice) and1007 (DeleteServer) actions.  Get-PvsAuditTrail -Action 1003 1007", 
            "title": "EXAMPLE 14: Get PvsAuditTrail for DiskLocator and Server Type Actions"
        }, 
        {
            "location": "/#example-15-get-pvsaudittrail-with-children", 
            "text": "Get the 4fd16fc1-8dcc-4097-be5a-d0485bd7433bPvsAuditTrail and if it has children, the child PvsAuditTrail are retrieved.  $x = Get-PvsAuditTrail -AuditActionId\"4fd16fc1-8dcc-4097-be5a-d0485bd7433b\"  if (($x.Attachments -band 1) -eq 1) {Get-PvsAuditTrail -ParentId $x.AuditActionId }", 
            "title": "EXAMPLE 15: Get PvsAuditTrail with Children"
        }, 
        {
            "location": "/#get-pvsauthgroup", 
            "text": "Get the fields for an AuthGroup, all AuthGroups inthe system, AuthGroups with Farm, Site or Collection Authorization. AllAuthGroups in the system are returned if no parameters are passed.  One of these optional  Guid[] Guid or AuthGroupId: GUID of the AuthGroup toGet.  string[] Name or AuthGroupName: Name of theAuthGroup to Get.  Guid[] SiteId: GUID of the Site to Get allAuthGroups with Authorization for.  string[] SiteName: Name of the Site to Get allAuthGroups with Authorization for.  Guid[] CollectionId: GUID of the Collection to Getall AuthGroups with Authorization for.  or this optional ; resolution  string[] CollectionName: Name of the Collection toGet all AuthGroups with Authorization for.  Optional  SwitchParameter Farm: If -Farm is specified,AuthGroups with Farm Authorization should be returned.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to Get allAuthGroups with Authorization for.  string[] SiteName: Name of the Site to Get allAuthGroups with Authorization for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the members belowcan be used as the Object parameter or from a pileline:  AuthGroupId, SiteId or CollectionId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or AuthGroupId: Read-only GUID that uniquelyidentifies this AuthGroup.  Name or AuthGroupName: Name of the Active Directoryor Windows Group. Max Length=450  Description: User description. Default=\"\"Max Length=250  Role: Role of the AuthGroup for a Collection. rolecan only be used with CollectionId or CollectionName. 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999  PvsAuthGroup[]: If successful, the PvsAuthGroupobject(s) are returned.", 
            "title": "Get-PvsAuthGroup"
        }, 
        {
            "location": "/#example-1-get-pvsauthgroup-for-system", 
            "text": "Get all PvsAuthGroup for the System.  Get-PvsAuthGroup", 
            "title": "EXAMPLE 1: Get PvsAuthGroup for System"
        }, 
        {
            "location": "/#example-2-get-pvsauthgroup-for-farm", 
            "text": "Get all PvsAuthGroup for the Farm.  Get-PvsAuthGroup", 
            "title": "EXAMPLE 2: Get PvsAuthGroup for Farm"
        }, 
        {
            "location": "/#example-3-get-pvsauthgroup-for-site", 
            "text": "Get all PvsAuthGroup for the Site named theSite.  Get-PvsAuthGroup -SiteName theSite", 
            "title": "EXAMPLE 3: Get PvsAuthGroup for Site"
        }, 
        {
            "location": "/#example-4-get-pvsauthgroup-for-collection", 
            "text": "Get all PvsAuthGroup for the Collection namedtheCollection in the Site named theSite.  Get-PvsAuthGroup -CollectionName theCollection-SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 4: Get PvsAuthGroup for Collection"
        }, 
        {
            "location": "/#get-pvsauthgroupusage", 
            "text": "Get the items that are authorized for an AuthGroup.  One of these required  Guid[] AuthGroupId: GUID of the AuthGroup to Get allitems that are authorized for it.  string[] Name or AuthGroupName: Name of theAuthGroup to Get all items that are authorized for it.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  AuthGroupId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or Id: GUID of the item. The item can be aFarm, Site or Collection. It will be 00000000-0000-0000-0000-000000000000 forFarm.  Name: Name of the item. The item can be a Farm, Siteor Collection.  Role: Role of the AuthGroup for the item. 100 isFarm Administrator, 200 is Site Administrator, 300 is Collection Administrator,and 400 is Collection Operator. Default=999  PvsAuthGroupUsage[]: If successful, thePvsAuthGroupUsage object(s) are returned.", 
            "title": "Get-PvsAuthGroupUsage"
        }, 
        {
            "location": "/#example-1-get-pvsauthgroupusage", 
            "text": "Get all PvsAuthGroupUsage for the AuthGroup namedtheAuthGroup.  Get-PvsAuthGroupUsage -Name theAuthGroup", 
            "title": "EXAMPLE 1: Get PvsAuthGroupUsage"
        }, 
        {
            "location": "/#get-pvsceipdata", 
            "text": "Get the CEIP configuration  Optional  string[] Uuid: CEIP UUID of this Farm. This isoptional since there is only one.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  Uuid  If only selected fields are needed, pass them in theFields parameter as a string array.  Enabled: 1 if CEIP is enabled, otherwise 0. Min=0,Max=1  Uuid: CEIP UUID.  NextUpload: Date and time next CEIP upload is due ifenabled is 1. Default=Empty  InProgress: 1 if an upload is currently in progress,otherwise 0. Default=0  ServerId: ID of server that is currently uploading,null if InProgress is 0. Default=00000000-0000-0000-0000-000000000000  OneTimeUpload: 1 to perform a one time upload.  PvsCeipData[]: If successful, the PvsCeipDataobject(s) are returned.", 
            "title": "Get-PvsCeipData"
        }, 
        {
            "location": "/#example-1-get-pvsceipdata-for-ceipdata", 
            "text": "Get all PvsCeipData for CeipData.  Get-PvsCeipData", 
            "title": "EXAMPLE 1: Get PvsCeipData for CeipData"
        }, 
        {
            "location": "/#get-pvscisdata", 
            "text": "Get the CIS configuration  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or CisDataId: CIS UUID  UserName: Username used to obtain the tokenDefault=\"\" Max Length=255  UploadToken: Token for uploading bundles to CISDefault=\"\" Max Length=10  Path: Path where the last problem report bundle wassaved Default=\"\" Max Length=255  Password: Password of the user required to obtainthe token. This is required only by Set and Add  PvsCisData[]: If successful, the PvsCisDataobject(s) are returned.", 
            "title": "Get-PvsCisData"
        }, 
        {
            "location": "/#example-1-get-pvscisdata-for-cisdata", 
            "text": "Get all PvsCisData for CispData.  Get-PvsCisData", 
            "title": "EXAMPLE 1: Get PvsCisData for CisData"
        }, 
        {
            "location": "/#get-pvscollection", 
            "text": "Get the fields for a Collection or all Collectionsin a Site or Farm. All Collections are returned if no parameters are passed.  One of these optional  Guid[] Guid or CollectionId: GUID of the Collectionto Get.  Guid[] SiteId: GUID of the Site to Get allCollections for.  string[] SiteName: Name of the Site to Get allCollections for.  or this optional ; resolution  string[] Name or CollectionName: Name of theCollection to Get.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to Get allCollections for.  string[] SiteName: Name of the Site to Get allCollections for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  CollectionId or SiteId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or CollectionId: Read-only GUID that uniquelyidentifies this Collection.  Name or CollectionName: Name of the Collection. Itis unique within the Site. Max Length=50  SiteId: GUID of the Site that this Collection is amember of. It is not used with SiteName.  SiteName: Name of the Site that this Collection is amember of. It is not used with SiteId.  Description: User description. Default=\"\"Max Length=250  TemplateDeviceId: GUID of a Device in the Collectionwhose settings are used for initial values of new Devices. Not used withtemplateDeviceName. Default=00000000-0000-0000-0000-000000000000  TemplateDeviceName: Name of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith TemplateDeviceId. Default=\"\"  LastAutoAddDeviceNumber: The Device Number of thelast Auto Added Device. Default=0  Enabled: True when Devices in the Collection can bebooted, false otherwise. Default=true  DeviceCount: Read-only count of Devices in this Collection.Default=0  DeviceWithPVDCount: Read-only count of Devices withPersonal vDisk in this Collection. Default=0  ActiveDeviceCount: Read-only count of active Devicesin this Collection. Default=0  MakActivateNeededCount: Read-only count of activeDevices that need MAK activation in this Collection. Default=0  AutoAddPrefix: The string put before the DeviceNumber for Auto Add. Default=\"\" ASCII computer name characters no enddigit Max Length=12  AutoAddSuffix: The string put after the DeviceNumber for Auto Add. Default=\"\" ASCII computer name characters nobegin digit Max Length=12  AutoAddZeroFill: True when zeros be placed beforethe Device Number up to the AutoAddNumberLength for Auto Add, false otherwise.Default=true  AutoAddNumberLength: The maximum length of theDevice Number for Auto Add. This length plus the AutoAddPrefix length plus theAutoAddSuffix length must be less than 16. Required that((lenautoAddPrefix+lenautoAddSuffix)+AutoAddNumberLength) < =15. Min=3, Max=9,Default=4  Role: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999  PvsCollection[]: If successful, the PvsCollectionobject(s) are returned.", 
            "title": "Get-PvsCollection"
        }, 
        {
            "location": "/#example-1-get-pvscollection-for-farm", 
            "text": "Get all PvsCollection for the Farm.  Get-PvsCollection", 
            "title": "EXAMPLE 1: Get PvsCollection for Farm"
        }, 
        {
            "location": "/#example-2-get-pvscollection-for-site", 
            "text": "Get all PvsCollection for the Site named theSite.  Get-PvsCollection -SiteName theSite", 
            "title": "EXAMPLE 2: Get PvsCollection for Site"
        }, 
        {
            "location": "/#example-3-get-pvscollection", 
            "text": "Get the PvsCollection for the Collection namedtheCollection in the Site named theSite.  Get-PvsCollection -Name theCollection -SiteNametheSite  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 3: Get PvsCollection"
        }, 
        {
            "location": "/#example-4-get-pvscollection-and-enable", 
            "text": "Get all PvsCollection that are not Enabled and thenEnables them.  Get-PvsCollection -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsCollection  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 4: Get PvsCollection and Enable"
        }, 
        {
            "location": "/#get-pvsconnection", 
            "text": "Return the PvsConnection object with the informationabout the SoapServer connection.  PvsConnection: If successful, the PvsConnectionobject is returned.", 
            "title": "Get-PvsConnection"
        }, 
        {
            "location": "/#example-1-get-pvsconnection", 
            "text": "Get the PvsConnection for the SoapServer.  Get-PvsConnection", 
            "title": "EXAMPLE 1: Get PvsConnection"
        }, 
        {
            "location": "/#get-pvscreatediskstatus", 
            "text": "Get the Percent Finished for an active CreateDisk.When finished, the PvsDiskLocator created is returned.  This required  string Name: Name of the Disk file that is beingcreated.  One of these required  Guid StoreId: GUID of the Store that the Disk willbe a member of.  string StoreName: Name of the Store that the Diskwill be a member of.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  StoreId  UInt32 or PvsDiskLocator: If not finished, thepercent complete is returned in an UInt32. If finished and successful, thePvsDiskLocator is returned.", 
            "title": "Get-PvsCreateDiskStatus"
        }, 
        {
            "location": "/#example-1-start-pvscreatediskstatus", 
            "text": "This example shows how to useGet-PvsCreateDiskStatus during Start-PvsCreateDisk processing.  $thePvsDiskLocator = Start-PvsCreateDiskStatus -NametheDiskName -Size 20480 -StoreName theStore -SiteName theSite -VHDX -Dynamic  while ($thePvsDiskLocator -eq$null)                           #while the create is processing  {  %percentFinished = Get-PvsCreateDiskStatus -NametheDiskName -StoreName theStore  # get percent finished orDiskLocator when done  if (%percentFinished.GetType().Name ==\"PvsDiskLocator\")  {  $thePvsDiskLocator = %percentFinished  }  else  {  %percentFinished.ToString() + \"% finished\"                 #display percent finished  Start-Sleep -seconds10                                    #wait 10 seconds more  }  }  \"Successful\"", 
            "title": "EXAMPLE 1: Start-PvsCreateDiskStatus"
        }, 
        {
            "location": "/#get-pvsdevice", 
            "text": "Get the fields for a Device, all Devices in aCollection, Site, Farm View, or Farm. All Devices are returned if no parametersare passed.  One of these optional  Guid[] Guid or DeviceId: GUID of the Device to Get.  string[] Name or DeviceName: Name of Device to Get.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toGet.  Guid[] CollectionId: GUID of the Collection to Getall Devices for.  Guid[] ServerId: GUID of the Server to Get allDevices for.  string[] ServerName: Name of the Server to Get allDevices for.  Guid[] DiskLocatorId: GUID of the DiskLocator to Getall Devices for.  Guid[] SiteViewId: GUID of the Site View to Get allDevices for.  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Guid[] FarmViewId: GUID of the Farm View to Get allDevices for.  string[] FarmViewName: Name of the Farm View to Getall Devices for.  string[] BdmBoot: Include only the BDM Devices whenset to 1. PXE devices if set to 0. If not included, all Devices are returned.  or one of these optional ; resolutions  string[] CollectionName: Name of the Collection toGet all Devices for.  string[] DiskLocatorName: Name of the DiskLocator toGet all Devices for.  string[] SiteViewName: Name of the Site View to Getall Devices for.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceName, CollectionId, ServerId, DiskLocatorId,SiteViewId, SiteId or FarmViewId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or DeviceId: Read-only GUID that uniquelyidentifies this Device.  Name or DeviceName: Computer name with no spaces.ASCII computer name characters Max Length=15  CollectionId: GUID of the Collection this Device isto be a member of. It is not used with CollectionName.  CollectionName: Name of the Collection this Deviceis to be a member of. SiteName or SiteId must also be used.  SiteId: GUID of the Site the CollectionName is to bea member of. This or SiteName is used with CollectionName.  SiteName: Name of the Site the CollectionName is tobe a member of. This or SiteId is used with CollectionName.  Description: User description. Default=\"\"Max Length=250  DeviceMac: Ethernet address can have the formXX-XX-XX-XX-XX-XX. Uniquely identifies the Device.  BootFrom: Device to boot from. Choices are 1 forvDisk, 2 for Hard Disk, and 3 for Floppy. This cannot be Set for a Device withPersonal vDisk. Min=1, Max=3, Default=1  ClassName: Used by Automatic Update feature to matchnew versions of Disks to a Device. This cannot be Set for a Device withPersonal vDisk. Default=\"\" Max Length=41  Port: UDP port to use with Stream Service. Min=1025,Max=65534, Default=6901  Enabled: True when it can be booted, falseotherwise. This cannot be Set for a Device with Personal vDisk. Default=true  LocalDiskEnabled: If there is a local disk menuchoice for the Device, this is true. This cannot be Set for a Device withPersonal vDisk. Default=false  Role: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999  Authentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. This cannotbe Set for a Device with Personal vDisk. Min=0, Max=2, Default=0  User: Name of user to authenticate before the bootprocess continues. This cannot be Set for a Device with Personal vDisk.Default=\"\" ASCII Max Length=20  Password: Password of user to authenticate beforethe boot process continues. This cannot be Set for a Device with PersonalvDisk. Default=\"\" ASCII Max Length=100  Active: True if the Device is currently active,false otherwise. Default=false  Template: True if the Device is the template in itsCollection, false otherwise. Default=false  AdTimestamp: The time the Active Directory machineaccount password was generated. Do not set this field, it is only setinternally by PVS. Default=0  AdSignature: The signature of the Active Directorymachine account password. Do not set this field, it is only set internally byPVS. Default=0  LogLevel: Level to perform logging at. Values are: 0(None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6 (Trace).Min=0, Max=6, Default=0  DomainName: Fully qualified name of the domain thatthe Device belongs to. Do not set this field, it is only set internally by PVS.Default=\"\" Max Length=255  DomainObjectSID: The value of the objectSID ADattribute of the same name for the Device's computer account. Do not set thisfield, it is only set internally by PVS. Default=\"\" Max Length=186  DomainControllerName: The name of the DC used tocreate the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000  DomainTimeCreated: The time that the computeraccount was created. Has the date and time including milliseconds. Do not setthis field, it is only set internally by PVS. Default=Empty  Type: 1 when it performs test of Disks, 2 when itperforms maintenance on Disks, 3 when it has a Personal vDisk, 4 when it has aPersonal vDisk and performs tests, 0 otherwise. Min=0, Max=4, Default=0  PvdDriveLetter: Read-only Personal vDisk Driveletter. Range is E to U and W to Z. Default=\"\" Max Length=1  LocalWriteCacheDiskSize: The size in GB to formatthe Device cache file disk. If the value is 0, then the disk is not formatted.Min=0, Max=2048, Default=0  VirtualHostingPoolId: GUID that uniquely identifiesthe Virtual Hosting Pool for a VM. This is needed when Adding a VM device.Default=00000000-0000-0000-0000-000000000000  TemporaryVersionSet: Read-only true when temporaryversion is set. Default=false  BdmBoot: Use PXE boot when set to false, BDM bootwhen set to true. Default is PXE Default=false  BdmType: Use PXE boot when set to 0, BDM (Bios) bootwhen set to 1 and BDM (Uefi) boot when set to 2.  Default=0  BdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3 useUSB. Default=0  BdmUpdated: Timestamp of the last BDM boot diskupdate. Default=Empty  BdmCreated: Timstamp when BDM device wascreated  Default=Empty  XsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000  XsPvsProxyEnabled: Enable XenServer PVS proxy whenset to true Default=false  PvsDevice[]: If successful, the PvsDevice object(s)are returned.", 
            "title": "Get-PvsDevice"
        }, 
        {
            "location": "/#example-1-get-pvsdevice-for-farm", 
            "text": "Get all PvsDevice for the Farm.  Get-PvsDevice", 
            "title": "EXAMPLE 1: Get PvsDevice for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsdevice-for-farmview", 
            "text": "Get all PvsDevice for the FarmView namedtheFarmView.  Get-PvsDevice -FarmViewName theFarmView", 
            "title": "EXAMPLE 2: Get PvsDevice for FarmView"
        }, 
        {
            "location": "/#example-3-get-pvsdevice-for-site", 
            "text": "Get all PvsDevice for the Site named theSite.  Get-PvsDevice -SiteName theSite", 
            "title": "EXAMPLE 3: Get PvsDevice for Site"
        }, 
        {
            "location": "/#example-4-get-pvsdevice-for-siteview", 
            "text": "Get all PvsDevice for the SiteView named theSiteViewin the Site named theSite.  Get-PvsDevice -SiteViewName theSiteView -SiteNametheSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 4: Get PvsDevice for SiteView"
        }, 
        {
            "location": "/#example-5-get-pvsdevice-for-collection", 
            "text": "Get all PvsDevice for the Collection namedtheCollection in the Site named theSite.  Get-PvsDevice -CollectionName theCollection-SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 5: Get PvsDevice for Collection"
        }, 
        {
            "location": "/#example-6-get-pvsdevice-for-disklocator", 
            "text": "Get all PvsDevice for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.  Get-PvsDevice -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 6: Get PvsDevice for DiskLocator"
        }, 
        {
            "location": "/#example-7-get-pvsdevice-for-device", 
            "text": "Get the PvsDevice for the Device named theDevice.  Get-PvsDevice -Name theDevice", 
            "title": "EXAMPLE 7: Get PvsDevice for Device"
        }, 
        {
            "location": "/#example-8-get-pvsdevice-and-enable", 
            "text": "Get all PvsDevice that are not Enabled and thenEnables them.  Get-PvsDevice -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 8: Get PvsDevice and Enable"
        }, 
        {
            "location": "/#get-pvsdevicebootstrap", 
            "text": "Get all Bootstrap files for a Device, and theMenuText for each.  One of these required  Guid[] Guid or DeviceId: GUID of the Device.  string[] Name or DeviceName: Name of the Device.  PvsPhysicalAddress[] DeviceMac: MAC of the Device.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId  If only selected fields are needed, pass them in theFields parameter as a string array.  These fields exist in the DeviceBootstrap arraywithin each PvsDeviceBootstrap returned.  Each array item is a PvsDeviceBootstrapList object.  Name or Bootstrap: Name of the bootstrap file. Max Length=259  MenuText: Text that is displayed in the Boot Menu.If this field has no value, the bootstrap value is used. Default=\"\"ASCII Max Length=64  PvsDeviceBootstrap[]: If successful, thePvsDeviceBootstrap object(s) are returned.", 
            "title": "Get-PvsDeviceBootstrap"
        }, 
        {
            "location": "/#example-1-get-pvsdevicebootstrap-for-device", 
            "text": "Get all PvsDeviceBootstrap for the Device namedtheDevice.  Get-PvsDeviceBootstrap -Name theDevice", 
            "title": "EXAMPLE 1: Get PvsDeviceBootstrap for Device"
        }, 
        {
            "location": "/#example-2-get-pvsdevicebootstrap-for-device-mac", 
            "text": "Get all PvsDeviceBootstrap for the Device with MAC02-50-F2-00-00-01.  Get-PvsDeviceBootstrap -DeviceMac\"02-50-F2-00-00-01\"", 
            "title": "EXAMPLE 2: Get PvsDeviceBootstrap for Device MAC"
        }, 
        {
            "location": "/#get-pvsdevicecount", 
            "text": "Get count of Devices in a Collection or View.  One of these required  Guid CollectionId: GUID of the Collection to get theDevice Count of.  Guid SiteViewId: GUID of the Site View to get theDevice Count of.  Guid FarmViewId: GUID of the Farm View to get theDevice Count of.  string FarmViewName: Name of the Farm View to getthe Device Count of.  or one of these required ; resolutions  string CollectionName: Name of the Collection to getthe Device Count of.  string SiteViewName: Name of the Site View to getthe Device Count of.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  CollectionId, SiteViewId or FarmViewId  UInt32: If successful, the numeric value is returned", 
            "title": "Get-PvsDeviceCount"
        }, 
        {
            "location": "/#example-1-get-pvsdevicecount-returns-the-number-or-count-of-pvsdevice-inpvscollection", 
            "text": "Get-PvsDeviceCount -CollectionName theCollection-SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Get-PvsDeviceCount Returns the Number (or Count) of PvsDevice inPvsCollection"
        }, 
        {
            "location": "/#example-2-get-pvsdevicecount-returns-the-number-or-count-of-pvsdevice-inpvsfarmview", 
            "text": "Get-PvsDeviceCount -FarmViewName theFarmView", 
            "title": "EXAMPLE 2: Get-PvsDeviceCount Returns the Number (or Count) of PvsDevice inPvsFarmView"
        }, 
        {
            "location": "/#example-3-get-pvsdevicecount-returns-the-number-or-count-of-pvsdevice-inpvssiteview", 
            "text": "Get-PvsDeviceCount -SiteViewName theSiteView-SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 3: Get-PvsDeviceCount Returns the Number (or Count) of PvsDevice inPvsSiteView"
        }, 
        {
            "location": "/#get-pvsdevicedisklocatorenabled", 
            "text": "Return true if a Device/DiskLocator is enabled.  One of these required  Guid Guid or DeviceId: Device GUID, to see if theDiskLocator for it is enabled.  string Name or DeviceName: Device name, to see ifthe DiskLocator for it is enabled.  PvsPhysicalAddress[] DeviceMac: MAC of the Device,to see if the DiskLocator for it is enabled.  This required  Guid DiskLocatorId: DiskLocator GUID, to see if itis enabled for the Device.  or this required ; resolution  string DiskLocatorName: DiskLocator name, to see ifit is enabled for the Device.  One of these resolutions when needed  Guid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId or DiskLocatorId  String: If successful, the String value is returned.", 
            "title": "Get-PvsDeviceDiskLocatorEnabled"
        }, 
        {
            "location": "/#example-1-get-pvsdevicedisklocatorenabled-determine-ifpvsdevicepvsdisklocator-is-enabled", 
            "text": "Get-PvsDeviceDiskLocatorEnabled -Name theDevice-DiskLocatorName theDiskLocator -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Get-PvsDeviceDiskLocatorEnabled Determine ifPvsDevice/PvsDiskLocator is Enabled"
        }, 
        {
            "location": "/#get-pvsdevicedisktempversion", 
            "text": "Get Temporary Disk Version information for a Device,DiskLocator, Disk Version, Site or Farm.  One of these optional  Guid[] Guid or DeviceId: GUID of the Device to getthe temporary disk version information for.  string[] Name or DeviceName: Name of the Device toget the temporary disk version information for.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toget the temporary disk version information for.  Guid[] SiteId: GUID of the Site to get temporarydisk version information for, and also resolution for DiskLocatorName.  string[] SiteName: Name of the Site to get temporarydisk version information for, and also resolution for DiskLocatorName.  Guid[] DiskLocatorId: GUID of the Disk Locator toget temporary disk version information for.  or this optional ; resolution  string[] DiskLocatorName: Name of the Disk Locatorto get temporary disk version information for.  This optional ; resolution  string[] Version: Version of the DiskLocatorspecified to get temporary disk version information for. Needs theDiskLocatorId or DiskLocatorName too.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to get temporarydisk version information for, and also resolution for DiskLocatorName.  string[] SiteName: Name of the Site to get temporarydisk version information for, and also resolution for DiskLocatorName.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId, SiteId or DiskLocatorId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or DeviceId: Read-only GUID that uniquelyidentifies the Device with temporary version.  Name or DeviceName: Read-only Computer name thatuniquely identifies the Device with temporary version. ASCII computer namecharacters  DiskLocatorId: Read-only GUID that uniquelyidentifies then Disk Locator with temporary version.  DiskLocatorName: Read-only Name of the Disk LocatorFile with temporary version. It is unique within the Store. ASCII  SiteId: Read-only GUID of the Site the Device andDiskLocator are a member of.  SiteName: Read-only Name of the Site the Device andDiskLocator are a member of.  StoreId: Read-only GUID of the Store that the DiskLocator is a member of.  StoreName: Read-only Name of the Store that the DiskLocator is a member of.  Version: Read-only Disk version the temporary isfor.  PvsDeviceDiskTempVersion[]: If successful, the PvsDeviceDiskTempVersionobject(s) are returned.", 
            "title": "Get-PvsDeviceDiskTempVersion"
        }, 
        {
            "location": "/#example-1-get-pvsdevicedisktempversion-for-device", 
            "text": "Get the PvsDeviceDiskTempVersion for the Devicenamed theDevice.  Get-PvsDeviceDiskTempVersion -Name theDevice", 
            "title": "EXAMPLE 1: Get PvsDeviceDiskTempVersion for Device"
        }, 
        {
            "location": "/#example-2-get-pvsdevicedisktempversion-for-disklocator", 
            "text": "Get all PvsDeviceDiskTempVersion for the DiskLocatornamed theDiskLocator in the Site named theSite and Store named theStore.  Get-PvsDeviceDiskTempVersion -DiskLocatorNametheDiskLocator -SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Get PvsDeviceDiskTempVersion for DiskLocator"
        }, 
        {
            "location": "/#example-3-get-pvsdevicedisktempversion-for-disklocator-with-version", 
            "text": "Get-PvsDeviceDiskTempVersion -DiskLocatorNametheDiskLocator -Version 4 -SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 3: Get PvsDeviceDiskTempVersion for DiskLocator with Version"
        }, 
        {
            "location": "/#example-4-get-pvsdevicedisktempversion-for-site", 
            "text": "Get all PvsDeviceDiskTempVersion for the Site namedtheSite.  Get-PvsDeviceDiskTempVersion -SiteName theSite", 
            "title": "EXAMPLE 4: Get PvsDeviceDiskTempVersion for Site"
        }, 
        {
            "location": "/#example-5-get-pvsdevicedisktempversion-for-farm", 
            "text": "Get all PvsDeviceDiskTempVersion for the Farm.  Get-PvsDeviceDiskTempVersion", 
            "title": "EXAMPLE 5: Get PvsDeviceDiskTempVersion for Farm"
        }, 
        {
            "location": "/#get-pvsdeviceinfo", 
            "text": "Get the fields and status for a Device, all Devicesin a Collection, Site, Farm View, or Farm. All Devices are returned if noparameters are passed.  One of these optional  Guid[] Guid or DeviceId: GUID of the Device to Get.  string[] Name or DeviceName: Name of Device to Get.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toGet.  Guid[] CollectionId: GUID of the Collection to Getall Devices for.  Guid[] ServerId: GUID of the Server to Get allDevices for.  string[] ServerName: Name of the Server to Get allDevices for.  Guid[] DiskLocatorId: GUID of the DiskLocator to Getall Devices for.  Guid[] SiteViewId: GUID of the Site View to Get allDevices for.  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Guid[] FarmViewId: GUID of the Farm View to Get allDevices for.  string[] FarmViewName: Name of the Farm View to Getall Devices for.  string[] BdmBoot: Include only the BDM Devices whenset to 1. PXE devices if set to 0. If not included, all Devices are returned.  or one of these optional ; resolutions  string[] CollectionName: Name of the Collection toGet all Devices for.  string[] DiskLocatorName: Name of the DiskLocator toGet all Devices for.  string[] SiteViewName: Name of the Site View to Getall Devices for.  Optional  SwitchParameter OnlyActive: If -OnlyActive isspecified, include only the active Devices, otherwise all Devices are returned.Only active Devices are always returned for ServerId, ServerName, or version.  uint MakLicenseActivated: Optional MAK licensingindicator value to only return active Devices for. Values are: 0 (MAK notused), 1 (Not Activated), 2 (Activated).  uint Version: Version of the Disk to Get all activeDevices for. This is used with DiskLocatorId or DiskLocatorName.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceName, CollectionId, ServerId, DiskLocatorId,SiteViewId, SiteId or FarmViewId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or DeviceId: Read-only GUID that uniquelyidentifies this Device.  Name or DeviceName: Computer name with no spaces.ASCII computer name characters Max Length=15  CollectionId: GUID of the Collection this Device isto be a member of. It is not used with CollectionName.  CollectionName: Name of the Collection this Deviceis to be a member of. SiteName or SiteId must also be used.  SiteId: GUID of the Site the CollectionName is to bea member of. This or SiteName is used with CollectionName.  SiteName: Name of the Site the CollectionName is tobe a member of. This or SiteId is used with CollectionName.  Description: User description. Default=\"\"Max Length=250  DeviceMac: Ethernet address can have the formXX-XX-XX-XX-XX-XX. Uniquely identifies the Device.  BootFrom: Device to boot from. Choices are 1 forvDisk, 2 for Hard Disk, and 3 for Floppy. This cannot be Set for a Device withPersonal vDisk. Min=1, Max=3, Default=1  ClassName: Used by Automatic Update feature to matchnew versions of Disks to a Device. This cannot be Set for a Device withPersonal vDisk. Default=\"\" Max Length=41  Port: UDP port to use with Stream Service. Min=1025,Max=65534, Default=6901  Enabled: True when it can be booted, falseotherwise. This cannot be Set for a Device with Personal vDisk. Default=true  LocalDiskEnabled: If there is a local disk menuchoice for the Device, this is true. This cannot be Set for a Device withPersonal vDisk. Default=false  Role: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 400 is Collection Operator. Default=999  Authentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. This cannotbe Set for a Device with Personal vDisk. Min=0, Max=2, Default=0  User: Name of user to authenticate before the bootprocess continues. This cannot be Set for a Device with Personal vDisk.Default=\"\" ASCII Max Length=20  Password: Password of user to authenticate beforethe boot process continues. This cannot be Set for a Device with PersonalvDisk. Default=\"\" ASCII Max Length=100  Active: True if the Device is currently active,false otherwise. Default=false  Template: True if the Device is the template in itsCollection, false otherwise. Default=false  AdTimestamp: The time the Active Directory machineaccount password was generated. Do not set this field, it is only setinternally by PVS. Default=0  AdSignature: The signature of the Active Directorymachine account password. Do not set this field, it is only set internally byPVS. Default=0  LogLevel: Level to perform logging at. Values are: 0(None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6 (Trace).Min=0, Max=6, Default=0  DomainName: Fully qualified name of the domain thatthe Device belongs to. Do not set this field, it is only set internally by PVS.Default=\"\" Max Length=255  DomainObjectSID: The value of the objectSID ADattribute of the same name for the Device's computer account. Do not set thisfield, it is only set internally by PVS. Default=\"\" Max Length=186  DomainControllerName: The name of the DC used tocreate the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000  DomainTimeCreated: The time that the computeraccount was created. Has the date and time including milliseconds. Do not setthis field, it is only set internally by PVS. Default=Empty  Type: 1 when it performs test of Disks, 2 when itperforms maintenance on Disks, 3 when it has a Personal vDisk, 4 when it has aPersonal vDisk and performs tests, 0 otherwise. Min=0, Max=4, Default=0  PvdDriveLetter: Read-only Personal vDisk Driveletter. Range is E to U and W to Z. Default=\"\" Max Length=1  LocalWriteCacheDiskSize: The size in GB to formatthe Device cache file disk. If the value is 0, then the disk is not formatted.Min=0, Max=2048, Default=0  VirtualHostingPoolId: GUID that uniquely identifiesthe Virtual Hosting Pool for a VM. This is needed when Adding a VM device.Default=00000000-0000-0000-0000-000000000000  TemporaryVersionSet: Read-only true when temporaryversion is set. Default=false  BdmBoot: Use PXE boot when set to false, BDM bootwhen set to true. Default is PXE Default=false  BdmType: Use PXE boot when set to 0, BDM (Bios) bootwhen set to 1 and BDM (Uefi) boot when set to 2.  Default=0  BdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3 useUSB. Default=0  BdmUpdated: Timestamp of the last BDM boot diskupdate. Default=Empty  BdmCreated: Timstamp when BDM device was created  Default=Empty  XsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000  XsPvsProxyEnabled: Enable XenServer PVS proxy whenset to true Default=false  Ip: Read-only IP of the Device. It is equal to0.0.0.0 if the Device is not active.  ServerPortConnection: Read-only Port of the Serverthat the Device is using. It is equal to 0 if the Device is not active.Default=0  ServerIpConnection: Read-only IP of the Server thatthe Device is using. It is equal to 0.0.0.0 if the Device is not active.  ServerId: Read-only GUID of the Server that theDevice is using. It is equal to 00000000-0000-0000-0000-000000000000 if theDevice is not active.  ServerName: Read-only Name of the Server that theDevice is using. It is equal to \"\" if the Device is not active.  DiskLocatorId: Read-only GUID of the Disk Locatorthat the Device is using. It is equal to 00000000-0000-0000-0000-000000000000if the Device is not active.  DiskLocatorName: Read-only name of the Disk LocatorFile that the Device is using. It is equal to the list of Disk Locator namesfor the Device if the Device is not active.  DiskVersion: Read-only version of the Disk LocatorFile that the Device is using. It is equal to 0 if the Device is not active.Default=0  DiskVersionAccess: State of the Disk Version. Valuesare: 0 (Production), 1 (Maintenance), 2 (MaintenanceHighestVersion), 3(Override), 4 (Merge), 5 (MergeMaintenance), 6 (MergeTest), and 7 (Test). It isequal to 0 if the Device is not active. Default=0  DiskFileName: Name of the Disk File including theextension. It is equal to \"\" if the Device is not active.  Status: 1 or 2 numbers in the format n,n. They arethe number of retries and if ram cache is being used, ram cache percent used.It is equal to \"\" if the Device is not active.  LicenseType: 0 when None, 1 for Desktop, 2 forServer, 5 for OEM SmartClient, 6 for XenApp, 7 for XenDesktop. It is equal to 0if the Device is not active. Default=0  MakLicenseActivated: Read-only indicator if MAKlicensing is being used and is activated. Values are: 0 (MAK not used), 1 (NotActivated), 2 (Activated). It is equal to 0 if the Device is not active.Default=0  Model: Oem Only: Read-only model of the computer.Values are OptiPlex 745, 755, 320, 760, FX160, or Default. It is equal to\"\" if the Device is not active.  License: Oem Only: Read-only type of the license.Values are 0 when None, 1 or 2 when Desktop. It is equal to 0 if the Device isnot active. Default=0  PvsDeviceInfo[]: If successful, the PvsDeviceInfoobject(s) are returned.", 
            "title": "Get-PvsDeviceInfo"
        }, 
        {
            "location": "/#example-1-get-pvsdeviceinfo-for-farm", 
            "text": "Get all PvsDeviceInfo for the Farm.  Get-PvsDeviceInfo", 
            "title": "EXAMPLE 1: Get PvsDeviceInfo for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsdeviceinfo-for-farmview", 
            "text": "Get all PvsDeviceInfo for the FarmView namedtheFarmView.  Get-PvsDeviceInfo -FarmViewName theFarmView", 
            "title": "EXAMPLE 2: Get PvsDeviceInfo for FarmView"
        }, 
        {
            "location": "/#example-3-get-pvsdeviceinfo-for-site", 
            "text": "Get all PvsDeviceInfo for the Site named theSite.  Get-PvsDeviceInfo -SiteName theSite", 
            "title": "EXAMPLE 3: Get PvsDeviceInfo for Site"
        }, 
        {
            "location": "/#example-4-get-pvsdeviceinfo-for-siteview", 
            "text": "Get all PvsDeviceInfo for the SiteView namedtheSiteView in the Site named theSite.  Get-PvsDeviceInfo -SiteViewName theSiteView-SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 4: Get PvsDeviceInfo for SiteView"
        }, 
        {
            "location": "/#example-5-get-pvsdeviceinfo-for-collection", 
            "text": "Get all PvsDeviceInfo for the Collection namedtheCollection in the Site named theSite.  Get-PvsDeviceInfo -CollectionName theCollection-SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 5: Get PvsDeviceInfo for Collection"
        }, 
        {
            "location": "/#example-6-get-pvsdeviceinfo-for-disklocator", 
            "text": "Get all PvsDeviceInfo for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.  Get-PvsDeviceInfo -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 6: Get PvsDeviceInfo for DiskLocator"
        }, 
        {
            "location": "/#example-7-get-pvsdeviceinfo-for-device", 
            "text": "Get the PvsDeviceInfo for the Device namedtheDevice.  Get-PvsDeviceInfo -Name theDevice", 
            "title": "EXAMPLE 7: Get PvsDeviceInfo for Device"
        }, 
        {
            "location": "/#example-8-get-pvsdeviceinfo-and-enable", 
            "text": "Get all PvsDeviceInfo that are not Enabled and thenEnables them.  Get-PvsDeviceInfo -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 8: Get PvsDeviceInfo and Enable"
        }, 
        {
            "location": "/#get-pvsdevicepersonality", 
            "text": "Get the Device Personality names and values.  One of these required  Guid[] Guid or DeviceId: GUID of the Device.  string[] Name or DeviceName: Name of the Device.  PvsPhysicalAddress[] DeviceMac: MAC of the Device.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId  If only selected fields are needed, pass them in theFields parameter as a string array.  These fields exist in the DevicePersonality arraywithin each PvsDevicePersonality returned.  Each array item is a PvsDevicePersonalityListobject.  Name: Name of the Device personality item. MaxLength=250  Value: Value for the Device personality item. MaxLength=1000  PvsDevicePersonality[]: If successful, thePvsDevicePersonality object(s) are returned.", 
            "title": "Get-PvsDevicePersonality"
        }, 
        {
            "location": "/#example-1-get-pvsdevicepersonality-for-device", 
            "text": "Get all PvsDevicePersonality for the Device namedtheDevice.  Get-PvsDevicePersonality -Name theDevice", 
            "title": "EXAMPLE 1: Get PvsDevicePersonality for Device"
        }, 
        {
            "location": "/#example-2-get-pvsdevicepersonality-for-device-mac", 
            "text": "Get all PvsDevicePersonality for the Device with MAC02-50-F2-00-00-01.  Get-PvsDevicePersonality -DeviceMac\"02-50-F2-00-00-01\"", 
            "title": "EXAMPLE 2: Get PvsDevicePersonality for Device MAC"
        }, 
        {
            "location": "/#get-pvsdevicestatus", 
            "text": "Get the DeviceStatus fields for a Device or allDevices for a Server, Disk Locator, or Farm. All Devices are returned if noparameters are passed.  One of these optional  Guid[] Guid or DeviceId: GUID of the Device to Getstatus for.  string[] Name or DeviceName: Name of Device to Getstatus for.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toGet status for.  Guid[] ServerId: GUID of the Server to Get allDevice Status for.  string[] ServerName: Name of the Server to Get allDevice Status for.  Guid[] DiskLocatorId: GUID of the Disk Locator toGet all DeviceStatus for.  Guid[] CollectionId: GUID of the Collection to Getall DeviceStatus for.  or one of these optional ; resolutions  string[] DiskLocatorName: Name of the Disk LocatorFile to Get all DeviceStatus for.  string[] CollectionName: Name of the Collection toGet all DeviceStatus for.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId, ServerId, DiskLocatorId or CollectionId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or DeviceId: Read-only GUID of the Device. Canbe used with Get Device.  Name or DeviceName: Read-only Name of the Device.Can be used with Get Device.  Ip: Read-only IP of the Device.  ServerPortConnection: Read-only Port of the Serverthat the Device is using. Default=0  ServerIpConnection: Read-only IP of the Server thatthe Device is using.  ServerId: Read-only GUID of the Server that theDevice is using.  ServerName: Read-only Name of the Server that the Deviceis using.  DiskLocatorId: Read-only GUID of the Disk Locatorthat the Device is using.  DiskLocatorName: Read-only name of the Disk LocatorFile that the Device is using.  DiskVersion: Read-only version of the Disk LocatorFile that the Device is using. Default=0  DiskVersionAccess: State of the Disk Version. Valuesare: 0 (Production), 1 (Maintenance), 2 (MaintenanceHighestVersion), 3(Override), 4 (Merge), 5 (MergeMaintenance), 6 (MergeTest), and 7 (Test)Default=0  DiskFileName: Name of the Disk File including theextension.  Status: 1 or 2 numbers in the format n,n. They arethe number of retries and if ram cache is being used, ram cache percent used.  LicenseType: 0 when None, 1 for Desktop, 2 forServer, 5 for OEM SmartClient, 6 for XenApp, 7 for XenDesktop. Default=0  MakLicenseActivated: Read-only indicator if MAKlicensing is being used and is activated. Values are: 0 (MAK not used), 1 (NotActivated), 2 (Activated). Default=0  PvsDeviceStatus[]: If successful, thePvsDeviceStatus object(s) are returned.", 
            "title": "Get-PvsDeviceStatus"
        }, 
        {
            "location": "/#example-1-get-pvsdevicestatus-for-farm", 
            "text": "Get all PvsDeviceStatus for the Farm.  Get-PvsDeviceStatus", 
            "title": "EXAMPLE 1: Get PvsDeviceStatus for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsdevicestatus-for-farmview", 
            "text": "Get all PvsDeviceStatus for the FarmView namedtheFarmView.  Get-PvsDeviceStatus -FarmViewName theFarmView", 
            "title": "EXAMPLE 2: Get PvsDeviceStatus for FarmView"
        }, 
        {
            "location": "/#example-3-get-pvsdevicestatus-for-site", 
            "text": "Get all PvsDeviceStatus for the Site named theSite.  Get-PvsDeviceStatus -SiteName theSite", 
            "title": "EXAMPLE 3: Get PvsDeviceStatus for Site"
        }, 
        {
            "location": "/#example-4-get-pvsdevicestatus-for-siteview", 
            "text": "Get all PvsDeviceStatus for the SiteView namedtheSiteView in the Site named theSite.  Get-PvsDeviceStatus -SiteViewName theSiteView-SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 4: Get PvsDeviceStatus for SiteView"
        }, 
        {
            "location": "/#example-5-get-pvsdevicestatus-for-collection", 
            "text": "Get all PvsDeviceStatus for the Collection namedtheCollection in the Site named theSite.  Get-PvsDeviceStatus -CollectionName theCollection-SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 5: Get PvsDeviceStatus for Collection"
        }, 
        {
            "location": "/#example-6-get-pvsdevicestatus-for-disklocator", 
            "text": "Get all PvsDeviceStatus for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.  Get-PvsDeviceStatus -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 6: Get PvsDeviceStatus for DiskLocator"
        }, 
        {
            "location": "/#example-7-get-pvsdevicestatus-for-device", 
            "text": "Get the PvsDeviceStatus for the Device namedtheDevice.  Get-PvsDeviceStatus -Name theDevice", 
            "title": "EXAMPLE 7: Get PvsDeviceStatus for Device"
        }, 
        {
            "location": "/#get-pvsdirectory", 
            "text": "Look for Directories or Drives on the Serverspecified. Return a String array of the Directories or Drives found.  One of these required  Guid Guid or ServerId: GUID of the Server to get alist of Directories or Drives.  string Name or ServerName: Name of the Server to geta list of Directories or Drives.  Optional  string Path: Path to get list of Directories for. Ifnot specified, the Drives are returned.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId  string[]: If successful, the array of directorynames is returned.", 
            "title": "Get-PvsDirectory"
        }, 
        {
            "location": "/#example-1-get-pvsdirectory-for-name", 
            "text": "Get-PvsDirectory -Name theServer -Path\"C:\\directory\"", 
            "title": "EXAMPLE 1: Get-PvsDirectory for Name"
        }, 
        {
            "location": "/#example-2-get-pvsdirectory-for-pvsserver-using-pipe", 
            "text": "The Get-PvsServer output is piped to theGet-PvsDirectory.  Get-PvsServer -Name theServer -Fields Guid |Get-PvsDirectory -Path \"C:\\directory\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Get-PvsDirectory for PvsServer Using Pipe"
        }, 
        {
            "location": "/#get-pvsdisk", 
            "text": "Get the fields for a single disk.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId  If only selected fields are needed, pass them in theFields parameter as a string array.  Class: Class of the Disk. Max Length=40  ImageType: Type of this image (software type). MaxLength=40  DiskSize: Read-only size of the image. The value is0 when it is not available. Default=0  VhdBlockSize: Block size in KB. For VHD it is onlyused with Dynamic type. Tested sizes for VHD are 512, 2048, and 16384. VHDMin=512, Max=16384, Default=2048. For VHDX it is used for all types. Testedsize for VHDX is 32768. VHDX Min=1024, Max= 262144, Default=32768. Default=0  LogicalSectorSize: Logical Sector Size. Values are:512, 4096, Default=512  WriteCacheSize: RAM cache size (MB). Not 0 when usedwith Cache in Device RAM, and Cache in Device RAM with Overflow on Hard Disk. Avalue of 0 will disable the RAM use for Cache in Device RAM with Overflow onHard Disk. Min=0, Max=131072, Default=0  AutoUpdateEnabled: Automatically update this imagefor matching Devices when set to true. Default false  ActivationDateEnabled: Use activation date toactivate image when set to true. Default false  AdPasswordEnabled: Enable AD password managementwhen set to true.  HaEnabled: Enable HA when set to true.  PrinterManagementEnabled: Invalid printers will bedeleted from the Device when set to true.  WriteCacheType: 0 (Private), (other values arestandard image) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache onDevice Hard Disk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9(Cache in Device RAM with Overflow on Hard Disk). Min=0, Max=9, Default=0  LicenseMode: 0 (None), 1 (Multiple Activation Key),or 2 (Key Management Service). Min=0, Max=2, Default=0  ActiveDate: Date to activate the disk ifAutoUpdateEnabled and activationDateEnabled are true. Has the date. Empty whenthe AutoUpdateEnabled or activationDateEnabled are false.  LongDescription: Description of the Disk. MaxLength=399  SerialNumber: User defined serial number. MaxLength=36  Date: User defined date. Max Length=40  Author: User defined author. Max Length=40  Title: User defined title. Max Length=40  Company: User defined company. Max Length=40  InternalName: User defined name. Max Length=63  OriginalFile: User defined original file. MaxLength=127  HardwareTarget: User defined hardware target. MaxLength=127  MajorRelease: User defined major release number.Min=0, Max=4294967295, Default=0  MinorRelease: User defined minor release number.Min=0, Max=4294967295, Default=0  Build: User defined build number. Min=0,Max=4294967295, Default=0  VHDX: If VHDX is true, the format of the image isVHDX. Otherwise it is VHD. Default=false  PvsDisk[]: If successful, the PvsDisk object(s) arereturned.", 
            "title": "Get-PvsDisk"
        }, 
        {
            "location": "/#example-1-get-pvsdisk-for-disklocator", 
            "text": "Get the PvsDisk for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.  Get-PvsDisk -Name theDiskLocator -SiteName theSite-StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Get PvsDisk for DiskLocator"
        }, 
        {
            "location": "/#get-pvsdiskinfo", 
            "text": "Get the fields for a Disk and Disk Locator or allDisks and Disk Locators for a Device, Server, Store, Site, or Farm. All Disksand DiskLocators are returned if no parameters are passed.  One of these optional  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to Get.  Guid[] DeviceId: GUID of the Device to Get allDiskLocators for.  string[] DeviceName: Name of the Device to Get allDiskLocators for.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toGet all DiskLocators for.  Guid[] ServerId: GUID of the Server to Get allDiskLocators for.  string[] ServerName: Name of the Server to Get allDiskLocators for.  Guid[] UpdateTaskId: GUID of the Update Task to Getall DiskLocators for.  Guid[] SiteId: GUID of the Site to Get allDiskLocators for.  string[] SiteName: Name of the Site to Get allDiskLocators for.  or one of these optional ; resolutions  string[] Name or DiskLocatorName: Name of the DiskLocator File to Get.  Guid[] StoreId: GUID of the Store to Get allDiskLocators for.  string[] StoreName: Name of the Store to Get allDiskLocators for.  string[] UpdateTaskName: Name of the Update Task toGet all DiskLocators for.  One of these optional  SwitchParameter Single: If -Single is specified,include single server connection. If this and All are not included, bothconnection types are included.  SwitchParameter All: If -All is specified, includeall server connections for the store. If this and Single are not included, bothconnection types are included.  Optional  SwitchParameter OnlyActive: If -OnlyActive isspecified, include only the active DiskLocators. If not included, allDiskLocators are returned.  SwitchParameter UpdateDevice: If -UpdateDevice isspecified, include only DiskLocators that have an Update Device.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to Get allDiskLocators for.  string[] SiteName: Name of the Site to Get allDiskLocators for.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store to Get allDiskLocators for.  string[] StoreName: Name of the Store to Get allDiskLocators for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId, DeviceId, ServerId, UpdateTaskId orSiteId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or DiskLocatorId: Read-only GUID that uniquelyidentifies this Disk Locator.  Name or DiskLocatorName: Name of the Disk LocatorFile. It is unique within the Store. ASCII Max Length=52  SiteId: GUID of the Site this DiskLocator is to be amember of. It is not used with SiteName.  SiteName: Name of the Site this DiskLocator is to bea member of. It is not used with SiteId.  StoreId: GUID of the Store that this Disk Locator isa member of. SiteName or SiteId must also be used. It is not used withStoreName.  StoreName: Name of the Store that this Disk Locatoris a member of. SiteName or SiteId must also be used. It is not used withStoreId.  Description: User description. Default=\"\"Max Length=250  MenuText: Text that is displayed in the Boot Menu.If this field has no value, the name value is used. Default=\"\" ASCIIMax Length=64  ServerId: GUID of the single Server that this DiskLocator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000  ServerName: Name of the single Server that this DiskLocator is assigned to. It is not used with ServerId. Default=\"\"  Enabled: True when this disk can be booted, falseotherwise. Default=true  Role: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 999 is read-only. Default=999  Mapped: True if the Disk is currently mapped, falseotherwise. Default=false  EnabledForDevice: True when this disk is enabled forthe Device specified, false otherwise. This is only returned when a Device isspecified. Default=true  Active: True if the DiskLocator is currently active,false otherwise. Default=false  RebalanceEnabled: True when this Server canautomatically rebalance Devices, false otherwise. Default=false  RebalanceTriggerPercent: Percent over fair load thattriggers a dynamic Device rebalance. Min=5, Max=5000, Default=25  SubnetAffinity: Qualifier for subnet affinity whenassigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2, Default=0  DiskUpdateDeviceId: GUID of the DiskUpdateDevicethat is used when updates are performed.Default=00000000-0000-0000-0000-000000000000  DiskUpdateDeviceName: Name of the DiskUpdateDevicethat is used when updates are performed. Default=\"\"  TemporaryVersionSet: Read-only true when temporaryversion(s) are set. Default=false  Class: Class of the Disk. Max Length=40  ImageType: Type of this image (software type). MaxLength=40  DiskSize: Read-only size of the image. The value is0 when it is not available. Default=0  VhdBlockSize: Block size in KB. For VHD it is onlyused with Dynamic type. Tested sizes for VHD are 512, 2048, and 16384. VHDMin=512, Max=16384, Default=2048. For VHDX it is used for all types. Testedsize for VHDX is 32768. VHDX Min=1024, Max= 262144, Default=32768. Default=0  LogicalSectorSize: Logical Sector Size. Values are:512, 4096, Default=512  WriteCacheSize: RAM cache size (MB). Not 0 when usedwith Cache in Device RAM, and Cache in Device RAM with Overflow on Hard Disk. Avalue of 0 will disable the RAM use for Cache in Device RAM with Overflow onHard Disk. Min=0, Max=131072, Default=0  AutoUpdateEnabled: Automatically update this imagefor matching Devices when set to true. Default false  ActivationDateEnabled: Use activation date toactivate image when set to true. Default false  AdPasswordEnabled: Enable AD password managementwhen set to true.  HaEnabled: Enable HA when set to true.  PrinterManagementEnabled: Invalid printers will bedeleted from the Device when set to true.  WriteCacheType: 0 (Private), (other values arestandard image) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache onDevice Hard Disk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9(Cache in Device RAM with Overflow on Hard Disk). Min=0, Max=9, Default=0  LicenseMode: 0 (None), 1 (Multiple Activation Key),or 2 (Key Management Service). Min=0, Max=2, Default=0  ActiveDate: Date to activate the disk ifAutoUpdateEnabled and activationDateEnabled are true. Has the date. Empty whenthe AutoUpdateEnabled or activationDateEnabled are false.  LongDescription: Description of the Disk. MaxLength=399  SerialNumber: User defined serial number. MaxLength=36  Date: User defined date. Max Length=40  Author: User defined author. Max Length=40  Title: User defined title. Max Length=40  Company: User defined company. Max Length=40  InternalName: User defined name. Max Length=63  OriginalFile: User defined original file. MaxLength=127  HardwareTarget: User defined hardware target. MaxLength=127  MajorRelease: User defined major release number.Min=0, Max=4294967295, Default=0  MinorRelease: User defined minor release number.Min=0, Max=4294967295, Default=0  Build: User defined build number. Min=0,Max=4294967295, Default=0  VHDX: If VHDX is true, the format of the image isVHDX. Otherwise it is VHD. Default=false  DeviceCount: Read-only count of Devices. Default=0  Locked: True if the Disk is currently locked, falseotherwise. Default=false  PvsDiskInfo[]: If successful, the PvsDiskInfoobject(s) are returned.", 
            "title": "Get-PvsDiskInfo"
        }, 
        {
            "location": "/#example-1-get-pvsdiskinfo-for-farm", 
            "text": "Get all PvsDiskInfo for the Farm.  Get-PvsDiskInfo", 
            "title": "EXAMPLE 1: Get PvsDiskInfo for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsdiskinfo-for-site", 
            "text": "Get all PvsDiskInfo for the Site named theSite.  Get-PvsDiskInfo -SiteName theSite", 
            "title": "EXAMPLE 2: Get PvsDiskInfo for Site"
        }, 
        {
            "location": "/#example-3-get-pvsdiskinfo-for-site-and-store", 
            "text": "Get all PvsDiskInfo for the Site named theSite andStore named theStore.  Get-PvsDiskInfo -SiteName theSite -StoreNametheStore", 
            "title": "EXAMPLE 3: Get PvsDiskInfo for Site and Store"
        }, 
        {
            "location": "/#example-4-get-pvsdiskinfo-for-disklocator", 
            "text": "Get the PvsDiskInfo for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.  Get-PvsDiskInfo -Name theDiskLocator -SiteNametheSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Get PvsDiskInfo for DiskLocator"
        }, 
        {
            "location": "/#example-5-get-pvsdiskinfo-and-enable", 
            "text": "Get all PvsDiskInfo that are not Enabled and thenEnables them.  Get-PvsDiskInfo -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsDiskLocator  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 5: Get PvsDiskInfo and Enable"
        }, 
        {
            "location": "/#get-pvsdiskinventory", 
            "text": "Get the fields for Inventory Status of a DiskVersion or all Disk Versions for a Disk Locator.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to Get Disk Version Inventory of.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator to Get Disk Version Inventory of.  Optional  uint Version: Specific Version to Get.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  (DiskLocatorId and Version) or DiskLocatorId  If only selected fields are needed, pass them in theFields parameter as a string array.  Version: Version number. The base disk is version 0,the other version numbers are in part of the file name.  ServerId: GUID of the Server that the Disk VersionInventory is being reported about.  ServerName: Name of the Server that the Disk VersionInventory is being reported about.  FilePath: Path used to access the disk version fromthe Server. Empty if the information is not available.  FileTime: Date/Time of the date version file. Hasthe date and time without milliseconds. Empty if the information is notavailable.  PropertiesTime: Date/Time of the disk properties.Has the date and time without milliseconds. Empty if the information is notavailable.  State: The number code of the inventory state.Values are: 0 (Up to date), 1 (version file is missing), 2 (version file is outof date), 3 (properties are missing), 4 (properties are out of date), 5 (serveris not reachable).  Active: 1 if the Server is currently active, 2 ifunknown, and 0 otherwise.  PvsDiskInventory[]: If successful, thePvsDiskInventory object(s) are returned.", 
            "title": "Get-PvsDiskInventory"
        }, 
        {
            "location": "/#example-1-get-pvsdiskinventory-for-disklocator", 
            "text": "Get all PvsDiskInventory for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.  Get-PvsDiskInventory -Name theDiskLocator -SiteNametheSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Get PvsDiskInventory for DiskLocator"
        }, 
        {
            "location": "/#get-pvsdisklocator", 
            "text": "Get the fields for a Disk Locator or all DiskLocators for a Device, Server, Store, Site, or Farm. All DiskLocators arereturned if no parameters are passed.  One of these optional  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to Get.  Guid[] DeviceId: GUID of the Device to Get allDiskLocators for.  string[] DeviceName: Name of the Device to Get allDiskLocators for.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toGet all DiskLocators for.  Guid[] ServerId: GUID of the Server to Get allDiskLocators for.  string[] ServerName: Name of the Server to Get allDiskLocators for.  Guid[] UpdateTaskId: GUID of the Update Task to Getall DiskLocators for.  Guid[] SiteId: GUID of the Site to Get allDiskLocators for.  string[] SiteName: Name of the Site to Get allDiskLocators for.  or one of these optional ; resolutions  string[] Name or DiskLocatorName: Name of the DiskLocator File to Get.  Guid[] StoreId: GUID of the Store to Get allDiskLocators for.  string[] StoreName: Name of the Store to Get allDiskLocators for.  string[] UpdateTaskName: Name of the Update Task toGet all DiskLocators for.  One of these optional  SwitchParameter Single: If -Single is specified,include single server connection. If this and All are not included, bothconnection types are included.  SwitchParameter All: If -All is specified, includeall server connections for the store. If this and Single are not included, bothconnection types are included.  Optional  SwitchParameter OnlyActive: If -OnlyActive isspecified, include only the active DiskLocators. If not included, allDiskLocators are returned.  SwitchParameter UpdateDevice: If -UpdateDevice isspecified, include only DiskLocators that have an Update Device.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to Get allDiskLocators for.  string[] SiteName: Name of the Site to Get allDiskLocators for.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store to Get allDiskLocators for.  string[] StoreName: Name of the Store to Get allDiskLocators for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId, DeviceId, ServerId, UpdateTaskId,SiteId or StoreId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or DiskLocatorId: Read-only GUID that uniquelyidentifies this Disk Locator.  Name or DiskLocatorName: Name of the Disk LocatorFile. It is unique within the Store. ASCII Max Length=52  SiteId: GUID of the Site this DiskLocator is to be amember of. It is not used with SiteName.  SiteName: Name of the Site this DiskLocator is to bea member of. It is not used with SiteId.  StoreId: GUID of the Store that this Disk Locator isa member of. SiteName or SiteId must also be used. It is not used withStoreName.  StoreName: Name of the Store that this Disk Locatoris a member of. SiteName or SiteId must also be used. It is not used withStoreId.  Description: User description. Default=\"\"Max Length=250  MenuText: Text that is displayed in the Boot Menu.If this field has no value, the name value is used. Default=\"\" ASCIIMax Length=64  ServerId: GUID of the single Server that this DiskLocator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000  ServerName: Name of the single Server that this DiskLocator is assigned to. It is not used with ServerId. Default=\"\"  Enabled: True when this disk can be booted, falseotherwise. Default=true  Role: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, 300 is CollectionAdministrator, and 999 is read-only. Default=999  Mapped: True if the Disk is currently mapped, falseotherwise. Default=false  EnabledForDevice: True when this disk is enabled forthe Device specified, false otherwise. This is only returned when a Device isspecified. Default=true  Active: True if the DiskLocator is currently active,false otherwise. Default=false  RebalanceEnabled: True when this Server canautomatically rebalance Devices, false otherwise. Default=false  RebalanceTriggerPercent: Percent over fair load thattriggers a dynamic Device rebalance. Min=5, Max=5000, Default=25  SubnetAffinity: Qualifier for subnet affinity whenassigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2, Default=0  DiskUpdateDeviceId: GUID of the DiskUpdateDevicethat is used when updates are performed.Default=00000000-0000-0000-0000-000000000000  DiskUpdateDeviceName: Name of the DiskUpdateDevicethat is used when updates are performed. Default=\"\"  TemporaryVersionSet: Read-only true when temporaryversion(s) are set. Default=false  PvsDiskLocator[]: If successful, the PvsDiskLocatorobject(s) are returned.", 
            "title": "Get-PvsDiskLocator"
        }, 
        {
            "location": "/#example-1-get-pvsdisklocator-for-farm", 
            "text": "Get all PvsDiskLocator for the Farm.  Get-PvsDiskLocator", 
            "title": "EXAMPLE 1: Get PvsDiskLocator for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsdisklocator-for-site", 
            "text": "Get all PvsDiskLocator for the Site named theSite.  Get-PvsDiskLocator -SiteName theSite", 
            "title": "EXAMPLE 2: Get PvsDiskLocator for Site"
        }, 
        {
            "location": "/#example-3-get-pvsdisklocator-for-site-and-store", 
            "text": "Get all PvsDiskLocator for the Site named theSiteand Store named theStore.  Get-PvsDiskLocator -SiteName theSite -StoreNametheStore", 
            "title": "EXAMPLE 3: Get PvsDiskLocator for Site and Store"
        }, 
        {
            "location": "/#example-4-get-pvsdisklocator-for-disklocator", 
            "text": "Get the PvsDiskLocator for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Get PvsDiskLocator for DiskLocator"
        }, 
        {
            "location": "/#example-5-get-pvsdisklocator-and-enable", 
            "text": "Get all PvsDiskLocator that are not Enabled and thenEnables them.  Get-PvsDiskLocator -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsDiskLocator  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 5: Get PvsDiskLocator and Enable"
        }, 
        {
            "location": "/#get-pvsdisklocatorcount", 
            "text": "Get count of Disk Locators for a Site and Type.  One of these required  Guid SiteId: GUID of the Site to get the DiskLocator Count of.  string SiteName: Name of the Site to get the DiskLocator Count of.  One of these optional  SwitchParameter Single: If -Single is specified,include single server connection. If this and All are not included, bothconnection types are included.  SwitchParameter All: If -All is specified, includeall server connections for the store. If this and Single are not included, bothconnection types are included.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  SiteId  UInt32: If successful, the numeric value is returned", 
            "title": "Get-PvsDiskLocatorCount"
        }, 
        {
            "location": "/#example-1-get-pvsdisklocatorcount-returns-the-number-or-count-ofpvsdisklocator-in-pvssite", 
            "text": "Get-PvsDiskLocatorCount -SiteName theSite", 
            "title": "EXAMPLE 1: Get-PvsDiskLocatorCount Returns the Number (or Count) ofPvsDiskLocator in PvsSite"
        }, 
        {
            "location": "/#get-pvsdisklocatorlock", 
            "text": "Get the fields for all the locks of a Disk Locator.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to Get the Locks.  or this required ; resolution  string[] Name or DiskLocatorName: Name of DiskLocator to Get the Locks.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId  If only selected fields are needed, pass them in theFields parameter as a string array.  Exclusive: True when the lock is exclusive, falsewhen it is shared. Default=false  DeviceId: GUID of the Device that has the lock, willbe 00000000-0000-0000-0000-000000000000 if a Server has the lock.  DeviceName: Name of the Device that has the lock,will not be included if a Server has the lock.  ServerId: GUID of the Server that has the lock, willbe 00000000-0000-0000-0000-000000000000 if a Device has the lock.  ServerName: Name of the Server that has the lock,will not be included if a Device has the lock.  ReadOnly: True when lock is because file system isread only, false when file system is read write Default=false  PvsDiskLocatorLock[]: If successful, thePvsDiskLocatorLock object(s) are returned.", 
            "title": "Get-PvsDiskLocatorLock"
        }, 
        {
            "location": "/#example-1-get-pvsdisklocatorlock-for-disklocator", 
            "text": "Get all PvsDiskLocatorLock for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.  Get-PvsDiskLocatorLock -Name theDiskLocator-SiteName theSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Get PvsDiskLocatorLock for DiskLocator"
        }, 
        {
            "location": "/#get-pvsdiskupdatedevice", 
            "text": "Get the fields and status for a Disk Update Device,or all Disk Update Devices for a Site, Server, DiskLocator or Farm. All DiskUpdate Devices are returned if no parameters are passed.  One of these optional  Guid[] Guid or DeviceId: GUID of the Disk UpdateDevice to Get.  string[] Name or DeviceName: Name of Disk UpdateDevice to Get.  PvsPhysicalAddress[] DeviceMac: MAC of the DiskUpdate Device to Get.  Guid[] ServerId: GUID of the Server to Get all DiskUpdate Devices for.  string[] ServerName: Name of the Server to Get allDisk Update Devices for.  Guid[] DiskLocatorId: GUID of the DiskLocator to Getthe Disk Update Device for.  Guid[] UpdateTaskId: GUID of the Update Task to Getall Disk Update Devices for.  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  or one of these optional ; resolutions  string[] DiskLocatorName: Name of the DiskLocator toGet the Disk Update Device for.  string[] UpdateTaskName: Name of the Update Task toGet all Disk Update Devices for.  Optional  SwitchParameter OnlyActive: If -OnlyActive isspecified, include only the active Disk Update Devices. Only active Disk UpdateDevices are always returned for ServerId or ServerName.  uint MakLicenseActivated: Optional MAK licensingindicator value to only return active Disk Update Devices for. Values are: 0(MAK not used), 1 (Not Activated), 2 (Activated).  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId, ServerId, DiskLocatorId, UpdateTaskId orSiteId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or DeviceId: Read-only GUID that uniquelyidentifies this Device.  Name or DeviceName: Computer name with no spaces.ASCII computer name characters Max Length=15  VirtualHostingPoolId: GUID of the Virtual HostingPool. It is not used with VirtualHostingPoolName. Default=00000000-0000-0000-0000-000000000000  VirtualHostingPoolName: Name of the Virtual HostingPool.  DiskLocatorId: GUID of the Disk Locator to updatewith this Device.  DiskLocatorName: Name of the Disk Locator File toupdate with this Device.  SiteId: GUID of the Site this Disk Update Device isto be a member of.  SiteName: Name of the Site this Disk Update Deviceis to be a member of.  StoreId: GUID of the Store that the Disk Locator isa member of.  StoreName: Name of the Store that the Disk Locatoris a member of.  Description: User description. Default=\"\"Max Length=250  DeviceMac: Ethernet address can have the formXX-XX-XX-XX-XX-XX. Uniquely identifies the Device.  Port: UDP port to use with Stream Service. Min=1025,Max=65534, Default=6901  Active: True if the Device is currently active,false otherwise. Default=false  AdTimestamp: The time the Active Directory machineaccount password was generated. Do not set this field, it is only setinternally by PVS. Default=0  AdSignature: The signature of the Active Directorymachine account password. Do not set this field, it is only set internally byPVS. Default=0  LogLevel: Level to perform logging at. Values are: 0(None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6 (Trace).Min=0, Max=6, Default=0  DomainName: Fully qualified name of the domain thatthe Device belongs to. Do not set this field, it is only set internally by PVS.Default=\"\" Max Length=255  DomainObjectSID: The value of the objectSID ADattribute of the same name for the Device's computer account. Do not set thisfield, it is only set internally by PVS. Default=\"\" Max Length=186  DomainControllerName: The name of the DC used tocreate the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000  DomainTimeCreated: The time that the computeraccount was created. Has the date and time including milliseconds. Do not setthis field, it is only set internally by PVS. Default=Empty  Ip: Read-only IP of the Device. It is equal to0.0.0.0 if the Device is not active.  ServerPortConnection: Read-only Port of the Serverthat the Device is using. It is equal to 0 if the Device is not active.Default=0  ServerIpConnection: Read-only IP of the Server thatthe Device is using. It is equal to 0.0.0.0 if the Device is not active.  ServerId: Read-only GUID of the Server that theDevice is using. It is equal to 00000000-0000-0000-0000-000000000000 if theDevice is not active.  ServerName: Read-only Name of the Server that theDevice is using. It is equal to \"\" if the Device is not active.  DiskVersion: Read-only version of the Disk LocatorFile that the Device is using. It is equal to 0 if the Device is not active.Default=0  Status: 1 or 2 numbers in the format n,n. They arethe number of retries and if ram cache is being used, ram cache percent used.It is equal to \"\" if the Device is not active.  LicenseType: 0 when None, 1 for Desktop, 2 forServer, 5 for OEM SmartClient, 6 for XenApp, 7 for XenDesktop. It is equal to 0if the Device is not active. Default=0  MakLicenseActivated: Read-only indicator if MAKlicensing is being used and is activated. Values are: 0 (MAK not used), 1 (NotActivated), 2 (Activated). It is equal to 0 if the Device is not active.Default=0  Model: Oem Only: Read-only model of the computer.Values are OptiPlex 745, 755, 320, 760, FX160, or Default. It is equal to\"\" if the Device is not active.  License: Oem Only: Read-only type of the license.Values are 0 when None, 1 or 2 when Desktop. It is equal to 0 if the Device isnot active. Default=0  PvsDiskUpdateDevice[]: If successful, thePvsDiskUpdateDevice object(s) are returned.", 
            "title": "Get-PvsDiskUpdateDevice"
        }, 
        {
            "location": "/#example-1-get-pvsdiskupdatedevice-for-farm", 
            "text": "Get all PvsDiskUpdateDevice for the Farm.  Get-PvsDiskUpdateDevice", 
            "title": "EXAMPLE 1: Get PvsDiskUpdateDevice for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsdiskupdatedevice-for-site", 
            "text": "Get all PvsDiskUpdateDevice for the Site namedtheSite.  Get-PvsDiskUpdateDevice -SiteName theSite", 
            "title": "EXAMPLE 2: Get PvsDiskUpdateDevice for Site"
        }, 
        {
            "location": "/#example-3-get-pvsdiskupdatedevice-for-server", 
            "text": "Get all PvsDiskUpdateDevice for the Server namedtheServer.  Get-PvsDiskUpdateDevice -ServerName theServer", 
            "title": "EXAMPLE 3: Get PvsDiskUpdateDevice for Server"
        }, 
        {
            "location": "/#example-4-get-pvsdiskupdatedevice-for-disklocator", 
            "text": "Get all PvsDiskUpdateDevice for the DiskLocatornamed theDiskLocator in the Site named theSite and Store named theStore.  Get-PvsDiskUpdateDevice -DiskLocatorNametheDiskLocator -SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Get PvsDiskUpdateDevice for DiskLocator"
        }, 
        {
            "location": "/#example-5-get-pvsdiskupdatedevice-for-device", 
            "text": "Get the PvsDiskUpdateDevice for the Device namedtheDevice.  Get-PvsDiskUpdateDevice -Name theDevice", 
            "title": "EXAMPLE 5: Get PvsDiskUpdateDevice for Device"
        }, 
        {
            "location": "/#example-6-get-pvsdiskupdatedevice-for-device-mac", 
            "text": "Get the PvsDiskUpdateDevice for the Device with MAC02-50-F2-00-00-01.  Get-PvsDiskUpdateDevice -DeviceMac\"02-50-F2-00-00-01\"", 
            "title": "EXAMPLE 6: Get PvsDiskUpdateDevice for Device MAC"
        }, 
        {
            "location": "/#example-7-get-pvsdiskupdatedevice-for-updatetask", 
            "text": "Get the PvsDiskUpdateDevice for the UpdateTask namedtheUpdateTask in the Site named theSite.  Get-PvsDiskUpdateDevice -UpdateTaskNametheUpdateTask -SiteName theSite  UpdateTaskId can be used instead of UpdateTaskNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 7: Get PvsDiskUpdateDevice for UpdateTask"
        }, 
        {
            "location": "/#get-pvsdiskupdatestatus", 
            "text": "Get the status of an Update Task, or all UpdateTasks for a Site or Farm. All Disk Update Tasks are returned if no parametersare passed.  One of these optional  Guid[] UpdateTaskId: GUID of the Update Task to Get.  Guid[] DeviceId: GUID of the Disk Update Device toGet Disk Update Status for.  string[] DeviceName: Name of the Disk Update Deviceto Get Disk Update Status for.  PvsPhysicalAddress[] DeviceMac: MAC of the DiskUpdate Device to Get Disk Update Status for.  Guid[] Guid or DiskUpdateTaskId: GUID of the DiskUpdate Task and Device relationship to Get Disk Update Status for.  Guid[] SiteId: GUID of the Site to Get all UpdateTasks for. Also used with UpdateTaskName.  string[] SiteName: Name of the Site to Get allUpdate Tasks for. Also used with UpdateTaskName.  or this optional ; resolution  string[] UpdateTaskName: Name of the Update Task toGet.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to Get all UpdateTasks for. Also used with UpdateTaskName.  string[] SiteName: Name of the Site to Get allUpdate Tasks for. Also used with UpdateTaskName.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  UpdateTaskId, DeviceId or SiteId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or DiskUpdateTaskId: GUID that uniquelyidentifies this Update Task and Device relationship.  UpdateTaskId: GUID that uniquely identifies theUpdate Task.  UpdateTaskName: Name of the Update Task.  Description: User description of the Update Task.  DiskLocatorId: GUID of the Disk Locator to update.  Name or DiskLocatorName: Name of the Disk LocatorFile to update.  VirtualHostingPoolId: GUID of the Virtual HostingPool being used for the update.  VirtualHostingPoolName: Name of the Virtual HostingPool being used for the update.  DeviceId: GUID that Device being used to do theupdate.  DeviceName: Name of the Device being used to do theupdate.  SiteId: GUID of the Site that this Update Task Nameis a member of.  SiteName: Name of the Site that this Update TaskName is a member of.  StoreId: GUID of the Store that the Disk Locator isa member of.  StoreName: Name of the Store that the Disk Locatoris a member of.  PreviousResult: Status of the last run. Values are:0 (Ready), 1 (Update Pending), 2 (Preparing Image), 3 (Starting VM), 4 (UpdateIn Progress), 5 (Stopping VM), 6 (Submitting Image), 7 (Reverting Image), 8(Invalid), 9 (Aborted), 10 (Completed Successfully), 11 (No Updates) Min=0,Max=11, Default=0  PreviousResultMessage: Message string that includesthe results of the last run. Default=\"\" Max Length=255  CurrentStatus: Current status of the update. Valuesare: 0 (Ready), 1 (Update Pending), 2 (Preparing Image), 3 (Starting VM), 4(Update In Progress), 5 (Stopping VM), 6 (Submitting Image), 7 (RevertingImage), 8 (Invalid), 9 (Aborted), 10 (Completed Successfully), 11 (No Updates)Min=0, Max=11, Default=0  CurrentStatusMessage: Message string that includesthe results of the run. Default=\"\" Max Length=255  PvsDiskUpdateStatus[]: If successful, thePvsDiskUpdateStatus object(s) are returned.", 
            "title": "Get-PvsDiskUpdateStatus"
        }, 
        {
            "location": "/#example-1-get-pvsdiskupdatestatus-for-farm", 
            "text": "Get all PvsDiskUpdateStatus for the Farm.  Get-PvsDiskUpdateStatus", 
            "title": "EXAMPLE 1: Get PvsDiskUpdateStatus for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsdiskupdatestatus-for-site", 
            "text": "Get all PvsDiskUpdateStatus for the Site namedtheSite.  Get-PvsDiskUpdateStatus -SiteName theSite", 
            "title": "EXAMPLE 2: Get PvsDiskUpdateStatus for Site"
        }, 
        {
            "location": "/#example-3-get-pvsdiskupdatestatus-for-server", 
            "text": "Get all PvsDiskUpdateStatus for the Server namedtheServer.  Get-PvsDiskUpdateStatus -ServerName theServer", 
            "title": "EXAMPLE 3: Get PvsDiskUpdateStatus for Server"
        }, 
        {
            "location": "/#example-4-get-pvsdiskupdatestatus-for-disklocator", 
            "text": "Get all PvsDiskUpdateStatus for the DiskLocatornamed theDiskLocator in the Site named theSite and Store named theStore.  Get-PvsDiskUpdateStatus -DiskLocatorNametheDiskLocator -SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Get PvsDiskUpdateStatus for DiskLocator"
        }, 
        {
            "location": "/#example-5-get-pvsdiskupdatestatus-for-device", 
            "text": "Get the PvsDiskUpdateStatus for the Device namedtheDevice.  Get-PvsDiskUpdateStatus -Name theDevice", 
            "title": "EXAMPLE 5: Get PvsDiskUpdateStatus for Device"
        }, 
        {
            "location": "/#example-6-get-pvsdiskupdatestatus-for-device-mac", 
            "text": "Get the PvsDiskUpdateStatus for the Device with MAC02-50-F2-00-00-01.  Get-PvsDiskUpdateStatus -DeviceMac \"02-50-F2-00-00-01\"", 
            "title": "EXAMPLE 6: Get PvsDiskUpdateStatus for Device MAC"
        }, 
        {
            "location": "/#example-7-get-pvsdiskupdatestatus-for-updatetask", 
            "text": "Get the PvsDiskUpdateStatus for the UpdateTask namedtheUpdateTask in the Site named theSite.  Get-PvsDiskUpdateStatus -UpdateTaskNametheUpdateTask -SiteName theSite  UpdateTaskId can be used instead of UpdateTaskNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 7: Get PvsDiskUpdateStatus for UpdateTask"
        }, 
        {
            "location": "/#example-8-get-pvsdiskupdatestatus-for-diskupdatetaskid", 
            "text": "Get the PvsDiskUpdateStatus for the Device namedtheDevice then uses the DiskUpdateTaskId of the PvsDiskUpdateStatus to get thefuture Get-PvsDiskUpdateStatus.  $u = Get-PvsDiskUpdateStatus -DeviceName theDevice-Fields DiskUpdateTaskId  Get-PvsDiskUpdateStatus -Guid $u.DiskUpdateTaskId  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 8: Get PvsDiskUpdateStatus for DiskUpdateTaskId"
        }, 
        {
            "location": "/#get-pvsdiskversion", 
            "text": "Get the fields for a Disk Version or all DiskVersions for a Disk Locator.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to Get Disk Versions of.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator to Get Disk Versions of.  One of these optional  uint Version: Specific Version to Get.  uint Type: When set to 1, get the Maintenance orMaintenanceHighestVersion access version if it exists. When set to 2, get theTest access versions if any exist. When set to 3, get the Override accessversion if it exists.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  (DiskLocatorId and Version) or DiskLocatorId  If only selected fields are needed, pass them in theFields parameter as a string array.  Version: Read-only version number. The base disk isversion 0, the other version numbers are in part of the file name. Default=0  Description: User description. Default=\"\"Max Length=250  Type: Read-only type of the Disk Version. Valuesare: 0 (Base), 1 (Manual), 2 (Automatic), 3 (Merge), and 4 (MergeBase) Min=0,Max=4, Default=0  CreateDate: Read-only Date/Time that the DiskVersion was created. Default=getdate  ScheduledDate: Date/Time that the Disk Version isscheduled to become available. Has the date, hour and minute. Empty when thedisk version is made available immediately. Default=Empty  DeleteWhenFree: Read-only true if the Disk Versionis no longer needed because of a merge. If not current booted by a Device, itcan be deleted. Default=false  Access: Read-only access of the Disk Version. Valuesare: 0 (Production), 1 (Maintenance), 2 (MaintenanceHighestVersion), 3(Override), 4 (Merge), 5 (MergeMaintenance), 6 (MergeTest), and 7 (Test) Min=0,Max=7, Default=0  Name or DiskFileName: Name of the Disk Fileincluding the extension. Default=\"\"  DeviceCount: Read-only count of Devices. Default=0  GoodInventoryStatus: True when the up to date fileis accessible by all Servers, false otherwise. Default=false  TaskId: When a Merge is occurring, this will be setwith the task number of the process that is occurring. Default=\"\"  CanDelete: Read-only true when the version can bedeleted. Default=false  CanMerge: Read-only true when the version can beupdate merged. Will be set for the highest version number. Default=false  CanMergeBase: Read-only true when the version can bebase merged. Will be set for the highest version number. Default=false  CanPromote: Read-only true when the version can bepromoted. Default=false  CanRevertTest: Read-only true when the version canbe reverted to Test Access. Default=false  CanRevertMaintenance: Read-only true when theversion can be reverted to Maintenance Access. Default=false  CanSetScheduledDate: Read-only true when the versioncan have the scheduled date modified. Default=false  CanOverride: Read-only true when the version can beset as the Override. Default=false  IsPending: Read-only true when the versionScheduledDate has not occurred. Default=false  TemporaryVersionSet: Read-only true when temporaryversion(s) are set. Some changes cannot be made to the version when this isset. Default=false  PvsDiskVersion[]: If successful, the PvsDiskVersionobject(s) are returned.", 
            "title": "Get-PvsDiskVersion"
        }, 
        {
            "location": "/#example-1-get-pvsdiskversion-for-disklocator", 
            "text": "Get all PvsDiskVersion for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.  Get-PvsDiskVersion -Name theDiskLocator -SiteNametheSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Get PvsDiskVersion for DiskLocator"
        }, 
        {
            "location": "/#example-2-get-pvsdiskversion-for-disklocator", 
            "text": "Get the first base PvsDiskVersion for theDiskLocator named theDiskLocator in Site named theSite and Store namedtheStore.  Get-PvsDiskVersion -Name theDiskLocator -Version 0-SiteName theSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Get PvsDiskVersion for DiskLocator"
        }, 
        {
            "location": "/#example-3-get-maintenance-pvsdiskversion-for-disklocator", 
            "text": "Get the Maintenance PvsDiskVersion for theDiskLocator named theDiskLocator in Site named theSite and Store namedtheStore.  Get-PvsDiskVersion -Name theDiskLocator -Type 1-SiteName theSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 3: Get Maintenance PvsDiskVersion for DiskLocator"
        }, 
        {
            "location": "/#example-4-get-test-pvsdiskversion-for-disklocator", 
            "text": "Get all Test PvsDiskVersion for the DiskLocatornamed theDiskLocator in Site named theSite and Store named theStore.  Get-PvsDiskVersion -Name theDiskLocator -Type 2-SiteName theSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Get Test PvsDiskVersion for DiskLocator"
        }, 
        {
            "location": "/#example-5-get-override-pvsdiskversion-for-disklocator", 
            "text": "Get the Override PvsDiskVersion for the DiskLocatornamed theDiskLocator in Site named theSite and Store named theStore.  Get-PvsDiskVersion -Name theDiskLocator -Type 3-SiteName theSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 5: Get Override PvsDiskVersion for DiskLocator"
        }, 
        {
            "location": "/#get-pvsexists", 
            "text": "Return true if a Site, Server, Collection, View,Device, Store, Update Task or Virtual Hosting Pool Name is already used. If aCollectionName, SiteViewName, UpdateTaskName or VirtualHostingPoolName isspecified, SiteName or SiteId must be included.  One of these required  string SiteName: Name of the Site.  string ServerName: Server name, to see if it isalready used in the Farm.  string FarmViewName: Farm View name, to see if it isalready used in the Farm.  string DeviceName: Device name, to see if it isalready used in the Farm.  PvsPhysicalAddress[] DeviceMac: Device MAC, to seeif it is already used in the Farm.  string StoreName: Store name, to see if it isalready used.  or one of these required ; resolutions  string CollectionName: Collection name, to see if itis already used in a Site.  string SiteViewName: Site View name, to see if it isalready used in the Site.  string VirtualHostingPoolName: Virtual Hosting Poolname, to see if it is already used in a Site.  string UpdateTaskName: Update Task name, to see ifit is already used in a Site.  string DiskLocatorName: DiskLocator name, to see ifit is already used in a Site.  One of these resolutions when needed  string SiteName: Name of the Site.  Guid SiteId: GUID of the Site.  One of these resolutions when needed  Guid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string StoreName: Store name, to see if it isalready used.  Boolean: If successful, $true or $false is returned.", 
            "title": "Get-PvsExists"
        }, 
        {
            "location": "/#example-1-get-pvsexists-determine-if-sitename-already-exists", 
            "text": "Get-PvsExists -SiteName theName", 
            "title": "EXAMPLE 1: Get-PvsExists Determine if SiteName Already Exists"
        }, 
        {
            "location": "/#example-2-get-pvsexists-determine-if-servername-already-exists", 
            "text": "Get-PvsExists -ServerName theName", 
            "title": "EXAMPLE 2: Get-PvsExists Determine if ServerName Already Exists"
        }, 
        {
            "location": "/#example-3-get-pvsexists-determine-if-farmviewname-already-exists", 
            "text": "Get-PvsExists -FarmViewName theName", 
            "title": "EXAMPLE 3: Get-PvsExists Determine if FarmViewName Already Exists"
        }, 
        {
            "location": "/#example-4-get-pvsexists-determine-if-devicename-already-exists", 
            "text": "Get-PvsExists -DeviceName theName", 
            "title": "EXAMPLE 4: Get-PvsExists Determine if DeviceName Already Exists"
        }, 
        {
            "location": "/#example-5-get-pvsexists-determine-if-devicemac-already-exists", 
            "text": "Get-PvsExists -DeviceMac\"00-11-22-33-44-55\"", 
            "title": "EXAMPLE 5: Get-PvsExists Determine if DeviceMac Already Exists"
        }, 
        {
            "location": "/#example-6-get-pvsexists-determine-if-storename-already-exists", 
            "text": "Get-PvsExists -StoreName theName", 
            "title": "EXAMPLE 6: Get-PvsExists Determine if StoreName Already Exists"
        }, 
        {
            "location": "/#example-7-get-pvsexists-determine-if-collectionname-already-exists", 
            "text": "Get-PvsExists -CollectionName theName -SiteNametheSite  SiteId can be used instead of SiteName.", 
            "title": "EXAMPLE 7: Get-PvsExists Determine if CollectionName Already Exists"
        }, 
        {
            "location": "/#example-8-get-pvsexists-determine-if-siteviewname-already-exists", 
            "text": "Get-PvsExists -SiteViewName theName -SiteNametheSite  SiteId can be used instead of SiteName.", 
            "title": "EXAMPLE 8: Get-PvsExists Determine if SiteViewName Already Exists"
        }, 
        {
            "location": "/#example-9-get-pvsexists-determine-if-virtualhostingpoolname-already-exists", 
            "text": "Get-PvsExists -VirtualHostingPoolName theName-SiteName theSite  SiteId can be used instead of SiteName.", 
            "title": "EXAMPLE 9: Get-PvsExists Determine if VirtualHostingPoolName Already Exists"
        }, 
        {
            "location": "/#example-10-get-pvsexists-determine-if-updatetaskname-already-exists", 
            "text": "Get-PvsExists -UpdateTaskName theName -SiteNametheSite  SiteId can be used instead of SiteName.", 
            "title": "EXAMPLE 10: Get-PvsExists Determine if UpdateTaskName Already Exists"
        }, 
        {
            "location": "/#example-11-get-pvsexists-determine-if-disklocatorname-already-exists", 
            "text": "Get-PvsExists -DiskLocatorName theName -SiteNametheSite -StoreName theStore  SiteId can be used instead of SiteName, and StoreIdcan be used instead of StoreName.", 
            "title": "EXAMPLE 11: Get-PvsExists Determine if DiskLocatorName Already Exists"
        }, 
        {
            "location": "/#get-pvsfarm", 
            "text": "Get the fields for the Farm.  Optional  Guid[] Guid or FarmId: GUID of the Farm to Get. Thisis optional since there is only one Farm.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  FarmId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or FarmId: Read-only GUID that uniquelyidentifies this Farm.  Name or FarmName: Name of the Farm.Default=\"\" Max Length=50  Description: User description. Default=\"\"Max Length=250  AutoAddEnabled: True when Auto Add is enabled, falseotherwise. Default=false  AuditingEnabled: True when Auditing is enabled,false otherwise. Default=false  LastAuditArchiveDate: Last date of Audit Trail datathat was Archived. Has the date. Default=Empty  DefaultSiteId: GUID of the Site to place new Devicesinto automatically. Not used with defaultSiteName.Default=00000000-0000-0000-0000-000000000000  DefaultSiteName: Name of the Site to place newDevices into automatically. Not used with DefaultSiteId. Default=\"\"  OfflineDatabaseSupportEnabled: True when OfflineDatabase Support is enabled, false otherwise. Default=false  AdGroupsEnabled: Active Directory groups are usedfor authorization, when set to true. Windows groups are used when set to false.Default=false  LicenseServer: License server name.Default=\"\" Max Length=255  LicenseServerPort: License server port. Min=1025,Max=65534, Default=27000  AutomaticMergeEnabled: True when Automatic Merge isenabled, false otherwise. If the number of versions becomes more than theMaxVersions value, a merge will occur at the end of PromoteDiskVersion.Default=true  MaxVersions: Maximum number a versions of a Diskthat can exist before a merge will automatically occur. Min=3, Max=50,Default=5  MergeMode: Mode to place the version in after amerge has occurred. Values are: 0 (Production), 1 (Test) and 2 (Maintenance).Min=0, Max=2, Default=2  DatabaseServerName: Read-only name of the databaseserver.  DatabaseInstanceName: Read-only name of the databaseinstance.  DatabaseName: Read-only name of the database.  FailoverPartnerServerName: Read-only name of thedatabase server.  FailoverPartnerInstanceName: Read-only name of thedatabase server instance.  MultiSubnetFailover: Read-only DatabaseMultiSubnetFailover value  Role: Read-only Role of the user for this item. 100is Farm Administrator, and 999 is read-only. Default=999  PvsFarm[]: If successful, the PvsFarm object(s) arereturned.", 
            "title": "Get-PvsFarm"
        }, 
        {
            "location": "/#example-1-get-pvsfarm", 
            "text": "Get the PvsFarm.  Get-PvsFarm", 
            "title": "EXAMPLE 1: Get PvsFarm"
        }, 
        {
            "location": "/#get-pvsfarmview", 
            "text": "Get the fields for a Farm View or all Farm Views inthe Farm. All Farm Views are returned if no parameters are passed.  One of these optional  Guid[] Guid or FarmViewId: GUID of the Farm View toGet.  string[] Name or FarmViewName: Name of the Farm Viewto Get.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  FarmViewId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or FarmViewId: Read-only GUID that uniquelyidentifies this Farm View.  Name or FarmViewName: name of the Farm View. MaxLength=50  Description: User description. Default=\"\"Max Length=250  DeviceCount: Read-only count of Devices in this FarmView. Default=0  ActiveDeviceCount: Read-only count of active Devicesin this Farm View. Default=0  MakActivateNeededCount: Read-only count of activeDevices that need MAK activation in this Farm View. Default=0  PvsFarmView[]: If successful, the PvsFarmViewobject(s) are returned.", 
            "title": "Get-PvsFarmView"
        }, 
        {
            "location": "/#example-1-get-pvsfarmview-for-farm", 
            "text": "Get all PvsFarmView for the Farm.  Get-PvsFarmView", 
            "title": "EXAMPLE 1: Get PvsFarmView for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsfarmview", 
            "text": "Get the PvsFarmView for the FarmView namedtheFarmView.  Get-PvsFarmView -Name theFarmView", 
            "title": "EXAMPLE 2: Get PvsFarmView"
        }, 
        {
            "location": "/#get-pvsgroup", 
            "text": "Get the fields for the Groups for the user or theSystem.  Optional  string[] Domain: Domain of user (may be the name ofthe local computer).  string[] User: Name of user.  SwitchParameter AdGroupsEnabled: Get ActiveDirectory groups, when set to true. Get Windows groups, when set to false. Ifnot included, the Farm AdGroupsEnabled setting is used.  If only selected fields are needed, pass them in theFields parameter as a string array.  Name: Name of the Group.  Guid: GUID of the Active Directory group.00000000-0000-0000-0000-000000000000 for Windows groups.  PvsGroup[]: If successful, the PvsGroup object(s)are returned.", 
            "title": "Get-PvsGroup"
        }, 
        {
            "location": "/#example-1-get-pvsgroup-for-system", 
            "text": "Get all PvsGroup for the System.  Get-PvsGroup", 
            "title": "EXAMPLE 1: Get PvsGroup for System"
        }, 
        {
            "location": "/#example-2-get-pvsgroup-for-user", 
            "text": "Get all the PvsGroup in the Domain named theDomainfor the User named theUser.  Get-PvsGroup -Domain theDomain -User theUser", 
            "title": "EXAMPLE 2: Get PvsGroup for User"
        }, 
        {
            "location": "/#example-3-get-active-directory-pvsgroup", 
            "text": "Get all the Active Directory PvsGroup in the System.  Get-PvsGroup -AdGroupsEnabled", 
            "title": "EXAMPLE 3: Get Active Directory PvsGroup"
        }, 
        {
            "location": "/#example-4-get-windows-groups-pvsgroup", 
            "text": "Get all the Windows Groups PvsGroup in the System.  Get-PvsGroup -AdGroupsEnabled:$false", 
            "title": "EXAMPLE 4: Get Windows Groups PvsGroup"
        }, 
        {
            "location": "/#get-pvslocalserver", 
            "text": "Return one record with the local server's NetBiosname  PvsLocalServer[]: If successful, the PvsLocalServerobject(s) are returned.", 
            "title": "Get-PvsLocalServer"
        }, 
        {
            "location": "/#example-1-get-pvslocalserver", 
            "text": "Get the PvsLocalServer for the PVS SoapServerconnected to.  Get-PvsLocalServer", 
            "title": "EXAMPLE 1: Get PvsLocalServer"
        }, 
        {
            "location": "/#get-pvsmaintenanceversionexists", 
            "text": "Return true if the if the DiskLocator has amaintenance version, false otherwise.  This required  Guid Guid or DiskLocatorId: DiskLocator GUID, to seeif it has a maintenance version.  or this required ; resolution  string Name or DiskLocatorName: DiskLocator name, tosee if it has a maintenance version.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  One of these resolutions when needed  Guid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId  Boolean: If successful, $true or $false is returned.", 
            "title": "Get-PvsMaintenanceVersionExists"
        }, 
        {
            "location": "/#example-1-get-pvsmaintenanceversionexists-for-name", 
            "text": "Get-PvsMaintenanceVersionExists -Name theDiskLocator-SiteName theSite -StoreName theStore  Guid can be used instead of Name so that the SiteNameor SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Get-PvsMaintenanceVersionExists for Name"
        }, 
        {
            "location": "/#get-pvsminimumlastautoadddevicenumber", 
            "text": "Get the minimum that the Device Number of the lastAuto Added Device can be.  This required  Guid CollectionId: GUID of the Collection to get theMinimum LastAutoAddDeviceNumber for.  or this required ; resolution  string CollectionName: Name of the Collection to getthe Minimum LastAutoAddDeviceNumber for.  Optional  string AutoAddPrefix: The string put before theDevice Number for Auto Add.  string AutoAddSuffix: The string put after theDevice Number for Auto Add.  uint AutoAddNumberLength: The maximum length of theDevice Number for Auto Add. This length plus the AutoAddPrefix length plus theAutoAddSuffix length must be less than 16.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  CollectionId  UInt32: If successful, the numeric value is returned", 
            "title": "Get-PvsMinimumLastAutoAddDeviceNumber"
        }, 
        {
            "location": "/#example-1-get-pvsminimumlastautoadddevicenumber", 
            "text": "This example gets the highest auto-add number usedso far for a PvsDevice that starts with the AutoAddPrefix and AutoAddSuffix ofthe PVsCollection.  Get-PvsMinimumLastAutoAddDeviceNumber-CollectionName theCollection -SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Get-PvsMinimumLastAutoAddDeviceNumber"
        }, 
        {
            "location": "/#example-2-get-pvsminimumlastautoadddevicenumber-for-autoaddprefix-withautoaddsuffix-and-autoaddnumberlength", 
            "text": "This example gets the highest auto-add number usedso far for a PvsDevice with name length up to 10 characters and starts with theAutoAddPrefix and AutoAddSuffix specified.  Get-PvsMinimumLastAutoAddDeviceNumber -CollectionNametheCollection -SiteName theSite -AutoAddPrefix \"P\" -AutoAddSuffix\"S\" -AutoAddNumberLength 10  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 2: Get-PvsMinimumLastAutoAddDeviceNumber for AutoAddPrefix withAutoAddSuffix and AutoAddNumberLength"
        }, 
        {
            "location": "/#get-pvsmounteddisk", 
            "text": "Get the mounted disk, if there is one.  One of these optional  Guid ServerId: GUID of the Server.  string ServerName: Name of the Server.  One of these optional  Guid StoreId: GUID of the Store.  string StoreName: Name of the Store.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId or StoreId  PvsDiskLocator: If successful, the mappedPvsDiskLocator is returned.", 
            "title": "Get-PvsMountedDisk"
        }, 
        {
            "location": "/#example-1-get-pvsmounteddisk", 
            "text": "This example gets the PvsMappedDisk. If no disk ismapped, null is returned.  $thePvsDiskLocator = Get-PvsMappedDisk  if ($thePvsDiskLocator -ne $null)  {  $thePvsDiskLocator.Name    #display the name of the mapped PvsDiskLocator  }", 
            "title": "EXAMPLE 1: Get-PvsMountedDisk"
        }, 
        {
            "location": "/#example-2-get-pvsmounteddisk-for-servername", 
            "text": "This example gets any mapped disk for theServerName. If no disk is mapped, null is returned.  $thePvsDiskLocator = Get-PvsMappedDisk -ServerNametheServer  if ($thePvsDiskLocator -ne $null)  {  $thePvsDiskLocator.Name    #display the name of the mapped PvsDiskLocator  }", 
            "title": "EXAMPLE 2: Get-PvsMountedDisk for ServerName"
        }, 
        {
            "location": "/#example-3-get-pvsmounteddisk-for-storename", 
            "text": "This example gets any mapped disk for the StoreName.If no disk is mapped, null is returned.  $thePvsDiskLocator = Get-PvsMappedDisk -StoreNametheStore  if ($thePvsDiskLocator -ne $null)  {  $thePvsDiskLocator.Name    #display the name of the mapped PvsDiskLocator  }", 
            "title": "EXAMPLE 3: Get-PvsMountedDisk for StoreName"
        }, 
        {
            "location": "/#get-pvsmounteddriveletter", 
            "text": "If there is currently a Mounted Drive, return theLetter of the Drive.  String: If successful, the String value is returned.", 
            "title": "Get-PvsMountedDriveLetter"
        }, 
        {
            "location": "/#example-1-get-pvsmounteddriveletter", 
            "text": "This example gets any mapped disk drive letter. Ifno disk is mapped, a string with length greater than 0 is returned.  $theDriveLetter = Get-PvsMappedDisk  if ($theDriveLetter -ne $null -and$theDriveLetter.length -gt 0)  {  $theDriveLetter    # display thedrive letter  }", 
            "title": "EXAMPLE 1: Get-PvsMountedDriveLetter"
        }, 
        {
            "location": "/#get-pvsnewdiskversion", 
            "text": "Get new Disk versions for the Store on the Serverspecified.  One of these required  Guid[] ServerId: GUID of the Server to look for newDisk versions.  string[] ServerName: Name of the Server to look fornew Disk versions.  One of these required  Guid[] StoreId: GUID of the Store that the Serverservices to look for new Disk versions.  string[] StoreName: Name of the Store that theServer services to look for new Disk versions.  Optional  SwitchParameter AutoAddEnabled: If -AutoAddEnabledis specified, undefined Disk versions found will be automatically added.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId or StoreId  If only selected fields are needed, pass them in theFields parameter as a string array.  Name: Name of the disk file without the extension.  Status: Status of the disk file. Values are: 0(Valid), 1 (Missing Properties File), 2 (Access Denied), 3 (Access Denied andMissing Properties File), 4 (Invalid Disk File), 5 (Manifest Invalid)  PvsNewDiskVersion[]: If successful, thePvsNewDiskVersion object(s) are returned.", 
            "title": "Get-PvsNewDiskVersion"
        }, 
        {
            "location": "/#example-1-get-pvsnewdiskversion", 
            "text": "Get all PvsNewDiskVersion in the Store namedtheStore using the Server named theServer.  Get-PvsNewDiskVersion -ServerName theServer-StoreName theStore", 
            "title": "EXAMPLE 1: Get PvsNewDiskVersion"
        }, 
        {
            "location": "/#example-2-get-pvsnewdiskversion-with-autoadd", 
            "text": "Get all PvsNewDiskVersion and Auto Adds them in theStore named theStore using the Server named theServer.  Get-PvsNewDiskVersion -ServerName theServer-StoreName theStore -AutoAddEnabled", 
            "title": "EXAMPLE 2: Get PvsNewDiskVersion with AutoAdd"
        }, 
        {
            "location": "/#get-pvsserver", 
            "text": "Get the fields for a Server, all Servers in a Sitethat use a Store, service a DiskLocator, or for the whole Farm. All Servers arereturned if no parameters are passed.  One of these optional  Guid[] Guid or ServerId: GUID of the Server to Get.  string[] Name or ServerName: Name of the Server toGet.  Guid[] SiteId: GUID of the Site to Get all Servers.  string[] SiteName: Name of the Site to Get allServers.  Guid[] DiskLocatorId: GUID of the Disk Locator toGet all Servers.  or this optional ; resolution  string[] DiskLocatorName: Name of the Disk LocatorFile to Get all Servers.  One of these optional ; resolutions  Guid[] StoreId: GUID of the Store to Get all Servers.  string[] StoreName: Name of the Store to Get allServers.  Optional  SwitchParameter All: If -All is specified, withStoreId or StoreName all Servers for the Store including ones with invalidpaths will be returned.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to Get all Servers.  string[] SiteName: Name of the Site to Get allServers.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store to Get allServers.  string[] StoreName: Name of the Store to Get allServers.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId, SiteId, DiskLocatorId or StoreId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or ServerId: Read-only GUID that uniquelyidentifies this Server.  Name or ServerName: Computer name with no spaces.ASCII computer name characters Max Length=21  SiteId: GUID of the Site this Server is to be amember of. It is not used with SiteName.  SiteName: Name of the Site this Server is to be amember of. It is not used with SiteId.  Description: User description. Default=\"\"Max Length=250  AdMaxPasswordAge: Number of days before a passwordexpires. Min=1, Max=30, Default=7  LicenseTimeout: Amount of seconds before a licensetimes out. Min=15, Max=300, Default=30  VDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0  FirstPort: Number of the first UDP port for use bythe Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910  LastPort: Number of the last UDP port for use by theStream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930  ThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs)  < = 1000.Min=1, Max=60, Default=8  BuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24  ServerCacheTimeout: Number of seconds to wait beforeconsidering another Server is down. Min=5, Max=60, Default=8  IoBurstSize: Number of bytes read/writes can send ina burst of packets. Required that IoBurstSize/(MaxTransmissionUnits-76) < =32.Min=4096, Max=61440, Default=32768  MaxTransmissionUnits: Ethernet maximum transmissionunit size for the protocol for use for Server and Device. Required thatIoBurstSize/(MaxTransmissionUnits-76) < =32. Min=502, Max=16426, Default=1506  MaxBootDevicesAllowed: Maximum number of Devicesallowed to boot simultaneously. Min=1, Max=1000, Default=500  MaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60  BootPauseSeconds: Number of seconds that a Devicewill pause during login if its server busy. Min=1, Max=60, Default=10  AdMaxPasswordAgeEnabled: Age the password, when setto true. Default=false  EventLoggingEnabled: Enable event logging, when setto true. Default=false  NonBlockingIoEnabled: Use non-Blocking IO, when setto true. Default=true  Role: Read-only Role of the user for this item. 100is Farm Administrator, and 200 is Site Administrator. Default=999  Ip: One or more streaming ip addresses.  InitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000,Default=50  InitialTransactionConnectionPoolSize: Initial sizeof database connection pool for transactional queries. Min=1, Max=1000,Default=50  MaxQueryConnectionPoolSize: Maximum size of databaseconnection pool for non-transactional queries. Min=1, Max=32767, Default=1000  MaxTransactionConnectionPoolSize: Maximum size ofdatabase connection pool for transactional queries. Min=1, Max=32767,Default=1000  RefreshInterval: Interval, in number of seconds, theserver should wait before refreshing settings. If set to 0, unused databaseconnections are never released. Min=0, Max=32767, Default=300  UnusedDbConnectionTimeout: Interval, in number ofseconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300  BusyDbConnectionRetryCount: Number of times a faileddatabase connection will be retried. Min=0, Max=32767, Default=2  BusyDbConnectionRetryInterval: Interval, in numberof milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25  LocalConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are local. A value of 0 disables thefeature. Min=0, Max=128, Default=4  RemoteConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are remote. A value of 0 disables thefeature. Min=0, Max=128, Default=4  RamDiskIpAddress: IP address to use for transferringthe RAM Disk. When equal to 0.0.0.0 the server IP is used with the first partreplaced with 233. Default=0.0.0.0  RamDiskTimeToLive: Time to live for the invitationpacket sent to Devices. Min=1, Max=255, Default=1  RamDiskInvitationType: Either false for Fixed, ortrue for Variable. Default=false  RamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10  Active: 1 if the Server is currently active, 2 ifunknown, and 0 otherwise. Min=0, Max=2, Default=0  LogLevel: Level to perform logging at. Values are: 0(None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6 (Trace).Min=0, Max=6, Default=4  LogFileSizeMax: Maximum size log files can reach inMegabytes. Min=1, Max=50, Default=5  LogFileBackupCopiesMax: Maximum number of log filebackups. Min=1, Max=50, Default=4  PowerRating: A strictly relative rating of thisServer's capabilities when compared to other Servers in the Store(s) it belongstoo; can be used to help tune load balancing. Min=0.1, Max=1000, Default=1  ServerFqdn: Read-only fully qualified domain name.Default=\"\" Max Length=1024  ManagementIp: IP address used for management communicationsbetween Servers. Default=0.0.0.0  LastCeipUploadAttempt: Time that this server lastattempted a CEIP upload. Default=Empty  LastBugReportAttempt: Time that this server lastattempted to upload or generate a bug report bundle. Default=Empty  LastBugReportStatus: Status of the last bug reporton this server. Default=\"\" Max Length=250  LastBugReportResult: Status of the last bug reporton this server. Default=\"\" Max Length=4000  LastBugReportSummary: Summary of the last bug reporton this server. Default=\"\" Max Length=250  PvsServer[]: If successful, the PvsServer object(s)are returned.", 
            "title": "Get-PvsServer"
        }, 
        {
            "location": "/#example-1-get-pvsserver-for-farm", 
            "text": "Get all PvsServer for the Farm.  Get-PvsServer", 
            "title": "EXAMPLE 1: Get PvsServer for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsserver-for-site", 
            "text": "Get all PvsServer for the Site named theSite.  Get-PvsServer -SiteName theSite", 
            "title": "EXAMPLE 2: Get PvsServer for Site"
        }, 
        {
            "location": "/#example-3-get-pvsserver-for-site-and-store", 
            "text": "Get all PvsServer for the Site named theSite andStore named theStore.  Get-PvsServer -SiteName theSite -StoreName theStore", 
            "title": "EXAMPLE 3: Get PvsServer for Site and Store"
        }, 
        {
            "location": "/#example-4-get-pvsserver-for-disklocator", 
            "text": "Get the PvsServer for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.  Get-PvsServer -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Get PvsServer for DiskLocator"
        }, 
        {
            "location": "/#example-5-get-pvsserver-for-server", 
            "text": "Get the PvsServer for the Server named theServer.  Get-PvsServer -Name theServer", 
            "title": "EXAMPLE 5: Get PvsServer for Server"
        }, 
        {
            "location": "/#example-6-get-pvsserver-not-active-and-start", 
            "text": "Get all PvsServer that are not Active and then Startthem.  Get-PvsServer -Fields Active | Where-Object{$_.Active -eq 0} | Start-PvsStreamService  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 6: Get PvsServer Not Active and Start"
        }, 
        {
            "location": "/#get-pvsserverbiosbootstrap", 
            "text": "Oem Only: Get the bootstrap fields for the Serverdell_bios.bin BIOS bootstrap file.  One of these required  Guid[] Guid or ServerId: GUID of the Server to Getthe dell_bios.bin BIOS bootstrap file from.  string[] Name or ServerName: Name of the Server toGet the dell_bios.bin BIOS bootstrap file from.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId  If only selected fields are needed, pass them in theFields parameter as a string array.  Enabled: Automatically update the BIOS on the targetdevice with these setting when set to true, otherwise do not use thesesettings. Default=false  DhcpEnabled: Use DHCP to retrieve target device IPwhen set to true, otherwise use the static domain, dnsIpAddresstrue anddnsIpAddress2 settings. Default=true  Lookup: Use DNS to find the Server when set to truewith the ServerName host value, otherwise use the bootservertrue_Ip,bootservertrue_Port, bootserver2_Ip, bootserver2_Port, bootserver3_Ip,bootserver3_Port, bootserver4_Ip, and bootserver4_Port settings. Default=true  VerboseMode: Display verbose diagnostic informationwhen set to true. Default=false  InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false  PaeMode: PAE mode (use if PAE enabled in boot.ini oftarget device) when set to true. Default=false  BootFromHdOnFail: For network recovery reboot tohard drive when set to true, restore network connection when set to false.Default=false  RecoveryTime: When bootFromHdOnFail is 1, this isthe number of seconds to wait before reboot to hard drive. Min=10, Max=60000,Default=50  PollingTimeout: Login polling timeout in milliseconds.Min=1000, Max=60000, Default=5000  GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000  Name or ServerName: Host to use for DNS lookup. Onlyused when Lookup is true. Default=IMAGESERVER1  Bootserver1_Ip: 1st boot server IP. Only used whenLookup is false.  Bootserver1_Port: 1st boot server port. Only usedwhen Lookup is false. Min=1025, Max=65536, Default=6910  Bootserver2_Ip: 2nd boot server IP. Only used whenLookup is false. Default=0.0.0.0  Bootserver2_Port: 2nd boot server port. Only usedwhen Lookup is false. Min=1025, Max=65536, Default=6910  Bootserver3_Ip: 3rd boot server IP. Only used whenLookup is false. Default=0.0.0.0  Bootserver3_Port: 3rd boot server port. Only usedwhen Lookup is false. Min=1025, Max=65536, Default=6910  Bootserver4_Ip: 4th boot server IP. Only used whenLookup is false. Default=0.0.0.0  Bootserver4_Port: 4th boot server port. Only usedwhen Lookup is false. Min=1025, Max=65536, Default=6910  Domain: Domain of the primary and secondary DNSservers. Only used when DhcpEnabled is false.  DnsIpAddress1: Primary DNS server IP. Only used whenDhcpEnabled is false.  DnsIpAddress2: Secondary DNS server IP. Only usedwhen DhcpEnabled is false.  PvsServerBiosBootstrap[]: If successful, the PvsServerBiosBootstrapobject(s) are returned.", 
            "title": "Get-PvsServerBiosBootstrap"
        }, 
        {
            "location": "/#example-1-get-pvsserverbiosbootstrap-for-server", 
            "text": "Get all PvsServerBiosBootstrap for the Server namedtheServer.  Get-PvsServerBiosBootstrap -Name theServer", 
            "title": "EXAMPLE 1: Get PvsServerBiosBootstrap for Server"
        }, 
        {
            "location": "/#get-pvsserverbootstrap", 
            "text": "Get the bootstrap fields for the Server and namedbootstrap file specified.  One of these required  Guid[] Guid or ServerId: GUID of the Server to Getthe named bootstrap file from.  string[] ServerName: Name of the Server to Get thenamed bootstrap file from.  This required  string[] Name: Name of the bootstrap file.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  (ServerId and Name) or ServerId  If only selected fields are needed, pass them in theFields parameter as a string array.  Bootserver1_Ip: 1st boot server IP.  Bootserver1_Netmask: 1st boot server netmask.Default=0.0.0.0  Bootserver1_Gateway: 1st boot server gateway.Default=0.0.0.0  Bootserver1_Port: 1st boot server port. Min=1025,Max=65536, Default=6910  Bootserver2_Ip: 2nd boot server IP. Default=0.0.0.0  Bootserver2_Netmask: 2nd boot server netmask.Default=0.0.0.0  Bootserver2_Gateway: 2nd boot server gateway.Default=0.0.0.0  Bootserver2_Port: 2nd boot server port. Min=1025,Max=65536, Default=6910  Bootserver3_Ip: 3rd boot server IP. Default=0.0.0.0  Bootserver3_Netmask: 3rd boot server netmask.Default=0.0.0.0  Bootserver3_Gateway: 3rd boot server gateway.Default=0.0.0.0  Bootserver3_Port: 3rd boot server port. Min=1025,Max=65536, Default=6910  Bootserver4_Ip: 4th boot server IP. Default=0.0.0.0  Bootserver4_Netmask: 4th boot server netmask.Default=0.0.0.0  Bootserver4_Gateway: 4th boot server gateway.Default=0.0.0.0  Bootserver4_Port: 4th boot server port. Min=1025,Max=65536, Default=6910  VerboseMode: Display verbose diagnostic informationwhen set to true. Default=false  InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false  PaeMode: PAE mode (use if PAE enabled in boot.ini oftarget device) when set to true. Default=false  BootFromHdOnFail: For network recovery reboot tohard drive when set to true, restore network connection when set to false.Default=false  RecoveryTime: When bootFromHdOnFail is 1, this isthe number of seconds to wait before reboot to hard drive. Min=10, Max=60000,Default=50  PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000  GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000  PvsServerBootstrap[]: If successful, thePvsServerBootstrap object(s) are returned.", 
            "title": "Get-PvsServerBootstrap"
        }, 
        {
            "location": "/#example-1-get-pvsserverbootstrap", 
            "text": "Get the PvsServerBootstrap for the Bootstrap namedtheBootstrap on the Server named theServer.  Get-PvsServerBootstrap -ServerName theServer -NametheBootstrap", 
            "title": "EXAMPLE 1: Get PvsServerBootstrap"
        }, 
        {
            "location": "/#get-pvsserverbootstrapname", 
            "text": "Get the bootstrap names for a Server.  One of these required  Guid[] Guid or ServerId: GUID of the Server to Getbootstrap names for.  string[] Name or ServerName: Name of the Server toGet bootstrap names for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId  PvsServerBootstrapName[]: If successful, thePvsServerBootstrapName object(s) are returned.", 
            "title": "Get-PvsServerBootstrapName"
        }, 
        {
            "location": "/#example-1-get-pvsserverbootstrapname-for-server", 
            "text": "Get all PvsServerBootstrapName for the Server namedtheServer.  Get-PvsServerBootstrapName -Name theServer", 
            "title": "EXAMPLE 1: Get PvsServerBootstrapName for Server"
        }, 
        {
            "location": "/#get-pvsservercount", 
            "text": "Get count of Servers in a Site.  One of these required  Guid Guid or SiteId: GUID of the Site to get theServer Count of.  string Name or SiteName: Name of the Site to get theServer Count of.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  SiteId  UInt32: If successful, the numeric value is returned", 
            "title": "Get-PvsServerCount"
        }, 
        {
            "location": "/#example-1-get-pvsservercount-returns-the-number-or-count-of-pvsserver-inpvssite", 
            "text": "Get-PvsServerCount -Name theSite", 
            "title": "EXAMPLE 1: Get-PvsServerCount Returns the Number (or Count) of PvsServer inPvsSite"
        }, 
        {
            "location": "/#get-pvsserverinfo", 
            "text": "Get the fields and status for a Server, all Serversin a Site that use a Store, service a DiskLocator, or for the whole Farm. AllServers are returned if no parameters are passed.  One of these optional  Guid[] Guid or ServerId: GUID of the Server to Get.  string[] Name or ServerName: Name of the Server toGet.  Guid[] SiteId: GUID of the Site to Get all Servers.  string[] SiteName: Name of the Site to Get allServers.  Guid[] DiskLocatorId: GUID of the Disk Locator toGet all Servers.  or this optional ; resolution  string[] DiskLocatorName: Name of the Disk LocatorFile to Get all Servers.  One of these optional ; resolutions  Guid[] StoreId: GUID of the Store to Get allServers.  string[] StoreName: Name of the Store to Get allServers.  Optional  SwitchParameter All: If -All is specified, withStoreId or StoreName all Servers for the Store including ones with invalidpaths will be returned.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to Get all Servers.  string[] SiteName: Name of the Site to Get all Servers.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store to Get allServers.  string[] StoreName: Name of the Store to Get allServers.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId, SiteId, DiskLocatorId or StoreId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or ServerId: Read-only GUID that uniquely identifiesthis Server.  Name or ServerName: Computer name with no spaces.ASCII computer name characters Max Length=21  SiteId: GUID of the Site this Server is to be amember of. It is not used with SiteName.  SiteName: Name of the Site this Server is to be a memberof. It is not used with SiteId.  Description: User description. Default=\"\"Max Length=250  AdMaxPasswordAge: Number of days before a passwordexpires. Min=1, Max=30, Default=7  LicenseTimeout: Amount of seconds before a licensetimes out. Min=15, Max=300, Default=30  VDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0  FirstPort: Number of the first UDP port for use bythe Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910  LastPort: Number of the last UDP port for use by theStream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930  ThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs)  < = 1000.Min=1, Max=60, Default=8  BuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24  ServerCacheTimeout: Number of seconds to wait beforeconsidering another Server is down. Min=5, Max=60, Default=8  IoBurstSize: Number of bytes read/writes can send ina burst of packets. Required that IoBurstSize/(MaxTransmissionUnits-76) < =32.Min=4096, Max=61440, Default=32768  MaxTransmissionUnits: Ethernet maximum transmissionunit size for the protocol for use for Server and Device. Required thatIoBurstSize/(MaxTransmissionUnits-76) < =32. Min=502, Max=16426, Default=1506  MaxBootDevicesAllowed: Maximum number of Devicesallowed to boot simultaneously. Min=1, Max=1000, Default=500  MaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60  BootPauseSeconds: Number of seconds that a Devicewill pause during login if its server busy. Min=1, Max=60, Default=10  AdMaxPasswordAgeEnabled: Age the password, when setto true. Default=false  EventLoggingEnabled: Enable event logging, when setto true. Default=false  NonBlockingIoEnabled: Use non-Blocking IO, when setto true. Default=true  Role: Read-only Role of the user for this item. 100is Farm Administrator, and 200 is Site Administrator. Default=999  Ip: One or more streaming ip addresses.  InitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000,Default=50  InitialTransactionConnectionPoolSize: Initial sizeof database connection pool for transactional queries. Min=1, Max=1000,Default=50  MaxQueryConnectionPoolSize: Maximum size of databaseconnection pool for non-transactional queries. Min=1, Max=32767, Default=1000  MaxTransactionConnectionPoolSize: Maximum size ofdatabase connection pool for transactional queries. Min=1, Max=32767,Default=1000  RefreshInterval: Interval, in number of seconds, theserver should wait before refreshing settings. If set to 0, unused databaseconnections are never released. Min=0, Max=32767, Default=300  UnusedDbConnectionTimeout: Interval, in number ofseconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300  BusyDbConnectionRetryCount: Number of times a faileddatabase connection will be retried. Min=0, Max=32767, Default=2  BusyDbConnectionRetryInterval: Interval, in numberof milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25  LocalConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are local. A value of 0 disables thefeature. Min=0, Max=128, Default=4  RemoteConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are remote. A value of 0 disables thefeature. Min=0, Max=128, Default=4  RamDiskIpAddress: IP address to use for transferringthe RAM Disk. When equal to 0.0.0.0 the server IP is used with the first partreplaced with 233. Default=0.0.0.0  RamDiskTimeToLive: Time to live for the invitationpacket sent to Devices. Min=1, Max=255, Default=1  RamDiskInvitationType: Either false for Fixed, ortrue for Variable. Default=false  RamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10  Active: 1 if the Server is currently active, 2 ifunknown, and 0 otherwise. Min=0, Max=2, Default=0  LogLevel: Level to perform logging at. Values are: 0(None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6 (Trace).Min=0, Max=6, Default=4  LogFileSizeMax: Maximum size log files can reach inMegabytes. Min=1, Max=50, Default=5  LogFileBackupCopiesMax: Maximum number of log filebackups. Min=1, Max=50, Default=4  PowerRating: A strictly relative rating of thisServer's capabilities when compared to other Servers in the Store(s) it belongstoo; can be used to help tune load balancing. Min=0.1, Max=1000, Default=1  ServerFqdn: Read-only fully qualified domain name.Default=\"\" Max Length=1024  ManagementIp: IP address used for managementcommunications between Servers. Default=0.0.0.0  LastCeipUploadAttempt: Time that this server lastattempted a CEIP upload. Default=Empty  LastBugReportAttempt: Time that this server lastattempted to upload or generate a bug report bundle. Default=Empty  LastBugReportStatus: Status of the last bug reporton this server. Default=\"\" Max Length=250  LastBugReportResult: Status of the last bug reporton this server. Default=\"\" Max Length=4000  LastBugReportSummary: Summary of the last bug reporton this server. Default=\"\" Max Length=250  ContactIp: Read-only contact IP for the Server.  ContactPort: Read-only contact port for the Server.  DeviceCount: Read-only count of Devices. Default=0  PvsServerInfo[]: If successful, the PvsServerInfoobject(s) are returned.", 
            "title": "Get-PvsServerInfo"
        }, 
        {
            "location": "/#example-1-get-pvsserverinfo-for-farm", 
            "text": "Get all PvsServerInfo for the Farm.  Get-PvsServerInfo", 
            "title": "EXAMPLE 1: Get PvsServerInfo for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsserverinfo-for-site", 
            "text": "Get all PvsServerInfo for the Site named theSite.  Get-PvsServerInfo -SiteName theSite", 
            "title": "EXAMPLE 2: Get PvsServerInfo for Site"
        }, 
        {
            "location": "/#example-3-get-pvsserverinfo-for-site-and-store", 
            "text": "Get all PvsServerInfo for the Site named theSite andStore named theStore.  Get-PvsServerInfo -SiteName theSite -StoreNametheStore", 
            "title": "EXAMPLE 3: Get PvsServerInfo for Site and Store"
        }, 
        {
            "location": "/#example-4-get-pvsserverinfo-for-disklocator", 
            "text": "Get the PvsServerInfo for the DiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore.  Get-PvsServerInfo -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Get PvsServerInfo for DiskLocator"
        }, 
        {
            "location": "/#example-5-get-pvsserverinfo-for-server", 
            "text": "Get the PvsServerInfo for the Server named theServer.  Get-PvsServerInfo -Name theServer", 
            "title": "EXAMPLE 5: Get PvsServerInfo for Server"
        }, 
        {
            "location": "/#example-6-get-pvsserverinfo-not-active-and-start", 
            "text": "Get all PvsServerInfo that are not Active and thenStart them.  Get-PvsServerInfo -Fields Active | Where-Object{$_.Active -eq 0} | Start-PvsStreamService  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 6: Get PvsServerInfo Not Active and Start"
        }, 
        {
            "location": "/#get-pvsservername", 
            "text": "Return the name of the Server the SoapServer isrunning on.  String: If successful, the String value is returned.", 
            "title": "Get-PvsServerName"
        }, 
        {
            "location": "/#example-1-get-pvsservername", 
            "text": "Get-PvsServerName", 
            "title": "EXAMPLE 1: Get-PvsServerName"
        }, 
        {
            "location": "/#get-pvsserverstatus", 
            "text": "Get the Server Status fields for a Server.  One of these required  Guid[] Guid or ServerId: GUID of the Server to Getstatus for.  string[] Name or ServerName: Name of Server to Getstatus for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or ServerId: Read-only GUID of the Server. Canbe used with Get Server.  Name or ServerName: Read-only Name of the Server.Can be used with Get Server.  Ip: Read-only contact IP for the Server.  Port: Read-only contact port for the Server.  DeviceCount: Read-only count of Devices. Default=0  Status: Status of the server, 0 if down, 1 if up and2 if unknown. Default=0  PvsServerStatus[]: If successful, thePvsServerStatus object(s) are returned.", 
            "title": "Get-PvsServerStatus"
        }, 
        {
            "location": "/#example-1-get-pvsserverstatus-for-server", 
            "text": "Get the PvsServerStatus for the Server namedtheServer.  Get-PvsServerStatus -Name theServer", 
            "title": "EXAMPLE 1: Get PvsServerStatus for Server"
        }, 
        {
            "location": "/#get-pvsserverstore", 
            "text": "Get the directory and cache paths of a Server forone or all Stores.  One of these required  Guid[] ServerId: GUID of a Server.  string[] ServerName: Name of a Server.  One of these optional  Guid[] StoreId: GUID of the Store.  string[] StoreName: Name of the Store.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  (ServerId and StoreId), ServerId or StoreId  If only selected fields are needed, pass them in theFields parameter as a string array.  StoreId: GUID of the Store. StoreName can be usedinstead.  StoreName: Name of the Store. StoreId can be usedinstead.  ServerId: GUID of the server that uses the Store.ServerName can be used instead.  ServerName: Name of the server that uses the Store.ServerId can be used instead.  Path: Directory path that the Server uses to accessthe Store. Default=\"\" Max Length=255  CachePath: Cache path(s) that the Server uses withthe Store. If none are specified the caches will be placed in the StorecachePath. Default=None  PvsServerStore[]: If successful, the PvsServerStoreobject(s) are returned.", 
            "title": "Get-PvsServerStore"
        }, 
        {
            "location": "/#example-1-get-pvsserverstore-for-server", 
            "text": "Get all PvsServerStore for the Server namedtheServer.  Get-PvsServerStore -ServerName theServer", 
            "title": "EXAMPLE 1: Get PvsServerStore for Server"
        }, 
        {
            "location": "/#example-2-get-pvsserverstore-for-server-and-store", 
            "text": "Get the PvsServerStore for the Server namedtheServer and Store named theStore.  Get-PvsServerStore -ServerName theServer -StoreNametheStore", 
            "title": "EXAMPLE 2: Get PvsServerStore for Server and Store"
        }, 
        {
            "location": "/#get-pvsserverstoreactivedevicecount", 
            "text": "Get the count of Devices currently connected to anyvdisk served from the Store by the Server.  One of these required  Guid ServerId: GUID of the Server.  string ServerName: Name of the Server.  One of these required  Guid StoreId: GUID of the Store.  string StoreName: Name of the Store.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId or StoreId  UInt32: If successful, the numeric value is returned", 
            "title": "Get-PvsServerStoreActiveDeviceCount"
        }, 
        {
            "location": "/#example-1-get-pvsserverstoreactivedevicecount-returns-the-number-orcount-of-pvsdevice-served-from-pvsstore-by-pvsserver", 
            "text": "Get-PvsServerStoreActiveDeviceCount -ServerNametheServer -StoreName theStore", 
            "title": "EXAMPLE 1: Get-PvsServerStoreActiveDeviceCount Returns the Number (orCount) of PvsDevice Served from PvsStore by PvsServer"
        }, 
        {
            "location": "/#get-pvssite", 
            "text": "Get the fields for a Site or all Sites. All Sitesare returned if no parameters are passed.  One of these optional  Guid[] Guid or SiteId: GUID of the Site to Get.  string[] Name or SiteName: Name of the Site to Get.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  SiteId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or SiteId: Read-only GUID that uniquelyidentifies this Site.  Name or SiteName: Name of the Site. Max Length=50  Description: User description. Default=\"\"Max Length=250  DefaultCollectionId: GUID of the Collection to placenew Devices into automatically. Not used with defaultCollectionName.Default=00000000-0000-0000-0000-000000000000  DefaultCollectionName: Name of the Collection toplace new Devices into automatically. Not used with DefaultCollectionId. Default=\"\"  InventoryFilePollingInterval: The number of secondsbetween polls for Disk changes in the Stores. Min=1, Max=600, Default=60  EnableDiskUpdate: True when Disk Updated is enabledfor the Site, false otherwise. Default=false  DiskUpdateServerId: GUID of the Disk Update Serverfor the Site. Not used with DiskUpdateServerName.Default=00000000-0000-0000-0000-000000000000  DiskUpdateServerName: Name of the Disk Update Serverfor the Site. Not used with DiskUpdateServerId. Default=\"\"  MakUser: User name used for MAK activation.Default=\"\" Max Length=64  MakPassword: User password used for MAK activation.Default=\"\" Max Length=64  Role: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, and 999 is read-only.Default=999  PvsSite[]: If successful, the PvsSite object(s) arereturned.", 
            "title": "Get-PvsSite"
        }, 
        {
            "location": "/#example-1-get-pvssite-for-farm", 
            "text": "Get all PvsSite for the Farm.  Get-PvsSite", 
            "title": "EXAMPLE 1: Get PvsSite for Farm"
        }, 
        {
            "location": "/#example-2-get-pvssite", 
            "text": "Get the PvsSite for the Site named theSite.  Get-PvsSite -Name theSite", 
            "title": "EXAMPLE 2: Get PvsSite"
        }, 
        {
            "location": "/#get-pvssiteview", 
            "text": "Get the fields for a Site View or all Site Views ina Site or the whole Farm. All Site Views are returned if no parameters arepassed.  One of these optional  Guid[] Guid or SiteViewId: GUID of the Site View toGet.  Guid[] SiteId: GUID of the Site to Get all Views for.  string[] SiteName: Name of the Site to Get all Viewsfor.  or this optional ; resolution  string[] Name or SiteViewName: Name of the Site Viewto Get.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to Get all Viewsfor.  string[] SiteName: Name of the Site to Get all Viewsfor.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  SiteViewId or SiteId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or SiteViewId: Read-only GUID that uniquelyidentifies this Site View.  Name or SiteViewName: Name of the Site View. MaxLength=50  SiteId: GUID of the Site this View is to be a memberof. It is not used with SiteName.  SiteName: Name of the Site this View is to be amember of. It is not used with SiteId.  Description: User description. Default=\"\"Max Length=250  DeviceCount: Read-only count of Devices in this SiteView. Default=0  DeviceWithPVDCount: Read-only count of Devices withPersonal vDisk in this Site View. Default=0  ActiveDeviceCount: Read-only count of active Devicesin this Site View. Default=0  MakActivateNeededCount: Read-only count of activeDevices that need MAK activation in this Site View. Default=0  Role: Read-only Role of the user for this item. 100is Farm Administrator, and 200 is Site Administrator. Default=999  PvsSiteView[]: If successful, the PvsSiteViewobject(s) are returned.", 
            "title": "Get-PvsSiteView"
        }, 
        {
            "location": "/#example-1-get-pvssiteview-for-farm", 
            "text": "Get all PvsSiteView for the Farm.  Get-PvsSiteView", 
            "title": "EXAMPLE 1: Get PvsSiteView for Farm"
        }, 
        {
            "location": "/#example-2-get-pvssiteview-for-site", 
            "text": "Get all PvsSiteView for the Site named theSite.  Get-PvsSiteView -SiteName theSite", 
            "title": "EXAMPLE 2: Get PvsSiteView for Site"
        }, 
        {
            "location": "/#example-3-get-pvssiteview", 
            "text": "Get the PvsSiteView for the SiteView namedtheSiteView in the Site named theSite.  Get-PvsSiteView -Name theSiteView -SiteName theSite  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 3: Get PvsSiteView"
        }, 
        {
            "location": "/#get-pvsstore", 
            "text": "Get the fields for a Store or all Stores for aServer, Site or the Farm. All Stores are returned if no parameters are passed.  One of these optional  Guid[] Guid or StoreId: GUID of the Store to Get.  string[] Name or StoreName: Name of the Store toGet.  Guid[] ServerId: GUID of the Server to Get allStores for.  string[] ServerName: Name of the Server to Get allStores for.  Guid[] SiteId: GUID of the Site to Get all Storesfor.  string[] SiteName: Name of the Site to Get allStores for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  StoreId, ServerId or SiteId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or StoreId: Read-only GUID that uniquelyidentifies this Store.  Name or StoreName: Name of the Store. Max Length=50  SiteId: GUID of the Site where Administrators ofthat Site can change this Store. Not used for Farm Stores. SiteName can be usedinstead. Default=00000000-0000-0000-0000-000000000000  SiteName: Name of the Site where Administrators ofthat Site can change this Store. Not used for Farm Stores. SiteId can be usedinstead. Default=\"\"  Description: User description. Default=\"\"Max Length=250  Path: Default directory path that the Servers use toaccess this Store. Max Length=255  CachePath: Default Cache path(s) that the Serversuse with this Store. If none are specified the caches will be placed in theWriteCache subdirectory of the Store path. Default=None  Role: Read-only Role of the user for this item. 100is Farm Administrator, 200 is Site Administrator, and 999 is read-only.Default=999  PathType: Read-only field indicating if the vdisksare on a server's local hard disk or on a remote share.  PvsStore[]: If successful, the PvsStore object(s)are returned.", 
            "title": "Get-PvsStore"
        }, 
        {
            "location": "/#example-1-get-pvsstore-for-farm", 
            "text": "Get all PvsStore for the Farm.  Get-PvsStore", 
            "title": "EXAMPLE 1: Get PvsStore for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsstore-for-site", 
            "text": "Get all PvsStore for the Site named theSite.  Get-PvsStore -SiteName theSite", 
            "title": "EXAMPLE 2: Get PvsStore for Site"
        }, 
        {
            "location": "/#example-3-get-pvsstore-for-server", 
            "text": "Get all PvsStore for the Server named theServer.  Get-PvsStore -ServerName theServer", 
            "title": "EXAMPLE 3: Get PvsStore for Server"
        }, 
        {
            "location": "/#example-4-get-pvsstore", 
            "text": "Get the PvsStore for the Store named theStore.  Get-PvsStore -Name theStore -SiteName theSite", 
            "title": "EXAMPLE 4: Get PvsStore"
        }, 
        {
            "location": "/#get-pvsstorefreespace", 
            "text": "Get the free megabytes available in the Store.  One of these required ; resolutions  Guid Guid or StoreId: GUID of the Store.  string Name or StoreName: Name of the Store.  One of these resolutions when needed  Guid ServerId: GUID of the Server to use todetermine the free space in the Store.  string ServerName: Name of the Server to use to determinethe free space in the Store.  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  UInt32: If successful, the numeric value is returned", 
            "title": "Get-PvsStoreFreeSpace"
        }, 
        {
            "location": "/#example-1-get-pvsstorefreespace-for-name-with-servername", 
            "text": "Get-PvsStoreFreeSpace -Name theStore -ServerNametheServer", 
            "title": "EXAMPLE 1: Get-PvsStoreFreeSpace for Name with ServerName"
        }, 
        {
            "location": "/#example-2-get-pvsstorefreespace-for-name-with-sitename", 
            "text": "Get-PvsStoreFreeSpace -Name theStore -SiteNametheSite", 
            "title": "EXAMPLE 2: Get-PvsStoreFreeSpace for Name with SiteName"
        }, 
        {
            "location": "/#get-pvsstoresharedorserverpath", 
            "text": "Get the Stores and paths for the ServerNamespecified or Stores with only shared UNC paths.  One of these required  Guid[] SiteId: GUID of a Site used for authorizationcheck.  string[] SiteName: Name of a Site used forauthorization check.  Optional  string[] ServerName: Name of a Server to also getlocal Store paths for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  SiteId  If only selected fields are needed, pass them in theFields parameter as a string array.  StoreId: GUID of the Store.  StoreName: Name of the Store.  Path: Directory path that the Servers use to accessthis Store.  PvsStoreSharedOrServerPath[]: If successful, thePvsStoreSharedOrServerPath object(s) are returned.", 
            "title": "Get-PvsStoreSharedOrServerPath"
        }, 
        {
            "location": "/#example-1-get-pvsstoresharedorserverpath-with-sharded-unc-paths", 
            "text": "Get PvsStoreSharedOrServerPath with shared UNC pathsfor the Farm.  Get-PvsStoreSharedOrServerPath -SiteName theSite", 
            "title": "EXAMPLE 1: Get PvsStoreSharedOrServerPath with Sharded UNC Paths"
        }, 
        {
            "location": "/#example-2-get-pvsstoresharedorserverpath-with-sharded-unc-paths-and-serverlocal-paths", 
            "text": "Get PvsStoreSharedOrServerPath with shared UNC pathsfor the Farm with local paths for the Server named theServer.  Get-PvsStoreSharedOrServerPath -SiteName theSite-StoreName theServer", 
            "title": "EXAMPLE 2: Get PvsStoreSharedOrServerPath with Sharded UNC Paths and ServerLocal Paths"
        }, 
        {
            "location": "/#get-pvstask", 
            "text": "Get the current Task fields for select, or allactive and completed un-cleared tasks.  One of these optional  uint TaskId: ID of the Task to get.  Guid[] SiteId: GUID of the Site to get Tasks for.  string[] SiteName: Name of the Site to get Tasksfor.  Optional  uint State: The TaskState to get Tasks for. Valuesare: 0 (Processing), 1 (Cancelled), and 2 (Complete).  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  TaskId or SiteId  If only selected fields are needed, pass them in theFields parameter as a string array.  TaskId: Unique ID of the task.  SiteId: GUID of the Site that this Task is beingprocessed in. Default=00000000-0000-0000-0000-000000000000  SiteName: Name of the Site that that this Task isbeing processed in.  Handle: Handle to a running function.  ServerFqdn: Qualified name of the server.Default=\"\" Max Length=1024  Ip: IP Address of the remote host.  Port: Port number of the remote service.  StartTime: Time the task was started. Has the dateand time without milliseconds.  ExpirationTime: Time the task record may be removedfrom the database if the task does not complete. Has the date and time withoutmilliseconds.  State: State of the Task. Values are: 0(Processing), 1 (Cancelled), and 2 (Complete). Min=0, Max=2  CommandType: Type of the command. Values are: Add,Delete, Get, Info, Run, RunWithReturn, Set and SetList. Default=\"\"Max Length=13  Command: Command being processed.Default=\"\" Max Length=50  MapiException: Exception result in XML format.Default=\"\"  Results: Result in XML format. Default=\"\"  PvsTask[]: If successful, the PvsTask object(s) arereturned.", 
            "title": "Get-PvsTask"
        }, 
        {
            "location": "/#example-1-get-pvstask-for-farm", 
            "text": "Get all PvsTask for the Farm.  Get-PvsTask", 
            "title": "EXAMPLE 1: Get PvsTask for Farm"
        }, 
        {
            "location": "/#example-2-get-pvstask-for-site", 
            "text": "Get all PvsTask for the Site named theSite.  Get-PvsTask -SiteName theSite", 
            "title": "EXAMPLE 2: Get PvsTask for Site"
        }, 
        {
            "location": "/#example-3-get-pvstask-currently-processing", 
            "text": "Get PvsTask that are currently in Processing statefor the Farm.  Get-PvsTask -State 0", 
            "title": "EXAMPLE 3: Get PvsTask Currently Processing"
        }, 
        {
            "location": "/#example-4-get-pvstask", 
            "text": "Get PvsTask for TaskId 101.  Get-PvsTask -TaskId 101", 
            "title": "EXAMPLE 4: Get PvsTask"
        }, 
        {
            "location": "/#get-pvstaskstatus", 
            "text": "Get the status of a Task in percent complete.  This required  uint TaskId: Id of the Task to get the Status of.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  TaskId  UInt32: If successful, the numeric value is returned", 
            "title": "Get-PvsTaskStatus"
        }, 
        {
            "location": "/#example-1-get-pvstaskstatus-for-start-pvsboot-to-pvstask", 
            "text": "$thePvsTask = Start-PvsBoot -NametheDevice                    #start the task  while ($thePvsTask.State -eq0)                                #while the task is processing  {  %percentFinished = Get-PvsTaskStatus -Object$thePvsTask   # get percent finished  %percentFinished.ToString() + \"%finished\"                 #display percent finished  Start-Sleep -seconds 10                                    #wait 10 seconds more  $thePvsTask = Get-PvsTask -Object$thePvsTask              #get the current PvsTask object  }  if ($thePvsTask.State -eq2)                                   #check to see if completed  {  \"Successful\"  }  else  {  \"Cancelled\"  }", 
            "title": "EXAMPLE 1: Get-PvsTaskStatus for Start-PvsBoot to PvsTask"
        }, 
        {
            "location": "/#example-2-get-pvstaskstatus-for-taskid", 
            "text": "Get-PvsTaskStatus -taskId 101", 
            "title": "EXAMPLE 2: Get-PvsTaskStatus for taskId"
        }, 
        {
            "location": "/#get-pvsundefineddisk", 
            "text": "Get undefined Disks for the Store on the Serverspecified.  One of these required  Guid[] ServerId: GUID of the Server to look forundefined Disks.  string[] ServerName: Name of the Server to look forundefined Disks.  One of these required  Guid[] StoreId: GUID of the Store that the Serverservices to look for undefined Disks.  string[] StoreName: Name of the Store that theServer services to look for undefined Disks.  Optional  SwitchParameter AutoAddEnabled: If -AutoAddEnabledis specified, then undefined Disks found will be automatically added.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId or StoreId  If only selected fields are needed, pass them in theFields parameter as a string array.  Name: Name of the disk file without the extension.  Status: Status of the disk file. Values are: 0(Valid), 1 (Missing Properties File), 2 (Access Denied), 3 (Access Denied andMissing Properties File), 4 (Invalid Disk File), 5 (Manifest Missing orInvalid), 6 (Both VHD and VHDX)  VHDX: If VHDX is true, the format of the image isVHDX. Otherwise it is VHD. Default=false  PvsUndefinedDisk[]: If successful, thePvsUndefinedDisk object(s) are returned.", 
            "title": "Get-PvsUndefinedDisk"
        }, 
        {
            "location": "/#example-1-get-pvsundefineddisk", 
            "text": "Get all PvsUndefinedDisk in the Store named theStoreusing the Server named theServer.  Get-PvsUndefinedDisk -ServerName theServer-StoreName theStore", 
            "title": "EXAMPLE 1: Get PvsUndefinedDisk"
        }, 
        {
            "location": "/#example-2-get-pvsundefineddisk-with-autoadd", 
            "text": "Get all PvsUndefinedDisk and Auto Adds them in theStore named theStore using the Server named theServer.  Get-PvsUndefinedDisk -ServerName theServer-StoreName theStore -AutoAddEnabled", 
            "title": "EXAMPLE 2: Get PvsUndefinedDisk with AutoAdd"
        }, 
        {
            "location": "/#get-pvsupdatetask", 
            "text": "Get the fields for an Update Task or all UpdateTasks in a Site or the whole Farm. All Update Tasks are returned if noparameters are passed.  One of these optional  Guid[] Guid or UpdateTaskId: GUID of the Update Taskto Get.  Guid[] SiteId: GUID of the Site to Get all UpdateTasks for.  string[] SiteName: Name of the Site to Get allUpdate Tasks for.  or this optional ; resolution  string[] Name or UpdateTaskName: Name of the UpdateTask to Get.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to Get all UpdateTasks for.  string[] SiteName: Name of the Site to Get allUpdate Tasks for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  UpdateTaskId or SiteId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or UpdateTaskId: Read-only GUID that uniquelyidentifies this Update Task.  Name or UpdateTaskName: Name of the Update Task. Itis unique within the Site. Max Length=50  SiteId: GUID of the Site that this Update Task is amember of. It is not used with SiteName.  SiteName: Name of the Site that this Update Task isa member of. It is not used with SiteId.  Description: User description. Default=\"\"Max Length=250  Enabled: True when it will be processed, falseotherwise. Default=true  Hour: The hour of the day to perform the task.Min=0, Max=23, Default=0  Minute: The minute of the hour to perform the task.Min=0, Max=59, Default=0  Recurrence: The update will reoccur on thisschedule. 0 = None, 1 = Daily, 2 = Every Weekday, 3 = Weekly, 4 = Monthly Date,5 = Monthly Type. Min=0, Max=5, Default=0  DayMask: Days selected values. 1 = Monday, 2 =Tuesday, 4 = Wednesday, 8 = Thursday, 16 = Friday, 32 = Saturday, 64 = Sunday,128 = Day. Default=0. This is used with Weekly and Monthly Type recurrence.Min=1, Max=255, Default=4  Date: Days of the month. Numbers from 1-31 are theonly valid values. This is used with Monthly Date recurrence.Default=\"\" Max Length=83  MonthlyOffset: When to happen monthly. 0 = None, 1 =First, 2 = Second, 3 = Third, 4 = Forth, 5 = Last. This is used with MonthlyType recurrence. Min=0, Max=5, Default=3  EsdType: Esd to use. Valid values are SCCM or WSUS.If no value, a custom script is run on the client. Default=\"\" MaxLength=50  PreUpdateScript: Script file to run before theupdate starts. Default=\"\" Max Length=255  PreVmScript: Script file to run before the VM isloaded. Default=\"\" Max Length=255  PostUpdateScript: Script file to run after theupdate finishes. Default=\"\" Max Length=255  PostVmScript: Script file to run after the VM isunloaded. Default=\"\" Max Length=255  Domain: Domain to add the Disk Update Device(s) to.If not included, the first Domain Controller found on the Server is used.Default=\"\" Max Length=255  OrganizationUnit: Organizational Unit to add theDisk Update Device(s) to. This parameter is optional. If it is not specified,the device is added to the built in Computers container. Child OU's should bedelimited with forward slashes, e.g. \"ParentOU/ChildOU\". Specialcharacters in an OU name, such as '\"', '#', '+', ',', ';', '>', '=',must be escaped with a backslash. For example, an OU called \"commaIn,TheMiddle\"must be specified as \"commaIn\\,TheMiddle\". The old syntax ofdelimiting child OU's with a comma is still supported, but deprecated. Notethat in this case, the child OU comes first, e.g. \"ChildOU,ParentOU\".Default=\"\" Max Length=255  PostUpdateApprove: Access to place the version inafter the update has occurred. 0 = Production, 1 = Test, 2 = Maintenance.Min=0, Max=2, Default=0  PvsUpdateTask[]: If successful, the PvsUpdateTaskobject(s) are returned.", 
            "title": "Get-PvsUpdateTask"
        }, 
        {
            "location": "/#example-1-get-pvsupdatetask-for-farm", 
            "text": "Get all PvsUpdateTask for the Farm.  Get-PvsUpdateTask", 
            "title": "EXAMPLE 1: Get PvsUpdateTask for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsupdatetask-for-site", 
            "text": "Get all PvsUpdateTask for the Site named theSite.  Get-PvsUpdateTask -SiteName theSite", 
            "title": "EXAMPLE 2: Get PvsUpdateTask for Site"
        }, 
        {
            "location": "/#example-3-get-pvsupdatetask", 
            "text": "Get PvsUpdateTask for UpdateTask named theUpdateTaskin Site named theSite.  Get-PvsUpdateTask -Name theUpdateTask -SiteNametheSite  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 3: Get PvsUpdateTask"
        }, 
        {
            "location": "/#get-pvsuploadceip", 
            "text": "Perform a one time upload of CEIP data. Returnupload Id if successful.  This optional  string OneTimeUpload: If -OneTimeUpload isspecified, perform a one time upload.  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to have confirmationwithout the Confirm parameter.  String: If successful, the String value is returned.", 
            "title": "Get-PvsUploadCeip"
        }, 
        {
            "location": "/#get-pvsversion", 
            "text": "Get the version information.  If only selected fields are needed, pass them in theFields parameter as a string array.  MapiVersion: Version of the system inmajor.minor.point.build format.  DbVersion: Version of the database schema as anumber. Default=0  Type: Type of system. Values are 0 (Normal), 1(OROM), and 2 (Secure). Default=0  DbEdition: Edition of the database. If 'ExpressEdition', monitor dbSize.  DbSize: Size of the database in MB. Monitor thisvalue if the edition is 'Express Edition' and this value is close to reachingthe 4000 MB maximum. Default=0  MapiVersionNumber: Internal version number of thesystem. It is a number that is increaed by 100 for each major and minorrelease. Point releases are the numbers between each 100. Value is 0 when thesystem does not support MapiVersionNumber. Default=0  PvsVersion[]: If successful, the PvsVersionobject(s) are returned.", 
            "title": "Get-PvsVersion"
        }, 
        {
            "location": "/#example-1-get-pvsversion", 
            "text": "Get the PvsVersion for the PVS SoapServer connectedto.  Get-PvsVersion", 
            "title": "EXAMPLE 1: Get PvsVersion"
        }, 
        {
            "location": "/#example-2-get-the-pvsversion-mapiversion", 
            "text": "Get the PvsVersion for the PVS SoapServer connectedto.  Get-PvsVersion -Fields MapiVersion  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Get the PvsVersion MapiVersion"
        }, 
        {
            "location": "/#get-pvsvirtualhostingpool", 
            "text": "Get the fields for a Virtual Hosting Pool or allVirtual Hosting Pools in a Site or the whole Farm. All Virtual Hosting Poolsare returned if no parameters are passed.  One of these optional  Guid[] Guid or VirtualHostingPoolId: GUID of theVirtual Hosting Pool to Get.  Guid[] SiteId: GUID of the Site to Get all VirtualHosting Pools for.  string[] SiteName: Name of the Site to Get allVirtual Hosting Pools for.  or this optional ; resolution  string[] Name or VirtualHostingPoolName: Name of theVirtual Hosting Pool to Get.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to Get all VirtualHosting Pools for.  string[] SiteName: Name of the Site to Get allVirtual Hosting Pools for.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  VirtualHostingPoolId or SiteId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or VirtualHostingPoolId: Read-only GUID thatuniquely identifies this Virtual Hosting Pool.  Name or VirtualHostingPoolName: Name of the VirtualHosting Pool. It is unique within the Site. Max Length=50  SiteId: GUID of the Site that this Virtual HostingPool is a member of. It is not used with SiteName.  SiteName: Name of the Site that this Virtual HostingPool is a member of. It is not used with SiteId.  Type: Type of the Virtual Hosting Pool. 0 = CitrixXenServer, 1 = Microsoft SCVMM/Hyper-V, 2 = VMWare vSphere/ESX. Min=0, Max=2,Default=0  Description: User description. Default=\"\"Max Length=250  Server: Name or IP of the Host Server. MaxLength=255  Port: Port of the Host Server. Min=80, Max=65534,Default=80  Datacenter: Datacenter of the Virtual Hosting Pool.Default=\"\" Max Length=250  UpdateLimit: Number of updates at the same time.Min=2, Max=1000, Default=1000  UpdateTimeout: Timeout for updates. Min=2, Max=240,Default=60  ShutdownTimeout: Timeout for shutdown. Min=2,Max=30, Default=10  UserName: Name to use when logging into the Server.  Password: Password to use when logging into theServer.  XdHostingUnitUuid: UUID of XenDesktop Hosting UnitDefault=00000000-0000-0000-0000-000000000000  XsPvsProxyEnabled: Enable XenServer PVS proxy whenset to true Default=false  PrepopulateEnabled: Enable prepopulate when set totrue Default=false  XsPvsSiteUuid: UUID of XenServerPVS_site  Default=00000000-0000-0000-0000-000000000000  PvsVirtualHostingPool[]: If successful, thePvsVirtualHostingPool object(s) are returned.", 
            "title": "Get-PvsVirtualHostingPool"
        }, 
        {
            "location": "/#example-1-get-pvsvirtualhostingpool-for-farm", 
            "text": "Get all PvsVirtualHostingPool for the Farm.  Get-PvsVirtualHostingPool", 
            "title": "EXAMPLE 1: Get PvsVirtualHostingPool for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsvirtualhostingpool-for-site", 
            "text": "Get all PvsVirtualHostingPool for the Site namedtheSite.  Get-PvsVirtualHostingPool -SiteName theSite", 
            "title": "EXAMPLE 2: Get PvsVirtualHostingPool for Site"
        }, 
        {
            "location": "/#example-3-get-pvsvirtualhostingpool", 
            "text": "Get PvsVirtualHostingPool for VirtualHostingPoolnamed theVirtualHostingPool in Site named theSite.  Get-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 3: Get PvsVirtualHostingPool"
        }, 
        {
            "location": "/#get-pvsxdsite", 
            "text": "Get the fields for a XenDesktop Site or allXenDesktop Sites. All XenDisktop Sites are returned if no parameters arepassed.  This optional  Guid[] Guid or XdSiteId: GUID of the XenDesktop Siteto Get.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  XdSiteId  If only selected fields are needed, pass them in theFields parameter as a string array.  Guid or XdSiteId: GUID of the XenDesktop Site.  ConfigServices: XenDesktop Server addresses. MaxLength=2000  PvsXDSite[]: If successful, the PvsXDSite object(s)are returned.", 
            "title": "Get-PvsXDSite"
        }, 
        {
            "location": "/#example-1-get-pvsxdsite-for-farm", 
            "text": "Get all PvsXDSite for the Farm.  Get-PvsXDSite", 
            "title": "EXAMPLE 1: Get PvsXDSite for Farm"
        }, 
        {
            "location": "/#example-2-get-pvsxdsite", 
            "text": "Get the PvsXDSite for the XDSite with Guid45687f34-c9ec-4852-9d55-337a1af41405.  Get-PvsXDSite -Guid \"45687f34-c9ec-4852-9d55-337a1af41405\"", 
            "title": "EXAMPLE 2: Get PvsXDSite"
        }, 
        {
            "location": "/#grant-pvsauthgroup", 
            "text": "Assign an AuthGroup to have Farm, Site or CollectionAuthorization. If no Site or Collection is specified, the AuthGroup is givenFarm Authorization.  One of these required  Guid[] Guid or AuthGroupId: GUID of the AuthGroup toassign Authorization for.  string[] Name or AuthGroupName: Name of theAuthGroup to assign Authorization for.  One of these optional  Guid[] SiteId: GUID of the Site to assignAuthorization to for the AuthGroup.  string[] SiteName: Name of the Site to assignAuthorization to for the AuthGroup.  Guid[] CollectionId: GUID of the Collection toassign Authorization to for the AuthGroup.  or this optional ; resolution  string[] CollectionName: Name of the Collection toassign Authorization to for the AuthGroup.  Optional  uint Role: Authorization Role for the Collection.300 or 400 can be used. Role can only be used with CollectionId orCollectionName. 300 is Collection Administrator, and 400 is CollectionOperator. Default=400  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to assignAuthorization to for the AuthGroup.  string[] SiteName: Name of the Site to assignAuthorization to for the AuthGroup.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  AuthGroupId, SiteId or CollectionId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Grant-PvsAuthGroup"
        }, 
        {
            "location": "/#example-1-grant-pvsauthgroup-for-pvsauthgroup-to-pvsfarm", 
            "text": "Grant-PvsAuthGroup -Name theAuthGroup", 
            "title": "EXAMPLE 1: Grant-PvsAuthGroup for PvsAuthGroup to PvsFarm"
        }, 
        {
            "location": "/#example-2-grant-pvsauthgroup-for-pvsauthgroup-using-pipe", 
            "text": "The Get-PvsAuthGroup output is piped to theGrant-PvsAuthGroup.  Get-PvsAuthGroup -Name theAuthGroup -Fields Guid |Grant-PvsAuthGroup  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Grant-PvsAuthGroup for PvsAuthGroup Using Pipe"
        }, 
        {
            "location": "/#example-3-grant-pvsauthgroup-for-pvsauthgroup-to-pvssite", 
            "text": "Grant-PvsAuthGroup -Name theAuthGroup -SiteNametheSite", 
            "title": "EXAMPLE 3: Grant-PvsAuthGroup for PvsAuthGroup to PvsSite"
        }, 
        {
            "location": "/#example-4-grant-pvsauthgroup-for-pvsauthgroup-using-pipe", 
            "text": "The Get-PvsAuthGroup output is piped to theGrant-PvsAuthGroup.  Get-PvsAuthGroup -Name theAuthGroup -Fields Guid |Grant-PvsAuthGroup -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 4: Grant-PvsAuthGroup for PvsAuthGroup Using Pipe"
        }, 
        {
            "location": "/#example-5-grant-pvsauthgroup-for-pvssite-using-pipe", 
            "text": "The Get-PvsSite output is piped to theGrant-PvsAuthGroup.  Get-PvsSite -Name theSite -Fields Guid |Grant-PvsAuthGroup -Name theAuthGroup  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 5: Grant-PvsAuthGroup for PvsSite Using Pipe"
        }, 
        {
            "location": "/#example-6-grant-pvsauthgroup-for-pvsauthgroup-to-pvscollection", 
            "text": "Grant-PvsAuthGroup -Name theAuthGroup-CollectionName theCollection -SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 6: Grant-PvsAuthGroup for PvsAuthGroup to PvsCollection"
        }, 
        {
            "location": "/#example-7-grant-pvsauthgroup-for-pvsauthgroup-using-pipe", 
            "text": "The Get-PvsAuthGroup output is piped to theGrant-PvsAuthGroup.  Get-PvsAuthGroup -Name theAuthGroup -Fields Guid |Grant-PvsAuthGroup -CollectionName theCollection -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 7: Grant-PvsAuthGroup for PvsAuthGroup Using Pipe"
        }, 
        {
            "location": "/#example-8-grant-pvsauthgroup-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theGrant-PvsAuthGroup.  Get-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Grant-PvsAuthGroup -Name theAuthGroup  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 8: Grant-PvsAuthGroup for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#example-9-grant-pvsauthgroup-for-pvsauthgroup-to-pvscollection", 
            "text": "Grant-PvsAuthGroup -Name theAuthGroup-CollectionName theCollection -SiteName theSite -Role 300  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 9: Grant-PvsAuthGroup for PvsAuthGroup to PvsCollection"
        }, 
        {
            "location": "/#example-10-grant-pvsauthgroup-for-pvsauthgroup-using-pipe", 
            "text": "The Get-PvsAuthGroup output is piped to theGrant-PvsAuthGroup.  Get-PvsAuthGroup -Name theAuthGroup -Fields Guid |Grant-PvsAuthGroup -CollectionName theCollection -SiteName theSite -Role 300  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 10: Grant-PvsAuthGroup for PvsAuthGroup Using Pipe"
        }, 
        {
            "location": "/#example-11-grant-pvsauthgroup-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theGrant-PvsAuthGroup.  Get-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Grant-PvsAuthGroup -Name theAuthGroup -Role 300  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 11: Grant-PvsAuthGroup for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#import-pvsdevices", 
            "text": "Import Devices from the contents of the comma or tabdelimited fileName specified. Each record needs to have Device Name, MacAddress, Site Name, Collection Name, optional Description and optional Type.Description must exist for Type to be included, but it can have 0 length. Typecan be 1 when it performs test of Disks, 2 when it performs maintenance onDisks, and 0 otherwise.  This required  string[] Name or FileName: Name of the file toimport the Devices from. This must be a full file path name.  One of these optional  Guid[] CollectionId: GUID of the Collection toimport the Devices into.  Guid[] SiteId: GUID of the Site to import theDevices into.  string[] SiteName: Name of the Site to import theDevices into.  or this optional ; resolution  string[] CollectionName: Name of the Collection toimport the Devices into.  Optional  SwitchParameter CopyTemplate: If -CopyTemplate isspecified, the Template Device for the collection, if it exists, will be usedfor the property settings of the imported Devices.  SwitchParameter DoNotCreateNewSites: If-DoNotCreateNewSites is specified, new Sites found in the file will not becreated.  SwitchParameter DoNotCreateNewCollections: If-DoNotCreateNewCollections is specified, new Collections found in the file willnot be created.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to import theDevices into.  string[] SiteName: Name of the Site to import theDevices into.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  CollectionId or SiteId  Optional  SwitchParameter Confirm: The impact of this operationis \"medium\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Import-PvsDevices"
        }, 
        {
            "location": "/#example-1-import-pvsdevices", 
            "text": "Import-PvsDevices -Name \"C:\\import\\theFileName\"", 
            "title": "EXAMPLE 1: Import-PvsDevices"
        }, 
        {
            "location": "/#example-2-import-pvsdevices", 
            "text": "Import-PvsDevices -CopyTemplate -DoNotCreateNewSites-DoNotCreateNewCollections -Name \"C:\\import\\theFileName\"", 
            "title": "EXAMPLE 2: Import-PvsDevices"
        }, 
        {
            "location": "/#example-3-import-pvsdevices-for-sitename", 
            "text": "Import-PvsDevices -SiteName theSite -Name\"C:\\import\\theFileName\"", 
            "title": "EXAMPLE 3: Import-PvsDevices for SiteName"
        }, 
        {
            "location": "/#example-4-import-pvsdevices-for-sitename-with-copytemplate-anddonotcreatenewcollections", 
            "text": "Import-PvsDevices -SiteName theSite -CopyTemplate-DoNotCreateNewCollections -Name \"C:\\import\\theFileName\"", 
            "title": "EXAMPLE 4: Import-PvsDevices for SiteName with CopyTemplate andDoNotCreateNewCollections"
        }, 
        {
            "location": "/#example-5-import-pvsdevices-for-pvssite-using-pipe", 
            "text": "The Get-PvsSite output is piped to theImport-PvsDevices.  Get-PvsSite -Name theSite -Fields Guid |Import-PvsDevices -Name \"C:\\import\\theFileName\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 5: Import-PvsDevices for PvsSite Using Pipe"
        }, 
        {
            "location": "/#example-6-import-pvsdevices-for-collectionname", 
            "text": "Import-PvsDevices -CollectionName theCollection-SiteName theSite -Name \"C:\\import\\theFileName\"  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 6: Import-PvsDevices for CollectionName"
        }, 
        {
            "location": "/#example-7-import-pvsdevices-for-collectionname-with-copytemplate", 
            "text": "Import-PvsDevices -CollectionName theCollection-SiteName theSite -CopyTemplate -Name \"C:\\import\\theFileName\"  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 7: Import-PvsDevices for CollectionName with CopyTemplate"
        }, 
        {
            "location": "/#example-8-import-pvsdevices-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theImport-PvsDevices.  Get-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Import-PvsDevices -Name \"C:\\import\\theFileName\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 8: Import-PvsDevices for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#import-pvsdisk", 
            "text": "Import a Disk. It will add a Disk Locator for theDisk to the Site. A manifest file must exist in the Store. If successful, thenew PvsDiskLocator is returned.  This required ; resolution  string Name or DiskLocatorName: Name of the DiskLocator File. It is unique within the Store. ASCII Max Length=52  One of these optional  Guid ServerId: GUID of the single Server that thisDisk Locator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000  string ServerName: Name of the single Server thatthis Disk Locator is assigned to. It is not used with ServerId.Default=\"\"  Optional  string Description: User description.Default=\"\" Max Length=250  string MenuText: Text that is displayed in the BootMenu. If this field has no value, the name value is used. Default=\"\"ASCII Max Length=64  SwitchParameter Enabled: True when this disk can bebooted, false otherwise. Default=true  SwitchParameter RebalanceEnabled: True when thisServer can automatically rebalance Devices, false otherwise. Default=false  uint RebalanceTriggerPercent: Percent over fair loadthat triggers a dynamic Device rebalance. Min=5, Max=5000, Default=25  uint SubnetAffinity: Qualifier for subnet affinitywhen assigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2, Default=0  SwitchParameter VHDX: If -VHDX is specified, VHDXwill be used for the format of the image. VHDX has a Block size of 32 MB. VHDis the default.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  One of these resolutions when needed  Guid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsDiskLocator: If successful, the newPvsDiskLocator object is returned.", 
            "title": "Import-PvsDisk"
        }, 
        {
            "location": "/#example-1-import-pvsdisk-for-vhdx-to-pvsdisklocator", 
            "text": "This example imports a VHDX Disk and uses thedefault settings for all other optional parameters.  $thePvsDiskLocator = Import-PvsDisk -NametheDiskLocator -SiteName theSite -StoreName theStore -VHDX  if ($thePvsDiskLocator -eq$null)      # check that the PvsDiskLocator wasreturned  {  $thePvsDiskLocator.Name            #display the name  }", 
            "title": "EXAMPLE 1: Import-PvsDisk for VHDX to PvsDiskLocator"
        }, 
        {
            "location": "/#example-2-import-pvsdisk-for-vhd-to-pvsdisklocator", 
            "text": "This example imports a VHD Disk and sets all of theother optional parameters to non-default values.  $thePvsDiskLocator = Import-PvsDisk -Name theDiskLocator-SiteName theSite -StoreName theStore -ServerName theServer -Description\"The VHD disk.\" -MenuText \"The VHD disk.\" -Enabled-RebalanceEnabled -rebalanceTriggerPercent 50 -SubnetAffinity 2  if ($thePvsDiskLocator -eq$null)      # check that the PvsDiskLocator wasreturned  {  $thePvsDiskLocator.Name            #display the name  }", 
            "title": "EXAMPLE 2: Import-PvsDisk for VHD to PvsDiskLocator"
        }, 
        {
            "location": "/#import-pvsoemlicenses", 
            "text": "Oem Only: Import the Oem Licenses from the contentsof the fileName specified.  This required  string[] Name or FileName: Name of the file toimport the Oem Licenses from. This must be a full file path name.  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Import-PvsOemLicenses"
        }, 
        {
            "location": "/#example-1-import-pvsoemlicenses", 
            "text": "Import-PvsOemLicenses -Name\"C:\\import\\theFileName\"", 
            "title": "EXAMPLE 1: Import-PvsOemLicenses"
        }, 
        {
            "location": "/#invoke-pvsactivatedevicemak", 
            "text": "Proxy Activate with a Multiple Activation Key and/orapply the Confirmation ID to remote activate a Device DiskLocator pair.  One of these required  Guid[] Guid or DeviceId: GUID of the Device toActivate.  string[] Name or DeviceName: Name of the Device toActivate.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toActivate.  This required  string[] MakUsedToActivate: Multiple Activation Keyto Activate the Device with.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Invoke-PvsActivateDeviceMAK"
        }, 
        {
            "location": "/#example-1-invoke-activatedevicemak-for-name", 
            "text": "Invoke-ActivateDeviceMAK -Name theDevice-MakUsedToActivate \"2FKWD-NYFC7-VH8G3-BK3GD-7T667\"", 
            "title": "EXAMPLE 1: Invoke-ActivateDeviceMAK for Name"
        }, 
        {
            "location": "/#example-2-invoke-activatedevicemak-for-devicemac", 
            "text": "Invoke-ActivateDeviceMAK -DeviceMac\"00-11-22-33-44-55\" -MakUsedToActivate\"2FKWD-NYFC7-VH8G3-BK3GD-7T667\"", 
            "title": "EXAMPLE 2: Invoke-ActivateDeviceMAK for DeviceMac"
        }, 
        {
            "location": "/#example-3-invoke-activatedevicemak-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theInvoke-ActivateDeviceMAK.  Get-PvsDevice -Name theDevice -Fields Guid |Invoke-ActivateDeviceMAK -MakUsedToActivate\"2FKWD-NYFC7-VH8G3-BK3GD-7T667\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 3: Invoke-ActivateDeviceMAK for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#invoke-pvsmarkdown", 
            "text": "Mark Down a Device, Collection, View, Server orSite.  One of these required  Guid[] DeviceId: GUID of the Device to Mark Down.  string[] DeviceName: Name of the Device to MarkDown.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toMark Down.  Guid[] CollectionId: GUID of the Collection to MarkDown all Devices.  Guid[] SiteViewId: GUID of the Site View to MarkDown all Devices.  Guid[] SiteId: GUID of the Site. Can be used aloneto Mark Down all Servers and Devices in the Site.  string[] SiteName: Name of the Site. Can be usedalone to Mark Down all Servers and Devices in the Site.  Guid[] FarmViewId: GUID of the Farm View to MarkDown all Devices.  string[] FarmViewName: Name of the Farm View to MarkDown all Devices.  Guid[] DiskLocatorId: GUID of the DiskLocator toMark Down all Devices.  Guid[] ServerId: GUID of the Server to Mark Down.  string[] ServerName: Name of the Server to MarkDown.  or one of these required ; resolutions  string[] CollectionName: Name of the Collection toMark Down all Devices.  string[] SiteViewName: Name of the Site View to MarkDown all Devices.  string[] DiskLocatorName: Name of the DiskLocator toMark Down all Devices.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site. Can be used aloneto Mark Down all Servers and Devices in the Site.  string[] SiteName: Name of the Site. Can be usedalone to Mark Down all Servers and Devices in the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId, CollectionId, SiteViewId, SiteId,FarmViewId, DiskLocatorId or ServerId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Invoke-PvsMarkDown"
        }, 
        {
            "location": "/#example-1-invoke-pvsmarkdown-for-sitename", 
            "text": "Invoke-PvsMarkDown -SiteName theSite", 
            "title": "EXAMPLE 1: Invoke-PvsMarkDown for SiteName"
        }, 
        {
            "location": "/#example-2-invoke-pvsmarkdown-for-pvssite-using-pipe", 
            "text": "The Get-PvsSite output is piped to theInvoke-PvsMarkDown.  Get-PvsSite -Name theSite -Fields Guid |Invoke-PvsMarkDown  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Invoke-PvsMarkDown for PvsSite Using Pipe"
        }, 
        {
            "location": "/#example-3-invoke-pvsmarkdown-for-servername", 
            "text": "Invoke-PvsMarkDown -ServerName theServer", 
            "title": "EXAMPLE 3: Invoke-PvsMarkDown for ServerName"
        }, 
        {
            "location": "/#example-4-invoke-pvsmarkdown-for-pvsserver-using-pipe", 
            "text": "The Get-PvsServer output is piped to theInvoke-PvsMarkDown.  Get-PvsServer -Name theServer -Fields Guid |Invoke-PvsMarkDown  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 4: Invoke-PvsMarkDown for PvsServer Using Pipe"
        }, 
        {
            "location": "/#example-5-invoke-pvsmarkdown-for-devicename", 
            "text": "Invoke-PvsMarkDown -DeviceName theDevice", 
            "title": "EXAMPLE 5: Invoke-PvsMarkDown for DeviceName"
        }, 
        {
            "location": "/#example-6-invoke-pvsmarkdown-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theInvoke-PvsMarkDown.  Get-PvsDevice -Name theDevice -Fields Guid |Invoke-PvsMarkDown  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 6: Invoke-PvsMarkDown for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-7-invoke-pvsmarkdown-for-devicemac", 
            "text": "Invoke-PvsMarkDown -DeviceMac\"00-11-22-33-44-55\"", 
            "title": "EXAMPLE 7: Invoke-PvsMarkDown for DeviceMac"
        }, 
        {
            "location": "/#example-8-invoke-pvsmarkdown-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theInvoke-PvsMarkDown.  Get-PvsDevice -DeviceMac\"00-11-22-33-44-55\" -Fields Guid | Invoke-PvsMarkDown  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 8: Invoke-PvsMarkDown for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-9-invoke-pvsmarkdown-for-farmviewname", 
            "text": "Invoke-PvsMarkDown -FarmViewName theFarmView", 
            "title": "EXAMPLE 9: Invoke-PvsMarkDown for FarmViewName"
        }, 
        {
            "location": "/#example-10-invoke-pvsmarkdown-for-pvsfarmview-using-pipe", 
            "text": "The Get-PvsFarmView output is piped to theInvoke-PvsMarkDown.  Get-PvsFarmView -Name theFarmView -Fields Guid | Invoke-PvsMarkDown  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 10: Invoke-PvsMarkDown for PvsFarmView Using Pipe"
        }, 
        {
            "location": "/#example-11-invoke-pvsmarkdown-for-collectionname", 
            "text": "Invoke-PvsMarkDown -CollectionName theCollection-SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 11: Invoke-PvsMarkDown for CollectionName"
        }, 
        {
            "location": "/#example-12-invoke-pvsmarkdown-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theInvoke-PvsMarkDown.  Get-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Invoke-PvsMarkDown  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 12: Invoke-PvsMarkDown for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#example-13-invoke-pvsmarkdown-for-siteviewname", 
            "text": "Invoke-PvsMarkDown -SiteViewName theSiteView-SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 13: Invoke-PvsMarkDown for SiteViewName"
        }, 
        {
            "location": "/#example-14-invoke-pvsmarkdown-for-pvssiteview-using-pipe", 
            "text": "The Get-PvsSiteView output is piped to theInvoke-PvsMarkDown.  Get-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Invoke-PvsMarkDown  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 14: Invoke-PvsMarkDown for PvsSiteView Using Pipe"
        }, 
        {
            "location": "/#example-15-invoke-pvsmarkdown-for-disklocatorname", 
            "text": "Invoke-PvsMarkDown -DiskLocatorName theDiskLocator-SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 15: Invoke-PvsMarkDown for DiskLocatorName"
        }, 
        {
            "location": "/#example-16-invoke-pvsmarkdown-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theInvoke-PvsMarkDown.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsMarkDown  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 16: Invoke-PvsMarkDown for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#invoke-pvspromotediskversion", 
            "text": "Commit the changes made in the current Maintenanceor a Test version. Promotes the Maintenance version or a Test version to a Testor new Production version.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator File to Promote the Disk Version of.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator File to Promote the Disk Version of.  Optional  DateTime ScheduledDate: Date/Time the new diskversion will become available. Uses only the date, hour and minute.  uint TestVersion: Specifies the Test version numberthat should be Promoted to Production.  SwitchParameter Test: If -Test is specified, set themode of the Maintenance version to Test.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to have confirmationwithout the Confirm parameter.", 
            "title": "Invoke-PvsPromoteDiskVersion"
        }, 
        {
            "location": "/#example-1-invoke-pvspromotediskversion-to-production", 
            "text": "Invoke-PvsPromoteDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Invoke-PvsPromoteDiskVersion to Production"
        }, 
        {
            "location": "/#example-2-invoke-pvspromotediskversion-to-production-using-pipe", 
            "text": "Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsPromoteDiskVersion  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Invoke-PvsPromoteDiskVersion to Production Using Pipe"
        }, 
        {
            "location": "/#example-3-invoke-pvspromotediskversion-to-test", 
            "text": "Invoke-PvsPromoteDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore -Test  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 3: Invoke-PvsPromoteDiskVersion to Test"
        }, 
        {
            "location": "/#example-4-invoke-pvspromotediskversion-to-test-using-pipe", 
            "text": "Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsPromoteDiskVersion -Test  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Invoke-PvsPromoteDiskVersion to Test Using Pipe"
        }, 
        {
            "location": "/#example-5-invoke-pvspromotediskversion-test-to-production", 
            "text": "Invoke-PvsPromoteDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore -TestVersion 4  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 5: Invoke-PvsPromoteDiskVersion Test to Production"
        }, 
        {
            "location": "/#example-6-invoke-pvspromotediskversion-test-to-production-using-pipe", 
            "text": "Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsPromoteDiskVersion-TestVersion 4  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 6: Invoke-PvsPromoteDiskVersion Test to Production Using Pipe"
        }, 
        {
            "location": "/#example-7-invoke-pvspromotediskversion-to-production-for-future", 
            "text": "Invoke-PvsPromoteDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore -ScheduledDate \"2016/01/01\"  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 7: Invoke-PvsPromoteDiskVersion to Production, for Future"
        }, 
        {
            "location": "/#example-8-invoke-pvspromotediskversion-to-production-for-future-usingpipe", 
            "text": "Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsPromoteDiskVersion-ScheduledDate \"2016/01/01\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 8: Invoke-PvsPromoteDiskVersion to Production, for Future UsingPipe"
        }, 
        {
            "location": "/#invoke-pvsrebalancedevices", 
            "text": "Rebalance Devices for a Server. When successful,returns the number of Devices affected.  One of these required  Guid Guid or ServerId: GUID of the Server toRebalance Devices on, ServerName.  string Name or ServerName: Name of the Server toRebalance Devices on, ServerId.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  UInt32: If successful, the numeric value is returned", 
            "title": "Invoke-PvsRebalanceDevices"
        }, 
        {
            "location": "/#example-1-invoke-pvsrebalancedevices-for-name", 
            "text": "Invoke-PvsRebalanceDevices -Name theServer", 
            "title": "EXAMPLE 1: Invoke-PvsRebalanceDevices for Name"
        }, 
        {
            "location": "/#invoke-pvsrevertdiskversion", 
            "text": "Set the existing highest version disk to Maintenanceor Test mode. A specified version can be reverted to Test mode if there are noProduction versions higher than it. If the mode is Test, it can be set toMaintenance.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator File to Revert.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator File to Revert.  Optional  uint Version: Specifies the version number thatshould be Reverted to Test mode.  SwitchParameter Test: If -Test is specified, whenreverting the highest version, the access will be set to Test, otherwise set itto Maintenance.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Invoke-PvsRevertDiskVersion"
        }, 
        {
            "location": "/#example-1-invoke-pvsrevertdiskversion-to-maintenance", 
            "text": "Invoke-PvsRevertDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Invoke-PvsRevertDiskVersion to Maintenance"
        }, 
        {
            "location": "/#example-2-invoke-pvsrevertdiskversion-to-maintenance-using-pipe", 
            "text": "Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsRevertDiskVersion  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Invoke-PvsRevertDiskVersion to Maintenance Using Pipe"
        }, 
        {
            "location": "/#example-3-invoke-pvsrevertdiskversion-to-test", 
            "text": "Invoke-PvsRevertDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore -Test  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 3: Invoke-PvsRevertDiskVersion to Test"
        }, 
        {
            "location": "/#example-4-invoke-pvsrevertdiskversion-to-test-using-pipe", 
            "text": "Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsRevertDiskVersion -Test  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that the SiteNameor SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Invoke-PvsRevertDiskVersion to Test Using Pipe"
        }, 
        {
            "location": "/#example-5-invoke-pvsrevertdiskversion-production-to-test", 
            "text": "Invoke-PvsRevertDiskVersion -Name theDiskLocator-SiteName theSite -StoreName theStore -Version 4  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 5: Invoke-PvsRevertDiskVersion Production to Test"
        }, 
        {
            "location": "/#example-6-invoke-pvsrevertdiskversion-production-to-test-using-pipe", 
            "text": "Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Invoke-PvsRevertDiskVersion -Version4  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 6: Invoke-PvsRevertDiskVersion Production to Test Using Pipe"
        }, 
        {
            "location": "/#merge-pvsdisk", 
            "text": "Merge the Disk.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator File to Merge.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator File to Merge.  Optional  uint Access: Access to set the version to when mergeis finished. Default value is found in the Farm MergeMode setting. Values are:0 (Production), 1 (Test) and 2 (Maintenance), Min=0, Max=2  SwitchParameter NewBase: If -NewBase is specified,create a new base from last base plus all updates from that base. The defaultis to merge all updates from the last base by default.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the members belowcan be used as the Object parameter or from a pileline:  DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or \"low\"to have confirmation without the Confirm parameter.", 
            "title": "Merge-PvsDisk"
        }, 
        {
            "location": "/#example-1-merge-pvsdisk-for-name", 
            "text": "Merge-PvsDisk -Name theDiskLocator -SiteName theSite-StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Merge-PvsDisk for Name"
        }, 
        {
            "location": "/#example-2-merge-pvsdisk-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theMerge-PvsDisk.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Merge-PvsDisk  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Merge-PvsDisk for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-3-merge-pvsdisk-for-name-with-access-and-newbase", 
            "text": "Merge-PvsDisk -Name theDiskLocator -SiteName theSite-StoreName theStore -Access 2 -NewBase  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 3: Merge-PvsDisk for Name with Access and NewBase"
        }, 
        {
            "location": "/#example-4-merge-pvsdisk-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theMerge-PvsDisk.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Merge-PvsDisk -Access 2 -NewBase  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Merge-PvsDisk for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#mount-pvsdisk", 
            "text": "Mount a disk. If successful, the drive letter or anempty string is returned. An empty string can be returned if a drive letter wasnot assigned by the operating system before the maxDiskLetterWaitSeconds isused up.  This required  Guid Guid or DiskLocatorId: GUID of the Disk Locatorto Mount the Disk.  or this required ; resolution  string Name or DiskLocatorName: Name of the DiskLocator to Mount the Disk.  One of these optional  Guid ServerId: Specific Server GUID to use to Mountthe Disk.  string ServerName: Specific Server Name to use toMount the Disk.  Optional  uint MaxDiskLetterWaitSeconds: Once mapping a diskis successful, this is the maximum amount of seconds spent waiting for theoperating system to return a drive letter. If the operating system does notreturn a drive letter before the maximum wait time, then an empty string isreturned. Default=30  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  One of these resolutions when needed  Guid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId or ServerId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  String: If successful, the String value is returned.", 
            "title": "Mount-PvsDisk"
        }, 
        {
            "location": "/#example-1-mount-pvsdisk", 
            "text": "$theDriveLetter = Start-PvsMapDisk -NametheDiskLocator -SiteName theSite -StoreName theStore  if ($theDriveLetter -ne $null -and$theDriveLetter.length -gt 0)  {  $theDriveLetter    # display thedrive letter  }  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Mount-PvsDisk"
        }, 
        {
            "location": "/#example-2-mount-pvsdisk-for-pvsserver-with-maxdiskletterwaitseconds", 
            "text": "$theDriveLetter = Start-PvsMapDisk -NametheDiskLocator -SiteName theSite -StoreName theStore -ServerName theServer-MaxDiskLetterWaitSeconds 60  if ($theDriveLetter -ne $null -and$theDriveLetter.length -gt 0)  {  $theDriveLetter    # display thedrive letter  }  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Mount-PvsDisk for PvsServer with MaxDiskLetterWaitSeconds"
        }, 
        {
            "location": "/#move-pvsdevicetocollection", 
            "text": "Move a Device to a Collection. Personal vDiskDevices cannot be moved to a Collection in another Site.  One of these required  Guid[] Guid or DeviceId: GUID of the Device to Move.  string[] Name or DeviceName: Name of the Device toMove.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toMove.  This required  Guid[] CollectionId: GUID of the Collection to Movea Device to. The Device is moved from whatever Collection it is currently in,to the Collection specified.  or this required ; resolution  string[] CollectionName: Name of the Collection toMove a Device to. The Device is moved from whatever Collection it is currentlyin, to the Collection specified.  Optional  SwitchParameter CopyTemplate: If -CopyTemplate isspecified, the Template Device for the Collection, if it exists, will be usedfor the property settings of the moved Device.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId or CollectionId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Move-PvsDeviceToCollection"
        }, 
        {
            "location": "/#example-1-move-pvsdevicetocollection-for-pvsdevice-to-pvscollection", 
            "text": "Move-PvsDeviceToCollection -Name theDevice-CollectionName theCollection -SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Move-PvsDeviceToCollection for PvsDevice to PvsCollection"
        }, 
        {
            "location": "/#example-2-move-pvsdevicetocollection-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theMove-PvsDeviceToCollection.  Get-PvsDevice -Name theDevice -Fields Guid |Move-PvsDeviceToCollection -CollectionName thetheCollection -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 2: Move-PvsDeviceToCollection for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-3-move-pvsdevicetocollection-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theMove-PvsDeviceToCollection.  Get-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Move-PvsDeviceToCollection -Name theDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 3: Move-PvsDeviceToCollection for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#move-pvsservertosite", 
            "text": "Move a Server to a Site.  One of these required  Guid[] Guid or ServerId: GUID of the Server toAssign.  string[] Name or ServerName: Name of the Server toAssign.  One of these required  Guid[] SiteId: GUID of the Site to Assign a Server.  string[] SiteName: Name of the Site to Assign aServer.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId or SiteId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Move-PvsServerToSite"
        }, 
        {
            "location": "/#example-1-move-pvsservertosite-for-pvsserver-to-pvssite", 
            "text": "Move-PvsServerToSite -Name theServer -SiteNametheSite", 
            "title": "EXAMPLE 1: Move-PvsServerToSite for PvsServer to PvsSite"
        }, 
        {
            "location": "/#example-2-move-pvsservertosite-for-pvsserver-using-pipe", 
            "text": "The Get-PvsServer output is piped to theMove-PvsServerToSite.  Get-PvsServer -Name theServer -Fields Guid |Move-PvsServerToSite -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Move-PvsServerToSite for PvsServer Using Pipe"
        }, 
        {
            "location": "/#example-3-move-pvsservertosite-for-pvssite-using-pipe", 
            "text": "The Get-PvsSite output is piped to theMove-PvsServerToSite.  Get-PvsSite -Name theSite -Fields Guid |Move-PvsServerToSite -Name theServer  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 3: Move-PvsServerToSite for PvsSite Using Pipe"
        }, 
        {
            "location": "/#new-pvsauthgroup", 
            "text": "Create a new authorization AuthGroup for an ActiveDirectory or Windows Group.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or AuthGroupName: Name of the ActiveDirectory or Windows Group. Max Length=450  string Description: User description.Default=\"\" Max Length=250  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsAuthGroup: If successful, the new PvsAuthGroupobject is returned.", 
            "title": "New-PvsAuthGroup"
        }, 
        {
            "location": "/#example-1-create-pvsauthgroup-with-minimum-fields", 
            "text": "Creates a PvsAuthGroup for the\"AD\\PVSFarmAdminGroup\" Active Directory security group.  New-PvsAuthGroup -Name\"AD\\PVSFarmAdminGroup\"", 
            "title": "EXAMPLE 1: Create PvsAuthGroup with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvsauthgroup-with-all-fields", 
            "text": "Creates a PvsAuthGroup for the\"AD\\PVSFarmAdminGroup\" Active Directory security group with\"Farm AuthGroup\" as the description.  New-PvsAuthGroup -Name\"AD\\PVSFarmAdminGroup\" -Description \"Farm AuthGroup\"", 
            "title": "EXAMPLE 2: Create PvsAuthGroup with All Fields"
        }, 
        {
            "location": "/#example-3-create-pvsauthgroup-and-assign-to-site", 
            "text": "Creates a PvsAuthGroup for the\"AD\\PVSSiteAdminGroup\" Active Directory security group and Assigns itto theSite.  New-PvsAuthGroup -Name\"AD\\PVSSiteAdminGroup\" | Grant-PvsAuthGroup -SiteName theSite", 
            "title": "EXAMPLE 3: Create PvsAuthGroup and Assign to Site"
        }, 
        {
            "location": "/#new-pvsceipdata", 
            "text": "Create a new entry for CeipData table.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  uint Enabled: 1 if CEIP is enabled, otherwise 0.Min=0, Max=1  DateTime NextUpload: Date and time next CEIP uploadis due if enabled is 1. Default=Empty  uint InProgress: 1 if an upload is currently inprogress, otherwise 0. Default=0  Guid ServerId: ID of server that is currentlyuploading, null if InProgress is 0.Default=00000000-0000-0000-0000-000000000000  uint OneTimeUpload: 1 to perform a one time upload.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsCeipData: If successful, the new PvsCeipDataobject is returned.", 
            "title": "New-PvsCeipData"
        }, 
        {
            "location": "/#example-1-create-pvsceipdata-with-minimum-fields", 
            "text": "Creates a PvsCeipData with enabled as false.  New-PvsCeipData -Enabled 0", 
            "title": "EXAMPLE 1: Create PvsCeipData with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvsceipdata-with-all-fields", 
            "text": "Creates a PvsCeipData with enabled as true and withall fields set different than defaults.  New-PvsCeipData -Enabled 1 -NextUpload\"2016-01-14 15:52:00\"", 
            "title": "EXAMPLE 2: Create PvsCeipData with All Fields"
        }, 
        {
            "location": "/#new-pvscisdata", 
            "text": "Create a new entry for CisData table.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string UserName: Username used to obtain the tokenMax Length=255  string Path: Path where the last problem reportbundle was saved Default=\"\" Max Length=255  string Password: Password of the user required toobtain the token. This is required only by Set and Add  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsCisData: If successful, the new PvsCisData objectis returned.", 
            "title": "New-PvsCisData"
        }, 
        {
            "location": "/#example-1-create-pvscisdata-with-minimum-fields", 
            "text": "Creates a PvsCisData with userName as userName andwith all fields set different than defaults.  New-PvsCisData -UserName userName", 
            "title": "EXAMPLE 1: Create PvsCisData with Minimum Fields"
        }, 
        {
            "location": "/#new-pvscollection", 
            "text": "Create a new Collection for a Site.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or CollectionName: Name of theCollection. It is unique within the Site. Max Length=50  Guid SiteId: GUID of the Site that this Collectionis a member of. It is not used with SiteName.  string SiteName: Name of the Site that thisCollection is a member of. It is not used with SiteId.  string Description: User description.Default=\"\" Max Length=250  uint LastAutoAddDeviceNumber: The Device Number ofthe last Auto Added Device. Default=0  SwitchParameter Disabled: If -Disabled is specified,the Devices in the Collection can not be booted. By default the Devices can bebooted.  string AutoAddPrefix: The string put before theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno end digit Max Length=12  string AutoAddSuffix: The string put after theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno begin digit Max Length=12  SwitchParameter NoAutoAddZeroFill: If-NoAutoAddZeroFill is specified, zeros will not be placed before the DeviceNumber up to the AutoAddNumberLength for Auto Add.  uint AutoAddNumberLength: The maximum length of theDevice Number for Auto Add. This length plus the AutoAddPrefix length plus theAutoAddSuffix length must be less than 16. Required that ((lenautoAddPrefix+lenautoAddSuffix)+AutoAddNumberLength) < =15.Min=3, Max=9, Default=4  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to have confirmationwithout the Confirm parameter.  PvsCollection: If successful, the new PvsCollectionobject is returned.", 
            "title": "New-PvsCollection"
        }, 
        {
            "location": "/#example-1-create-pvscollection-with-minimum-fields", 
            "text": "Creates a PvsCollection named theCollection intheSite.  New-PvsCollection -Name theCollection -SiteNametheSite", 
            "title": "EXAMPLE 1: Create PvsCollection with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvscollection-with-all-fields", 
            "text": "Creates a PvsCollection named theCollection intheSite with \"XenServer Collection\" as the description that isDisabled and has all AutoAdd settings different than defaults.  New-PvsCollection -Name theCollection -SiteNametheSite -Description \"XenServer Collection\" -Disabled-LastAutoAddDeviceNumber 100 -AutoAddPrefix A -AutoAddSuffix A-NoAutoAddZeroFill -AutoAddNumberLength 3", 
            "title": "EXAMPLE 2: Create PvsCollection with All Fields"
        }, 
        {
            "location": "/#example-3-create-pvscollection-and-assign-authgroup-to-it", 
            "text": "Creates a PvsCollection named theCollection intheSite and Assigns AuthGroup \"AD\\PVSCollectionAdminGroup\" to it.  New-PvsCollection -Name theCollection -SiteNametheSite | Grant-PvsAuthGroup -AuthGroupName\"AD\\PVSCollectionAdminGroup\"", 
            "title": "EXAMPLE 3: Create PvsCollection and Assign AuthGroup to it"
        }, 
        {
            "location": "/#new-pvsdevice", 
            "text": "Add a new Device to a Collection.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15  Guid CollectionId: GUID of the Collection thisDevice is to be a member of. It is not used with CollectionName.  string CollectionName: Name of the Collection thisDevice is to be a member of. SiteName or SiteId must also be used.  Guid SiteId: GUID of the Site the CollectionName isto be a member of. This or SiteName is used with CollectionName.  string SiteName: Name of the Site the CollectionNameis to be a member of. This or SiteId is used with CollectionName.  string Description: User description.Default=\"\" Max Length=250  PvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.  uint BootFrom: Device to boot from. Choices are 1for vDisk, 2 for Hard Disk, and 3 for Floppy. Min=1, Max=3, Default=1  string ClassName: Used by Automatic Update featureto match new versions of Disks to a Device. Default=\"\" Max Length=41  uint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901  SwitchParameter Disabled: If -Disabled is specified,the Device can not be booted. By default the Device can be booted.  SwitchParameter LocalDiskEnabled: If-LocalDiskEnabled is specified, there will be a local disk menu choice for theDevice.  uint Authentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. Min=0,Max=2, Default=0  string User: Name of user to authenticate before theboot process continues. Default=\"\" ASCII Max Length=20  string Password: Password of user to authenticatebefore the boot process continues. Default=\"\" ASCII Max Length=100  SwitchParameter CopyTemplate: If -CopyTemplate isspecified, the Template Device for the collection, if it exists, will be usedfor the property settings of the new Device.  uint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0  uint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0  string DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255  string DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186  string DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000  DateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty  uint Type: 1 when it performs test of Disks, 2 whenit performs maintenance on Disks, 0 otherwise. Min=0, Max=2, Default=0  uint LocalWriteCacheDiskSize: The size in GB toformat the Device cache file disk. If the value is 0, then the disk is notformatted. Min=0, Max=2048, Default=0  Guid VirtualHostingPoolId: GUID that uniquelyidentifies the Virtual Hosting Pool for a VM. This is needed when Adding a VM device.Default=00000000-0000-0000-0000-000000000000  SwitchParameter BdmBoot: If -BdmBoot is 0, use PXE,1 use BDM. PXE boot is used by default.  uint BdmType: Use PXE boot when set to 0, BDM (Bios)boot when set to 1 and BDM (Uefi) boot when set to 2.  Default=0  uint BdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3use USB. Default=0  DateTime BdmUpdated: Timestamp of the last BDM bootdisk update. Default=Empty  DateTime BdmCreated: Timstamp when BDM device wascreated  Default=Empty  Guid XsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000  SwitchParameter XsPvsProxyEnabled: Enable XenServerPVS proxy when set to true Default=false  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsDevice: If successful, the new PvsDevice objectis returned.", 
            "title": "New-PvsDevice"
        }, 
        {
            "location": "/#example-1-create-pvsdevice-with-minimum-fields", 
            "text": "Creates a PvsDevice named theDevice in theCollectionof theSite.  New-PvsDevice -Name theDevice -DeviceMac\"00-11-22-33-44-55\" -SiteName theSite -CollectionName theCollection  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Create PvsDevice with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvsdevice-with-all-fields", 
            "text": "Creates a PvsDevice named theDevice in theCollectionof theSite with all fields set different than defaults.  New-PvsDevice -Name theDevice -DeviceMac\"00-11-22-33-44-55\" -SiteName theSite -CollectionName theCollection-Description \"XenServer Device\" -BootFrom 2 -ClassName C -Port 6000-Disabled -LocalDiskEnabled -Authentication 1 -User U -Password P -CopyTemplate-LogLevel 3 -Type 2 -LocalWriteCacheDiskSize 100 -BdmBoot -VirtualHostingPoolId\"15e0544e-4cf9-449e-b47f-8d836b16026f\"  Do not set AdTimestamp, AdSignature, DomainName,DomainObjectSID, DomainControllerName and DomainTimeCreated. They are only setinternally by PVS.  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 2: Create PvsDevice with All Fields"
        }, 
        {
            "location": "/#example-3-create-pvsdevice-and-boot-it", 
            "text": "Creates a PvsDevice named theDevice in theCollectionof theSite and Boots it.  New-PvsDevice -Name theDevice -DeviceMac\"00-11-22-33-44-55\" -SiteName theSite -CollectionName theCollection |Start-PvsBoot  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 3: Create PvsDevice and Boot it"
        }, 
        {
            "location": "/#new-pvsdevicewithpersonalvdisk", 
            "text": "Add a new Device with Personal vDisk to acollection.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15  Guid CollectionId: GUID of the Collection thisDevice with Personal vDisk is to be a member of. It is not used withCollectionName.  string CollectionName: Name of the Collection thisDevice with Personal vDisk is to be a member of. SiteName or SiteId must alsobe used.  Guid DiskLocatorId: GUID of the Disk Locator toupdate with this Device.  Guid SiteId: GUID of the Site the CollectionName isto be a member of. This or SiteName is used with CollectionName.  string SiteName: Name of the Site the CollectionNameis to be a member of. This or SiteId is used with CollectionName.  string Description: User description.Default=\"\" Max Length=250  PvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device with PersonalvDisk.  uint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901  uint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0  uint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0  string DomainName: Fully qualified name of thedomain that the Device with Personal vDisk belongs to. Do not set this field,it is only set internally by PVS. Default=\"\" Max Length=255  string DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device with Personal vDisk's computeraccount. Do not set this field, it is only set internally by PVS.Default=\"\" Max Length=186  string DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000  DateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty  uint Type: 3 when it has a Personal vDisk, 4 when ithas a Personal vDisk and performs tests. Min=3, Max=4, Default=3  string PvdDriveLetter: Personal vDisk Drive letter.Range is F to Z. Default=\"\" Max Length=1  uint LocalWriteCacheDiskSize: The size in GB toformat the Device cache file disk. If the value is 0, then the disk is notformatted. Min=0, Max=2048, Default=0  SwitchParameter BdmBoot: If -BdmBoot is specified,user BDM instead of PXE boot. PXE boot is used by default.  Guid XdSiteId: GUID of the XenDesktop Site.Default=00000000-0000-0000-0000-000000000000  uint XdCatalogId: Integer identifier of theXenDesktop Catalog. Default=\"\"  Guid VirtualHostingPoolId: GUID that uniquelyidentifies the Virtual Hosting Pool for a VM. This is needed when Adding a VMdevice. Default=00000000-0000-0000-0000-000000000000  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsDeviceWithPersonalvDisk: If successful, the newPvsDeviceWithPersonalvDisk object is returned.", 
            "title": "New-PvsDeviceWithPersonalvDisk"
        }, 
        {
            "location": "/#example-1-create-pvsdevicewithpersonalvdisk-with-minimum-fields", 
            "text": "Creates a PvsDeviceWithPersonalvDisk with PersonalvDisk named theDevice in theCollection of theSite.  New-PvsDeviceWithPersonalvDisk -Name theDevice -DeviceMac\"00-11-22-33-44-55\" -SiteName theSite -CollectionName theCollection  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Create PvsDeviceWithPersonalvDisk with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvsdevicewithpersonalvdisk-with-all-fields", 
            "text": "Creates a PvsDeviceWithPersonalvDisk named theDevicein theCollection of theSite with all fields set different than defaults.  New-PvsDeviceWithPersonalvDisk -Name theDevice-DeviceMac \"00-11-22-33-44-55\" -SiteName theSite -CollectionNametheCollection -Description \"XenServer Device\" -ClassName C -Port 6000-LogLevel 3 -Type 4 -PvdDriveLetter G -LocalWriteCacheDiskSize 100 -BdmBootXdSiteId \"bd712b52-a262-4aa2-9c36-1602efe07f57\" -XdCatalogId 5-VirtualHostingPoolId \"15e0544e-4cf9-449e-b47f-8d836b16026f\"  Do not set AdTimestamp, AdSignature, DomainName,DomainObjectSID, DomainControllerName and DomainTimeCreated. They are only setinternally by PVS.  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 2: Create PvsDeviceWithPersonalvDisk with All Fields"
        }, 
        {
            "location": "/#example-3-create-pvsdevicewithpersonalvdisk-and-boot-it", 
            "text": "Creates a PvsDeviceWithPersonalvDisk with PersonalvDisk named theDevice in theCollection of theSite and Boots it.  New-PvsDeviceWithPersonalvDisk -Name theDevice-DeviceMac \"00-11-22-33-44-55\" -SiteName theSite -CollectionNametheCollection | Start-PvsBoot  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 3: Create PvsDeviceWithPersonalvDisk and Boot it"
        }, 
        {
            "location": "/#new-pvsdirectory", 
            "text": "Create a Directory on the Server specified.  One of these required  Guid[] Guid or ServerId: GUID of the Server tocreate a Directory on.  string[] Name or ServerName: Name of the Server tocreate a Directory on.  This required  string[] Path: Path of the new Directory to create.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "New-PvsDirectory"
        }, 
        {
            "location": "/#example-1-new-pvsdirectory-for-name", 
            "text": "New-PvsDirectory -Name theServer -Path\"C:\\directory\\subdirectory\"", 
            "title": "EXAMPLE 1: New-PvsDirectory for Name"
        }, 
        {
            "location": "/#example-2-new-pvsdirectory-for-pvsserver-using-pipe", 
            "text": "The Get-PvsServer output is piped to theNew-PvsDirectory.  Get-PvsServer -Name theServer -Fields Guid |New-PvsDirectory -Path \"C:\\directory\\subdirectory\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: New-PvsDirectory for PvsServer Using Pipe"
        }, 
        {
            "location": "/#new-pvsdisklocator", 
            "text": "Create a new Disk Locator for a Site. The Disk filemust already exist.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or DiskLocatorName: Name of the DiskLocator File. It is unique within the Store. ASCII Max Length=52  Guid SiteId: GUID of the Site this DiskLocator is tobe a member of. It is not used with SiteName.  string SiteName: Name of the Site this DiskLocatoris to be a member of. It is not used with SiteId.  Guid StoreId: GUID of the Store that this DiskLocator is a member of. SiteName or SiteId must also be used. It is not usedwith StoreName.  string StoreName: Name of the Store that this DiskLocator is a member of. SiteName or SiteId must also be used. It is not usedwith StoreId.  string Description: User description.Default=\"\" Max Length=250  string MenuText: Text that is displayed in the BootMenu. If this field has no value, the name value is used. Default=\"\"ASCII Max Length=64  Guid ServerId: GUID of the single Server that thisDisk Locator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000  string ServerName: Name of the single Server thatthis Disk Locator is assigned to. It is not used with ServerId.Default=\"\"  SwitchParameter Disabled: If -Disabled is specified,the disk can not be booted. By default the disk can be booted.  SwitchParameter RebalanceEnabled: If-RebalanceEnabled is specified, this Server can automatically rebalanceDevices.  uint RebalanceTriggerPercent: Percent over fair loadthat triggers a dynamic Device rebalance. Min=5, Max=5000, Default=25  uint SubnetAffinity: Qualifier for subnet affinitywhen assigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2,Default=0  string NewDiskWriteCacheType: The WriteCacheTypethat if a new Disk will be created, it will be set with. It is only used when anew Disk is being created. Value are: 0 (Private), (other values are standardimage) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache on Device HardDisk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9 (Cache inDevice RAM with Overflow on Hard Disk) Default=0  SwitchParameter VHDX: If -VHDX is specified, theformat of the image the DiskLocator is being added for that has never been addedto the Farm is VHDX. Otherwise it is assumed to be VHD.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsDiskLocator: If successful, the newPvsDiskLocator object is returned.", 
            "title": "New-PvsDiskLocator"
        }, 
        {
            "location": "/#example-1-create-pvsdisklocator-with-minimum-fields", 
            "text": "Creates a PvsDiskLocator named theDiskLocator intheSite and theStore.  New-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore", 
            "title": "EXAMPLE 1: Create PvsDiskLocator with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvsdisklocator-with-all-fields", 
            "text": "Creates a PvsDiskLocator named theDiskLocator intheSite and theStore with all fields set different than defaults.  New-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Description \"XenServer DiskLocator\"-MenuText \"XenServer Disk\" -ServerName theServer -Disabled-RebalanceEnabled -RebalanceTriggerPercent -50 -SubnetAffinity -1-NewDiskWriteCacheType 9 -VHDX  -NewDiskWriteCacheType 9 (Cache in Device RAM withOverflow on Hard Disk) is an important parameter since this is the most optimalcache type.", 
            "title": "EXAMPLE 2: Create PvsDiskLocator with All Fields"
        }, 
        {
            "location": "/#new-pvsdiskmaintenanceversion", 
            "text": "Create a Maintenance version for the Disk Locator.Returns a PvsDiskVersion when successful.  This required  Guid Guid or DiskLocatorId: GUID of the Disk LocatorFile to Enable Disk Maintenance on.  or this required ; resolution  string Name or DiskLocatorName: Name of the DiskLocator File to Enable Disk Maintenance on.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  One of these resolutions when needed  Guid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsDiskVersion: If successful, the newPvsDiskVersion object is returned.", 
            "title": "New-PvsDiskMaintenanceVersion"
        }, 
        {
            "location": "/#example-1-new-pvsdiskmaintenanceversion", 
            "text": "This example create a maintenance version for anexisting DiskLocator. It returns a PvsDiskVersion when successful.  $thePvsDiskVersion = New-PvsDiskMaintenanceVersion-Name theDiskLocator -SiteName theSite -StoreName theStore  if ($thePvsDiskVersion -ne $null)  {  $thePvsDiskVersion.Name    #display the name of the version file  }  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: New-PvsDiskMaintenanceVersion"
        }, 
        {
            "location": "/#new-pvsdiskupdatedevice", 
            "text": "Add a new Device related to a Disk that can beupdated.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15  Guid VirtualHostingPoolId: GUID of the VirtualHosting Pool. It is not used with VirtualHostingPoolName.  string VirtualHostingPoolName: Name of the VirtualHosting Pool.  Guid DiskLocatorId: GUID of the Disk Locator toupdate with this Device.  string Description: User description.Default=\"\" Max Length=250  PvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.  uint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901  uint AdTimestamp: The time the Active Directory machineaccount password was generated. Do not set this field, it is only setinternally by PVS. Default=0  uint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0  string DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255  string DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186  string DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000  DateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsDiskUpdateDevice: If successful, the newPvsDiskUpdateDevice object is returned.", 
            "title": "New-PvsDiskUpdateDevice"
        }, 
        {
            "location": "/#example-1-create-pvsdiskupdatedevice-with-minimum-fields", 
            "text": "Creates a PvsDiskUpdateDevice named theDevice forthe DiskLocatorId 2888f183-2f48-4771-b8dd-e5a44b2ee59b.  New-PvsDiskUpdateDevice -Name theDevice -DeviceMac\"00-11-22-33-44-55\" -VirtualHostingPoolName theVirtualHostingPool-DiskLocatorId \"2888f183-2f48-4771-b8dd-e5a44b2ee59b\"", 
            "title": "EXAMPLE 1: Create PvsDiskUpdateDevice with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvsdiskupdatedevice-with-all-fields", 
            "text": "Creates a PvsDiskUpdateDevice named theDevice forthe DiskLocatorId 2888f183-2f48-4771-b8dd-e5a44b2ee59b with all fields setdifferent than defaults.  New-PvsDiskUpdateDevice -Name theDevice -DeviceMac\"00-11-22-33-44-55\" -VirtualHostingPoolName theVirtualHostingPool-DiskLocatorId \"2888f183-2f48-4771-b8dd-e5a44b2ee59b\" -Description\"DiskUpdate Device\" -Port 6000 -LogLevel 3  Do not set AdTimestamp, AdSignature, DomainName,DomainObjectSID, DomainControllerName and DomainTimeCreated. They are only setinternally by PVS.", 
            "title": "EXAMPLE 2: Create PvsDiskUpdateDevice with All Fields"
        }, 
        {
            "location": "/#new-pvsfarmview", 
            "text": "Create a new View for the Farm.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or FarmViewName: name of the Farm View. MaxLength=50  string Description: User description.Default=\"\" Max Length=250  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to have confirmationwithout the Confirm parameter.  PvsFarmView: If successful, the new PvsFarmViewobject is returned.", 
            "title": "New-PvsFarmView"
        }, 
        {
            "location": "/#example-1-create-pvsfarmview-with-minimum-fields", 
            "text": "Creates a PvsFarmView named theFarmView.  New-PvsFarmView -Name theFarmView", 
            "title": "EXAMPLE 1: Create PvsFarmView with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvsfarmview-with-all-fields", 
            "text": "Creates a PvsFarmView named theFarmView with\"XenServer FarmView\" as the description.  New-PvsFarmView -Name theFarmView -Description\"XenServer FarmView\"", 
            "title": "EXAMPLE 2: Create PvsFarmView with All Fields"
        }, 
        {
            "location": "/#new-pvsserver", 
            "text": "Add a new Server to a Site.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or ServerName: Computer name with nospaces. ASCII computer name characters Max Length=21  Guid SiteId: GUID of the Site this Server is to be amember of. It is not used with SiteName.  string SiteName: Name of the Site this Server is tobe a member of. It is not used with SiteId.  string Description: User description.Default=\"\" Max Length=250  uint AdMaxPasswordAge: Number of days before apassword expires. Min=1, Max=30, Default=7  uint LicenseTimeout: Amount of seconds before alicense times out. Min=15, Max=300, Default=30  uint VDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0  uint FirstPort: Number of the first UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910  uint LastPort: Number of the last UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930  uint ThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs)  < = 1000.Min=1, Max=60, Default=8  uint BuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24  uint ServerCacheTimeout: Number of seconds to waitbefore considering another Server is down. Min=5, Max=60, Default=8  uint IoBurstSize: Number of bytes read/writes cansend in a burst of packets. Required thatIoBurstSize/(MaxTransmissionUnits-76) < =32. Min=4096, Max=61440,Default=32768  uint MaxTransmissionUnits: Ethernet maximumtransmission unit size for the protocol for use for Server and Device. Requiredthat IoBurstSize/(MaxTransmissionUnits-76) < =32. Min=502, Max=16426,Default=1506  uint MaxBootDevicesAllowed: Maximum number ofDevices allowed to boot simultaneously. Min=1, Max=1000, Default=500  uint MaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60  uint BootPauseSeconds: Number of seconds that aDevice will pause during login if its server busy. Min=1, Max=60, Default=10  SwitchParameter AdMaxPasswordAgeEnabled: If-AdMaxPasswordAgeEnabled is specified, Age the password.  SwitchParameter EventLoggingEnabled: If-EventLoggingEnabled is specified, event logging is enabled.  SwitchParameter NonBlockingIoDisabled: If-NonBlockingIoDisabled is specified, do not use non-Blocking IO.  string[] Ip: One or more streaming ip addresses.  uint InitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000, Default=50  uint InitialTransactionConnectionPoolSize: Initialsize of database connection pool for transactional queries. Min=1, Max=1000,Default=50  uint MaxQueryConnectionPoolSize: Maximum size ofdatabase connection pool for non-transactional queries. Min=1, Max=32767,Default=1000  uint MaxTransactionConnectionPoolSize: Maximum sizeof database connection pool for transactional queries. Min=1, Max=32767,Default=1000  uint RefreshInterval: Interval, in number ofseconds, the server should wait before refreshing settings. If set to 0, unuseddatabase connections are never released. Min=0, Max=32767, Default=300  uint UnusedDbConnectionTimeout: Interval, in numberof seconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300  uint BusyDbConnectionRetryCount: Number of times afailed database connection will be retried. Min=0, Max=32767, Default=2  uint BusyDbConnectionRetryInterval: Interval, innumber of milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25  uint LocalConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are local. A value of 0 disables thefeature. Min=0, Max=128, Default=4  uint RemoteConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are remote. A value of 0 disables thefeature. Min=0, Max=128, Default=4  string RamDiskIpAddress: IP address to use fortransferring the RAM Disk. When equal to 0.0.0.0 the server IP is used with thefirst part replaced with 233. Default=0.0.0.0  uint RamDiskTimeToLive: Time to live for theinvitation packet sent to Devices. Min=1, Max=255, Default=1  SwitchParameter RamDiskInvitationVariable: If-RamDiskInvitationVariable is specified, the Invitation Type is Variable. Bydefault it is Fixed.  uint RamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=4  uint LogFileSizeMax: Maximum size log files canreach in Megabytes. Min=1, Max=50, Default=5  uint LogFileBackupCopiesMax: Maximum number of logfile backups. Min=1, Max=50, Default=4  float PowerRating: A strictly relative rating ofthis Server's capabilities when compared to other Servers in the Store(s) itbelongs too; can be used to help tune load balancing. Min=0.1, Max=1000,Default=1  DateTime LastCeipUploadAttempt: Time that thisserver last attempted a CEIP upload. Default=Empty  DateTime LastBugReportAttempt: Time that this serverlast attempted to upload or generate a bug report bundle. Default=Empty  string LastBugReportStatus: Status of the last bugreport on this server. Default=\"\" Max Length=250  string LastBugReportResult: Status of the last bugreport on this server. Default=\"\" Max Length=4000  string LastBugReportSummary: Summary of the last bugreport on this server. Default=\"\" Max Length=250  SwitchParameter Confirm: The impact of this operationis \"low\". If -Confirm is specified, the operation will be confirmed.$ConfirmPreference can be set to \"low\" to have confirmation withoutthe Confirm parameter.  PvsServer: If successful, the new PvsServer objectis returned.", 
            "title": "New-PvsServer"
        }, 
        {
            "location": "/#example-1-create-pvsserver-with-minimum-fields", 
            "text": "Creates a PvsServer named theServer in theSite.  New-PvsServer -Name theServer -SiteName theSite -Ip192.168.0.33 192.168.0.34", 
            "title": "EXAMPLE 1: Create PvsServer with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvsserver-with-all-fields", 
            "text": "Creates a PvsServer named theServer in theSite withall fields set different than defaults.  New-PvsServer -Name theServer -SiteName theSite -Ip192.168.0.33 192.168.0.34 -Description \"XenServer Server\"-AdMaxPasswordAge 10 -LicenseTimeout 60 -VDiskCreatePacing 5 -FirstPort 7910-LastPort 7930 -ThreadsPerPort 16 -BuffersPerThread 48 -ServerCacheTimeout 15-IoBurstSize 13632 -MaxTransmissionUnits 502 -MaxBootDevicesAllowed 1000-MaxBootSeconds 120 -BootPauseSeconds 20 -AdMaxPasswordAgeEnabled-EventLoggingEnabled -NonBlockingIoDisabled -InitialQueryConnectionPoolSize 100-InitialTransactionConnectionPoolSize 100 -MaxQueryConnectionPoolSize 2000-MaxTransactionConnectionPoolSize 2000 -RefreshInterval 500-UnusedDbConnectionTimeout 500 -BusyDbConnectionRetryCount 5-BusyDbConnectionRetryInterval 50 -LocalConcurrentIoLimit 5-RemoteConcurrentIoLimit 5 -RamDiskIpAddress 192.168.5.5 -RamDiskTimeToLive 2-RamDiskInvitationVariable -RamDiskInvitationPeriod 20 -LogLevel 3-LogFileSizeMax 10 -LogFileBackupCopiesMax 5 -PowerRating 1.5", 
            "title": "EXAMPLE 2: Create PvsServer with All Fields"
        }, 
        {
            "location": "/#new-pvssite", 
            "text": "Create a new Site for the Farm.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or SiteName: Name of the Site. MaxLength=50  string Description: User description.Default=\"\" Max Length=250  uint InventoryFilePollingInterval: The number ofseconds between polls for Disk changes in the Stores. Min=1, Max=600,Default=60  SwitchParameter EnableDiskUpdate: If-EnableDiskUpdate is specified, the Disk Update will be enabled for the Site.By default Disk Update is disabled.  Guid DiskUpdateServerId: GUID of the Disk UpdateServer for the Site. Not used with DiskUpdateServerName.Default=00000000-0000-0000-0000-000000000000  string DiskUpdateServerName: Name of the Disk UpdateServer for the Site. Not used with DiskUpdateServerId. Default=\"\"  string MakUser: User name used for MAK activation.Default=\"\" Max Length=64  string MakPassword: User password used for MAKactivation. Default=\"\" Max Length=64  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsSite: If successful, the new PvsSite object isreturned.", 
            "title": "New-PvsSite"
        }, 
        {
            "location": "/#example-1-create-pvssite-with-minimum-fields", 
            "text": "Creates a PvsSite named theSite.  New-PvsSite -Name theSite", 
            "title": "EXAMPLE 1: Create PvsSite with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvssite-with-all-fields", 
            "text": "Creates a PvsSite named theSite with all fields setdifferent than defaults.  New-PvsSite -Name theSite -Description\"XenServer Site\" -InventoryFilePollingInterval 100 -EnableDiskUpdate-DiskUpdateServerName theServer -MakUser theMakUser -MakPassword theMakPassword", 
            "title": "EXAMPLE 2: Create PvsSite with All Fields"
        }, 
        {
            "location": "/#example-3-create-pvssite-and-assign-authgroup-to-it", 
            "text": "Creates a PvsSite named theSite and AssignsAuthGroup \"AD\\PVSSiteAdminGroup\" to it.  New-PvsSite -Name theSite | Grant-PvsAuthGroup-AuthGroupName \"AD\\PVSSiteAdminGroup\"", 
            "title": "EXAMPLE 3: Create PvsSite and Assign AuthGroup to it"
        }, 
        {
            "location": "/#new-pvssiteview", 
            "text": "Create a new View for a Site.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or SiteViewName: Name of the Site View.Max Length=50  Guid SiteId: GUID of the Site this View is to be amember of. It is not used with SiteName.  string SiteName: Name of the Site this View is to bea member of. It is not used with SiteId.  string Description: User description.Default=\"\" Max Length=250  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsSiteView: If successful, the new PvsSiteViewobject is returned.", 
            "title": "New-PvsSiteView"
        }, 
        {
            "location": "/#example-1-create-pvssiteview-with-minimum-fields", 
            "text": "Creates a PvsSiteView named theSiteView in theSite.  New-PvsSiteView -Name theSiteView -SiteName theSite", 
            "title": "EXAMPLE 1: Create PvsSiteView with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvssiteview-with-all-fields", 
            "text": "Creates a PvsSiteView named theSiteView in theSitewith \"XenServer SiteView\" as the description.  New-PvsSiteView -Name theSiteView -SiteName theSite-Description \"XenServer SiteView\"", 
            "title": "EXAMPLE 2: Create PvsSiteView with All Fields"
        }, 
        {
            "location": "/#new-pvsstore", 
            "text": "Create a new Store for the Farm.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or StoreName: Name of the Store. MaxLength=50  Guid SiteId: GUID of the Site where Administratorsof that Site can change this Store. Not used for Farm Stores. SiteName can beused instead. Default=00000000-0000-0000-0000-000000000000  string SiteName: Name of the Site whereAdministrators of that Site can change this Store. Not used for Farm Stores.SiteId can be used instead. Default=\"\"  string Description: User description.Default=\"\" Max Length=250  string Path: Default directory path that the Serversuse to access this Store. Max Length=255  string[] CachePath: Default Cache path(s) that theServers use with this Store. If none are specified the caches will be placed inthe WriteCache subdirectory of the Store path. Default=None  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsStore: If successful, the new PvsStore object isreturned.", 
            "title": "New-PvsStore"
        }, 
        {
            "location": "/#example-1-create-pvsstore-with-minimum-fields", 
            "text": "Creates a PvsStore named theStore with network sharepath.  New-PvsStore -Name theStore -Path\"\\\\thePath\\subDirectory\"", 
            "title": "EXAMPLE 1: Create PvsStore with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvsstore-with-all-fields", 
            "text": "Creates a PvsStore named theStore that only theSiteadministrators can change with all fields set different than defaults.  New-PvsStore -Name theStore -Path\"c:\\thePath\" -SiteName theSite -Description \"Local Server PathStore\" -CachePath \"c:\\thePath\\sub1\" \"c:\\thePath\\sub2\"", 
            "title": "EXAMPLE 2: Create PvsStore with All Fields"
        }, 
        {
            "location": "/#new-pvsupdatetask", 
            "text": "Create a new Update Task for a Store.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or UpdateTaskName: Name of the UpdateTask. It is unique within the Site. Max Length=50  Guid SiteId: GUID of the Site that this Update Taskis a member of. It is not used with SiteName.  string SiteName: Name of the Site that this UpdateTask is a member of. It is not used with SiteId.  string Description: User description. Default=\"\"Max Length=250  SwitchParameter Disabled: If -Disabled is specified,the updates will not be processed. By default the updates will be processed.  uint Hour: The hour of the day to perform the task.Min=0, Max=23, Default=0  uint Minute: The minute of the hour to perform thetask. Min=0, Max=59, Default=0  uint Recurrence: The update will reoccur on thisschedule. 0 = None, 1 = Daily, 2 = Every Weekday, 3 = Weekly, 4 = Monthly Date,5 = Monthly Type. Min=0, Max=5, Default=0  uint DayMask: Days selected values. 1 = Monday, 2 =Tuesday, 4 = Wednesday, 8 = Thursday, 16 = Friday, 32 = Saturday, 64 = Sunday,128 = Day. Default=0. This is used with Weekly and Monthly Type recurrence.Min=1, Max=255, Default=4  uint[] Date: Days of the month. Numbers from 1-31are the only valid values. This is used with Monthly Date recurrence.Default=\"\" Max Length=83  uint MonthlyOffset: When to happen monthly. 0 =None, 1 = First, 2 = Second, 3 = Third, 4 = Forth, 5 = Last. This is used withMonthly Type recurrence. Min=0, Max=5, Default=3  string EsdType: Esd to use. Valid values are SCCM orWSUS. If no value, a custom script is run on the client. Default=\"\"Max Length=50  string PreUpdateScript: Script file to run beforethe update starts. Default=\"\" Max Length=255  string PreVmScript: Script file to run before the VMis loaded. Default=\"\" Max Length=255  string PostUpdateScript: Script file to run afterthe update finishes. Default=\"\" Max Length=255  string PostVmScript: Script file to run after the VMis unloaded. Default=\"\" Max Length=255  string Domain: Domain to add the Disk UpdateDevice(s) to. If not included, the first Domain Controller found on the Serveris used. Default=\"\" Max Length=255  string OrganizationUnit: Organizational Unit to addthe Disk Update Device(s) to. This parameter is optional. If it is notspecified, the device is added to the built in Computers container. Child OU'sshould be delimited with forward slashes, e.g. \"ParentOU/ChildOU\".Special characters in an OU name, such as '\"', '#', '+', ',', ';', '>','=', must be escaped with a backslash. For example, an OU called\"commaIn,TheMiddle\" must be specified as\"commaIn\\,TheMiddle\". The old syntax of delimiting child OU's with acomma is still supported, but deprecated. Note that in this case, the child OUcomes first, e.g. \"ChildOU,ParentOU\". Default=\"\" MaxLength=255  uint PostUpdateApprove: Access to place the versionin after the update has occurred. 0 = Production, 1 = Test, 2 = Maintenance.Min=0, Max=2, Default=0  SwitchParameter Confirm: The impact of this operationis \"low\". If -Confirm is specified, the operation will be confirmed.$ConfirmPreference can be set to \"low\" to have confirmation withoutthe Confirm parameter.  PvsUpdateTask: If successful, the new PvsUpdateTaskobject is returned.", 
            "title": "New-PvsUpdateTask"
        }, 
        {
            "location": "/#example-1-create-pvsupdatetask-with-minimum-fields", 
            "text": "Creates a PvsUpdateTask named theUpdateTask intheSite. Since no EsdType is set, the update.bat in the client installdirectory will be executed for this task.  New-PvsUpdateTask -Name theUpdateTask -SiteNametheSite", 
            "title": "EXAMPLE 1: Create PvsUpdateTask with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvsupdatetask-for-daily-updates", 
            "text": "Creates a PvsUpdateTask named theUpdateTask intheSite for SCCM that occurs every day at midnight.  New-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Description \"Every day at Midnight\" -Recurrence 1 -Hour 0-Minute 0 -EsdType SCCM", 
            "title": "EXAMPLE 2: Create PvsUpdateTask for Daily Updates"
        }, 
        {
            "location": "/#example-3-create-pvsupdatetask-for-weekday-updates", 
            "text": "Creates a PvsUpdateTask named theUpdateTask intheSite for WSUS that occurs every weekday at midnight.  New-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Description \"Every weekday at Midnight\" -Recurrence 2 -Hour0 -Minute 0 -EsdType WSUS", 
            "title": "EXAMPLE 3: Create PvsUpdateTask for Weekday Updates"
        }, 
        {
            "location": "/#example-4-create-pvsupdatetask-for-weekly-updates", 
            "text": "Creates a PvsUpdateTask named theUpdateTask intheSite for SCCM that occurs every week on Monday and Friday at 3 AM.  New-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Description \"Every week on Monday and Friday at 3 AM\"-Recurrence 3 -Hour 3 -Minute 0 -DayMask 17 -EsdType SCCM", 
            "title": "EXAMPLE 4: Create PvsUpdateTask for Weekly Updates"
        }, 
        {
            "location": "/#example-5-create-pvsupdatetask-for-monthly-updates", 
            "text": "Creates a PvsUpdateTask named theUpdateTask intheSite for WSUS that occurs every month on the 1st and 15th at midnight.  New-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Description \"Every month on the 1st and 15th at Midnight\"-Recurrence 4 -Hour 0 -Minute 0 -Date 1 15 -EsdType WSUS", 
            "title": "EXAMPLE 5: Create PvsUpdateTask for Monthly Updates"
        }, 
        {
            "location": "/#example-6-create-pvsupdatetask-for-monthly-type-updates", 
            "text": "Creates a PvsUpdateTask named theUpdateTask intheSite for SCCM that is disabled and occurs every month on the 2nd Tuesday andThusday at Midnight.  New-PvsUpdateTask -Name theUpdateTask -SiteName theSite-Description \"Every month on the 2nd Tuesday and Thusday at Midnight\"-Disabled -Recurrence 5 -Hour 0 -Minute 0 -DayMask 10 -MonthlyOffset 2 -EsdTypeSCCM", 
            "title": "EXAMPLE 6: Create PvsUpdateTask for Monthly Type Updates"
        }, 
        {
            "location": "/#new-pvsvirtualhostingpool", 
            "text": "Add a new Virtual Hosting Pool to a Site.  All parameters that do not have a Default arerequired, unless only a few of a group are required.  string Name or VirtualHostingPoolName: Name of theVirtual Hosting Pool. It is unique within the Site. Max Length=50  Guid SiteId: GUID of the Site that this VirtualHosting Pool is a member of. It is not used with SiteName.  string SiteName: Name of the Site that this VirtualHosting Pool is a member of. It is not used with SiteId.  uint Type: Type of the Virtual Hosting Pool. 0 =Citrix XenServer, 1 = Microsoft SCVMM/Hyper-V, 2 = VMWare vSphere/ESX. Min=0,Max=2, Default=0  string Description: User description.Default=\"\" Max Length=250  string Server: Name or IP of the Host Server. MaxLength=255  uint Port: Port of the Host Server. Min=80,Max=65534, Default=80  string Datacenter: Datacenter of the Virtual HostingPool. Default=\"\" Max Length=250  uint UpdateLimit: Number of updates at the sametime. Min=2, Max=1000, Default=1000  uint UpdateTimeout: Timeout for updates. Min=2,Max=240, Default=60  uint ShutdownTimeout: Timeout for shutdown. Min=2,Max=30, Default=10  string UserName: Name to use when logging into theServer.  string Password: Password to use when logging intothe Server.  Guid XdHostingUnitUuid: UUID of XenDesktop HostingUnit Default=00000000-0000-0000-0000-000000000000  SwitchParameter XsPvsProxyEnabled: Enable XenServerPVS proxy when set to true Default=false  SwitchParameter PrepopulateEnabled: Enableprepopulate when set to true Default=false  Guid XsPvsSiteUuid: UUID of XenServerPVS_site  Default=00000000-0000-0000-0000-000000000000  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsVirtualHostingPool: If successful, the newPvsVirtualHostingPool object is returned.", 
            "title": "New-PvsVirtualHostingPool"
        }, 
        {
            "location": "/#example-1-create-pvsvirtualhostingpool-with-minimum-fields", 
            "text": "Creates a PvsVirtualHostingPool namedtheVirtualHostingPool in theSite.  New-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite -Server 192.168.0.33 -UserNametheUserName -Password thePassword", 
            "title": "EXAMPLE 1: Create PvsVirtualHostingPool with Minimum Fields"
        }, 
        {
            "location": "/#example-2-create-pvsvirtualhostingpool-with-all-fields", 
            "text": "Creates a PvsVirtualHostingPool namedtheVirtualHostingPool in theSite with all fields set different than defaults.  New-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite -Server 192.168.0.33 -UserNametheUserName -Password thePassword -Type 1 -Description \"AVirtualHostingPool\" -Port 180 -Datacenter Data -UpperLimit 500-UpdateTimeout 120 -ShutdownTimeout 20", 
            "title": "EXAMPLE 2: Create PvsVirtualHostingPool with All Fields"
        }, 
        {
            "location": "/#remove-pvsauthgroup", 
            "text": "Remove one or more AuthGroup Active Directory orWindows Group names.  One of these required  Guid[] Guid or AuthGroupId: GUID of the AuthGroup toDelete.  string[] Name or AuthGroupName: Name of theAuthGroup to Delete.  Optional  SwitchParameter Force: If -Force is specified, theAuthGroup will be Deleted even if being used, otherwise an error is returned ifbeing used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the members belowcan be used as the Object parameter or from a pileline:  AuthGroupId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsAuthGroup"
        }, 
        {
            "location": "/#example-1-remove-the-pvsauthgroup-with-name-theauthgroup", 
            "text": "This example removes the PvsAuthGroup namedtheAuthGroup.  Remove-PvsAuthGroup -Name theAuthGroup", 
            "title": "EXAMPLE 1: Remove the PvsAuthGroup with Name theAuthGroup"
        }, 
        {
            "location": "/#example-2-remove-the-pvsauthgroup-with-name-theauthgroup-using-pipe", 
            "text": "This example uses Get-PvsAuthGroup that returns thePvsAuthGroup named theAuthGroup that is piped to Remove-PvsAuthGroup forremoval.  Get-PvsAuthGroup -Name theAuthGroup |Remove-PvsAuthGroup", 
            "title": "EXAMPLE 2: Remove the PvsAuthGroup with Name theAuthGroup using Pipe"
        }, 
        {
            "location": "/#example-3-remove-all-pvsauthgroup-in-a-collection-even-when-still-used", 
            "text": "This example removes all PvsAuthGroup in theCollection named theCollection of the Site named theSite even when thePvsAuthGroup is still being used.  Remove-PvsAuthGroup -SiteName theSite-CollectionName theCollection -Force  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 3: Remove All PvsAuthGroup in a Collection Even When Still Used"
        }, 
        {
            "location": "/#example-4-remove-all-operator-pvsauthgroup-in-a-collection-using-pipe", 
            "text": "This example uses Get-PvsAuthGroup that returns alist of Role 400 PvsAuthGroup in the Collection named theCollection of the Sitenamed theSite that is piped to Remove-PvsAuthGroup for removal.  Get-PvsAuthGroup -SiteName theSite -CollectionNametheCollection -Fields Role | Where-Object {$_.Role -eq 400} |Remove-PvsAuthGroup  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"Where-Object {$_.Role -eq 400}\" onlyincludes PvsAuthGroup with Role equal to 400 (Collection Operator).", 
            "title": "EXAMPLE 4: Remove All Operator PvsAuthGroup in a Collection using Pipe"
        }, 
        {
            "location": "/#remove-pvscollection", 
            "text": "Remove one or more Collections.  This required  Guid[] Guid or CollectionId: GUID of the Collectionto Delete.  or this required ; resolution  string[] Name or CollectionName: Name of theCollection to Delete.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  CollectionId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or \"low\"to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsCollection"
        }, 
        {
            "location": "/#example-1-remove-the-pvscollection-with-name-thecollection", 
            "text": "This example removes the PvsCollection namedtheCollection in the Site named theSite.  Remove-PvsCollection -Name theCollection -SiteName theSite  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Remove the PvsCollection with Name theCollection"
        }, 
        {
            "location": "/#example-2-remove-the-pvscollection-with-name-thecollection-using-pipe", 
            "text": "This example uses Get-PvsCollection that returns thePvsCollection named theCollection in the Site named theSite that is piped toRemove-PvsCollection for removal.  Get-PvsCollection -Name theCollection -SiteNametheSite | Remove-PvsCollection  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 2: Remove the PvsCollection with Name theCollection using Pipe"
        }, 
        {
            "location": "/#remove-pvsdevice", 
            "text": "Remove one or more Devices.  One of these required  Guid[] Guid or DeviceId: GUID of the Device toDelete.  string[] Name or DeviceName: Name of the Device toDelete.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toDelete.  Guid[] CollectionId: GUID of the Collection todelete all Devices.  or this required ; resolution  string[] CollectionName: Name of the Collection todelete all Devices.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId or CollectionId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsDevice"
        }, 
        {
            "location": "/#example-1-remove-the-pvsdevice-with-name-thedevice", 
            "text": "This example removes the PvsDevice named theDevice.  Remove-PvsDevice -Name theDevice", 
            "title": "EXAMPLE 1: Remove the PvsDevice with Name theDevice"
        }, 
        {
            "location": "/#example-2-remove-the-pvsdevice-with-name-thedevice-using-pipe", 
            "text": "This example uses Get-PvsDevice that returns thePvsDevice named theDevice that is piped to Remove-PvsDevice for removal.  Get-PvsDevice -Name theDevice | Remove-PvsDevice", 
            "title": "EXAMPLE 2: Remove the PvsDevice with Name theDevice using Pipe"
        }, 
        {
            "location": "/#example-3-remove-all-pvsdevice-in-a-collection", 
            "text": "This example removes all PvsDevice in the Collectionnamed theCollection of the Site named theSite.  Remove-PvsDevice -SiteName theSite -CollectionNametheCollection  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 3: Remove All PvsDevice in a Collection"
        }, 
        {
            "location": "/#example-4-remove-all-not-active-pvsdevice-in-a-collection-using-pipe", 
            "text": "This example uses Get-PvsDevice that returns a listof not Active PvsDevice in the Collection named theCollection of the Site namedtheSite that is piped to Remove-PvsDevice for removal.  Get-PvsDevice -SiteName theSite -CollectionNametheCollection -Fields Active | Where-Object {$_.Active -eq $false} |Remove-PvsDevice  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"Where-Object {$_.Active -eq $false}\"only includes PvsDevice with Active equal to false.", 
            "title": "EXAMPLE 4: Remove All Not Active PvsDevice in a Collection using Pipe"
        }, 
        {
            "location": "/#remove-pvsdevicediskcachefile", 
            "text": "Remove one or more Disk cache files for Devices.  One of these required  Guid[] Guid or DeviceId: GUID of the Device toDelete Disk cache files.  string[] Name or DeviceName: Name of the Device to DeleteDisk cache files.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toDelete Disk cache files.  This required  Guid[] DiskLocatorId: GUID of the Disk Locator toDelete Disk cache files.  or this required ; resolution  string[] DiskLocatorName: Name of the Disk LocatorFile to Delete Disk cache files.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId or DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsDeviceDiskCacheFile"
        }, 
        {
            "location": "/#example-1-remove-the-pvsdevicediskcachefile-for-device-with-name-thedevice", 
            "text": "This example removes the PvsDeviceDiskCacheFile forthe Device named theDevice.  Remove-PvsDeviceDiskCacheFile -Name theDevice", 
            "title": "EXAMPLE 1: Remove the PvsDeviceDiskCacheFile for Device with Name theDevice"
        }, 
        {
            "location": "/#example-2-remove-the-pvsdevicediskcachefile-for-the-devices-that-use-thedisklocator-with-name-thedisklocator", 
            "text": "This example removes the PvsDeviceDiskCacheFile forthe Devices that use DiskLocator named theDiskLocator in Site named theSite andStore named theStore.  Remove-PvsDeviceDiskCacheFile -DiskLocatorNametheDiskLocator -SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Remove the PvsDeviceDiskCacheFile for the Devices that use theDiskLocator with Name theDiskLocator"
        }, 
        {
            "location": "/#remove-pvsdevicefromdomain", 
            "text": "Remove a Device, all Devices in a Collection or Viewfrom a Domain.  One of these required  Guid[] Guid or DeviceId: GUID of the Device toRemove from the Domain.  string[] Name or DeviceName: Name of the Device toRemove from the Domain.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toRemove from the Domain.  Guid[] CollectionId: GUID of the Collection toRemove all Devices from the Domain.  Guid[] SiteViewId: GUID of the Site View to Removeall Devices from the Domain.  Guid[] FarmViewId: GUID of the Farm View to Removeall Devices from the Domain.  string[] FarmViewName: Name of the Farm ViewtoRemove all Devices from the Domain.  or one of these required ; resolutions  string[] CollectionName: Name of the Collection toRemove all Devices from the Domain.  string[] SiteViewName: Name of the Site View toRemove all Devices from the Domain.  Optional  string[] Domain: Domain to remove the Device(s)from. If not included, the first Domain Controller found on the Server is used.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId, CollectionId, SiteViewId or FarmViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsDeviceFromDomain"
        }, 
        {
            "location": "/#example-1-remove-pvsdevicefromdomain-for-name", 
            "text": "Remove-PvsDeviceFromDomain -Name theDevice", 
            "title": "EXAMPLE 1: Remove-PvsDeviceFromDomain for Name"
        }, 
        {
            "location": "/#example-2-remove-pvsdevicefromdomain-for-name-with-domain", 
            "text": "Remove-PvsDeviceFromDomain -Name theDevice -DomaintheDomain", 
            "title": "EXAMPLE 2: Remove-PvsDeviceFromDomain for Name with Domain"
        }, 
        {
            "location": "/#example-3-remove-pvsdevicefromdomain-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theRemove-PvsDeviceFromDomain.  Get-PvsDevice -Name theDevice -Fields Guid |Remove-PvsDeviceFromDomain -Domain theDomain -OrganizationUnittheOrganizationUnit  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 3: Remove-PvsDeviceFromDomain for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-4-remove-pvsdevicefromdomain-for-farmviewname", 
            "text": "Remove-PvsDeviceFromDomain -FarmViewName theFarmView", 
            "title": "EXAMPLE 4: Remove-PvsDeviceFromDomain for FarmViewName"
        }, 
        {
            "location": "/#example-5-remove-pvsdevicefromdomain-for-farmviewname-with-domain", 
            "text": "Remove-PvsDeviceFromDomain -FarmViewName theFarmView-Domain theDomain", 
            "title": "EXAMPLE 5: Remove-PvsDeviceFromDomain for FarmViewName with Domain"
        }, 
        {
            "location": "/#example-6-remove-pvsdevicefromdomain-for-pvsfarmview-using-pipe", 
            "text": "The Get-PvsFarmView output is piped to theRemove-PvsDeviceFromDomain.  Get-PvsFarmView -Name theFarmView -Fields Guid |Remove-PvsDeviceFromDomain -Domain theDomain -OrganizationUnittheOrganizationUnit  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 6: Remove-PvsDeviceFromDomain for PvsFarmView Using Pipe"
        }, 
        {
            "location": "/#example-7-remove-pvsdevicefromdomain-for-collectionname", 
            "text": "Remove-PvsDeviceFromDomain -CollectionNametheCollection -SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 7: Remove-PvsDeviceFromDomain for CollectionName"
        }, 
        {
            "location": "/#example-8-remove-pvsdevicefromdomain-for-collectionname-with-domain", 
            "text": "Remove-PvsDeviceFromDomain -CollectionNametheCollection -SiteName theSite -Domain theDomain  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 8: Remove-PvsDeviceFromDomain for CollectionName with Domain"
        }, 
        {
            "location": "/#example-9-remove-pvsdevicefromdomain-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theRemove-PvsDeviceFromDomain.  Get-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Remove-PvsDeviceFromDomain -Domain theDomain-OrganizationUnit theOrganizationUnit  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 9: Remove-PvsDeviceFromDomain for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#example-10-remove-pvsdevicefromdomain-for-siteviewname", 
            "text": "Remove-PvsDeviceFromDomain -SiteViewName theSiteView-SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 10: Remove-PvsDeviceFromDomain for SiteViewName"
        }, 
        {
            "location": "/#example-11-remove-pvsdevicefromdomain-for-siteviewname-with-domain", 
            "text": "Remove-PvsDeviceFromDomain -SiteViewName theSiteView-SiteName theSite -Domain theDomain  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 11: Remove-PvsDeviceFromDomain for SiteViewName with Domain"
        }, 
        {
            "location": "/#example-12-remove-pvsdevicefromdomain-for-pvssiteview-using-pipe", 
            "text": "The Get-PvsSiteView output is piped to theRemove-PvsDeviceFromDomain.  Get-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Remove-PvsDeviceFromDomain -Domain theDomain -OrganizationUnittheOrganizationUnit  The -Fields parameter with only the needed fields specifiedmakes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 12: Remove-PvsDeviceFromDomain for PvsSiteView Using Pipe"
        }, 
        {
            "location": "/#remove-pvsdevicefromview", 
            "text": "Remove a Device from a View.  One of these required  Guid[] Guid or DeviceId: GUID of the Device toRemove.  string[] Name or DeviceName: Name of the Device toRemove.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toRemove.  One of these required  Guid[] SiteViewId: GUID of the Site View to Removethe Devices from.  Guid[] FarmViewId: GUID of the Farm View to Removethe Devices from.  string[] FarmViewName: Name of the Farm View toRemove the Devices from.  or this required ; resolution  string[] SiteViewName: Name of the Site View toRemove the Devices from.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId, SiteViewId or FarmViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Remove-PvsDeviceFromView"
        }, 
        {
            "location": "/#example-1-remove-pvsdevicefromview-for-pvsdevice-to-pvsfarmview", 
            "text": "Remove-PvsDeviceFromView -Name theDevice-PvsFarmViewName thePvsFarmView", 
            "title": "EXAMPLE 1: Remove-PvsDeviceFromView for PvsDevice to PvsFarmView"
        }, 
        {
            "location": "/#example-2-remove-pvsdevicefromview-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to the Remove-PvsDeviceFromView.  Get-PvsDevice -Name theDevice -Fields Guid |Remove-PvsDeviceFromView -PvsFarmViewName thePvsFarmView  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Remove-PvsDeviceFromView for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-3-remove-pvsdevicefromview-for-pvsfarmview-using-pipe", 
            "text": "The Get-PvsFarmView output is piped to theRemove-PvsDeviceFromView.  Get-PvsFarmView -Name theFarmView -Fields Guid |Remove-PvsDeviceFromView -Name theDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 3: Remove-PvsDeviceFromView for PvsFarmView Using Pipe"
        }, 
        {
            "location": "/#example-4-remove-pvsdevicefromview-for-pvsdevice-to-pvssiteview", 
            "text": "Remove-PvsDeviceFromView -Name theDevice-SiteViewName theSiteView -SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 4: Remove-PvsDeviceFromView for PvsDevice to PvsSiteView"
        }, 
        {
            "location": "/#example-5-remove-pvsdevicefromview-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theRemove-PvsDeviceFromView.  Get-PvsDevice -Name theDevice -Fields Guid | Remove-PvsDeviceFromView-SiteViewName theSiteView -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 5: Remove-PvsDeviceFromView for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-6-remove-pvsdevicefromview-for-pvssiteview-using-pipe", 
            "text": "The Get-PvsSiteView output is piped to theRemove-PvsDeviceFromView.  Get-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Remove-PvsDeviceFromView -Name theDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 6: Remove-PvsDeviceFromView for PvsSiteView Using Pipe"
        }, 
        {
            "location": "/#remove-pvsdirectory", 
            "text": "Remove a Directory on the Server specified.  One of these required  Guid[] Guid or ServerId: GUID of the Server toremove a Directory from. The directory must be empty to be removed.  string[] Name or ServerName: Name of the Server toremove a Directory from. The directory must be empty to be removed.  This required  string[] Path: Path of the Directory to remove.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsDirectory"
        }, 
        {
            "location": "/#example-1-remove-pvsdirectory-for-name", 
            "text": "Remove-PvsDirectory -Name theServer -Path\"C:\\directory\\subdirectory\"", 
            "title": "EXAMPLE 1: Remove-PvsDirectory for Name"
        }, 
        {
            "location": "/#example-2-remove-pvsdirectory-for-pvsserver-using-pipe", 
            "text": "The Get-PvsServer output is piped to theRemove-PvsDirectory.  Get-PvsServer -Name theServer -Fields Guid |Remove-PvsDirectory -Path \"C:\\directory\\subdirectory\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Remove-PvsDirectory for PvsServer Using Pipe"
        }, 
        {
            "location": "/#remove-pvsdiskfromupdatetask", 
            "text": "Remove a Disk from an Update Task.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to Remove.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator File to Remove.  One of these optional  Guid[] UpdateTaskId: GUID of the Update Task toRemove a Disk.  string[] UpdateTaskName: Name of the Update Task toRemove a Disk.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId or UpdateTaskId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsDiskFromUpdateTask"
        }, 
        {
            "location": "/#example-1-remove-diskfromupdatetask-for-pvsdisklocator-to-pvsupdatetask", 
            "text": "Remove-DiskFromUpdateTask -Name theDiskLocator-UpdateTaskName theUpdateTask -SiteName theSite -StoreName theStore  UpdateTaskId can be used instead of UpdateTaskNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Remove-DiskFromUpdateTask for PvsDiskLocator to PvsUpdateTask"
        }, 
        {
            "location": "/#example-2-remove-diskfromupdatetask-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to the Remove-DiskFromUpdateTask.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Remove-DiskFromUpdateTask-UpdateTaskName theUpdateTask -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Remove-DiskFromUpdateTask for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-3-remove-diskfromupdatetask-for-pvsupdatetask-using-pipe", 
            "text": "The Get-PvsUpdateTask output is piped to theRemove-DiskFromUpdateTask.  Get-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Fields Guid | Remove-DiskFromUpdateTask -Name theDiskLocator -SiteNametheSite -StoreName theStore  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 3: Remove-DiskFromUpdateTask for PvsUpdateTask Using Pipe"
        }, 
        {
            "location": "/#remove-pvsdisklocator", 
            "text": "Remove one or more Disk Locators.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to Delete.  or one of these required ; resolutions  string[] Name or DiskLocatorName: Name of the DiskLocator File to Delete.  Guid[] StoreId: GUID of the Store to delete allDiskLocators.  string[] StoreName: Name of the Store to delete allDiskLocators.  Optional  SwitchParameter DeleteDiskFile: If -DiskFile isspecified, the Disk File will be deleted.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store to delete allDiskLocators.  string[] StoreName: Name of the Store to delete allDiskLocators.  Instead of a parameter that matches one of the memberslisted  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId or StoreId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsDiskLocator"
        }, 
        {
            "location": "/#example-1-remove-the-pvsdisklocator-with-name-thedisklocator", 
            "text": "This example removes the PvsDiskLocator namedtheDiskLocator in the Site named theSite and Store named theStore and deletesthe vDisk file.  Remove-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -DeleteDiskFile  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Remove the PvsDiskLocator with Name theDiskLocator"
        }, 
        {
            "location": "/#example-2-remove-the-pvsdisklocator-with-name-thedisklocator-using-pipe", 
            "text": "This example uses Get-PvsDiskLocator that returnsthe PvsDiskLocator named theDiskLocator in the Site named theSite and Storenamed theStore that is piped to Remove-PvsDiskLocator for removal.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore | Remove-PvsDiskLocator  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Remove the PvsDiskLocator with Name theDiskLocator using Pipe"
        }, 
        {
            "location": "/#remove-pvsdisklocatorfromdevice", 
            "text": "Remove a Disk Locator from a Device, Collection,View, or Site.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to Remove.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator File to Remove.  One of these optional  Guid[] DeviceId: GUID of the Device to Remove a DiskLocator.  string[] DeviceName: Name of the Device to Remove aDisk Locator.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toRemove a Disk Locator.  Guid[] CollectionId: GUID of the Collection toRemove a Disk Locator or Locators from all Devices.  Guid[] SiteViewId: GUID of the Site View to Remove aDisk Locator from all Devices.  Guid[] FarmViewId: GUID of the Farm View to Remove aDisk Locator from all Devices.  string[] FarmViewName: Name of the Farm View toRemove a Disk Locator from all Devices.  or one of these optional ; resolutions  string[] CollectionName: Name of the Collection toRemove a Disk Locator or Locators from all Devices.  string[] SiteViewName: Name of the Site View toRemove a Disk Locator from all Devices.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId, DeviceId, CollectionId, SiteViewId orFarmViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsDiskLocatorFromDevice"
        }, 
        {
            "location": "/#example-1-remove-pvsdisklocatorfromdevice-for-pvsdisklocator-to-pvsdevice", 
            "text": "Remove-PvsDiskLocatorFromDevice -Name theDiskLocator-DeviceName theDevice -SiteName theSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator to PvsDevice"
        }, 
        {
            "location": "/#example-2-remove-pvsdisklocatorfromdevice-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to the Remove-PvsDiskLocatorFromDevice.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Remove-PvsDiskLocatorFromDevice-DeviceName theDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-3-remove-pvsdisklocatorfromdevice-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theRemove-PvsDiskLocatorFromDevice.  Get-PvsDevice -Name theDevice -Fields Guid |Remove-PvsDiskLocatorFromDevice -Name theDiskLocator -SiteName theSite-StoreName theStoreName  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 3: Remove-PvsDiskLocatorFromDevice for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-4-remove-pvsdisklocatorfromdevice-for-pvsdisklocator-topvscollection", 
            "text": "Remove-PvsDiskLocatorFromDevice -Name theDiskLocator-CollectionName theCollection -SiteName theSite -StoreName theStore", 
            "title": "EXAMPLE 4: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator toPvsCollection"
        }, 
        {
            "location": "/#example-5-remove-pvsdisklocatorfromdevice-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theRemove-PvsDiskLocatorFromDevice.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Remove-PvsDiskLocatorFromDevice-CollectionName theCollection -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 5: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-6-remove-pvsdisklocatorfromdevice-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theRemove-PvsDiskLocatorFromDevice.  Get-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Remove-PvsDiskLocatorFromDevice -Name theDiskLocator-SiteName theSite -StoreName theStoreName  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 6: Remove-PvsDiskLocatorFromDevice for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#example-7-remove-pvsdisklocatorfromdevice-for-pvsdisklocator-topvsfarmview", 
            "text": "Remove-PvsDiskLocatorFromDevice -Name theDiskLocator-FarmViewName theFarmView -SiteName theSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 7: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator toPvsFarmView"
        }, 
        {
            "location": "/#example-8-remove-pvsdisklocatorfromdevice-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theRemove-PvsDiskLocatorFromDevice.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Remove-PvsDiskLocatorFromDevice-FarmViewName theFarmView  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 8: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-9-remove-pvsdisklocatorfromdevice-for-pvsfarmview-using-pipe", 
            "text": "The Get-PvsFarmView output is piped to theRemove-PvsDiskLocatorFromDevice.  Get-PvsFarmView -Name theFarmView -Fields Guid | Remove-PvsDiskLocatorFromDevice-Name theDiskLocator -SiteName theSite -StoreName theStoreName  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 9: Remove-PvsDiskLocatorFromDevice for PvsFarmView Using Pipe"
        }, 
        {
            "location": "/#example-10-remove-pvsdisklocatorfromdevice-for-pvsdisklocator-topvssiteview", 
            "text": "Remove-PvsDiskLocatorFromDevice -Name theDiskLocator-SiteViewName theSiteView -SiteName theSite -StoreName theStore", 
            "title": "EXAMPLE 10: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator toPvsSiteView"
        }, 
        {
            "location": "/#example-11-remove-pvsdisklocatorfromdevice-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theRemove-PvsDiskLocatorFromDevice.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Remove-PvsDiskLocatorFromDevice-SiteViewName theSiteView -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 11: Remove-PvsDiskLocatorFromDevice for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-12-remove-pvsdisklocatorfromdevice-for-pvssiteview-using-pipe", 
            "text": "The Get-PvsSiteView output is piped to theRemove-PvsDiskLocatorFromDevice.  Get-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Remove-PvsDiskLocatorFromDevice -Name theDiskLocator -SiteNametheSite -StoreName theStoreName  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 12: Remove-PvsDiskLocatorFromDevice for PvsSiteView Using Pipe"
        }, 
        {
            "location": "/#remove-pvsdiskupdatedevice", 
            "text": "Remove one or more Disk Update Devices.  One of these required  Guid[] Guid or DeviceId: GUID of the Disk UpdateDevice to Delete.  string[] Name or DeviceName: Name of the Disk UpdateDevice to Delete.  PvsPhysicalAddress[] DeviceMac: MAC of the DiskUpdate Device to Delete.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsDiskUpdateDevice"
        }, 
        {
            "location": "/#example-1-remove-the-pvsdiskupdatedevice-with-name-thedevice", 
            "text": "This example removes the PvsDiskUpdateDevice namedtheDevice.  Remove-PvsDiskUpdateDevice -Name theDevice", 
            "title": "EXAMPLE 1: Remove the PvsDiskUpdateDevice with Name theDevice"
        }, 
        {
            "location": "/#example-2-remove-the-pvsdiskupdatedevice-with-name-thedevice-using-pipe", 
            "text": "This example uses Get-PvsDiskUpdateDevice thatreturns the PvsDiskUpdateDevice named theDevice that is piped toRemove-PvsDiskUpdateDevice for removal.  Get-PvsDiskUpdateDevice -Name theDevice |Remove-PvsDiskUpdateDevice", 
            "title": "EXAMPLE 2: Remove the PvsDiskUpdateDevice with Name theDevice using Pipe"
        }, 
        {
            "location": "/#example-3-remove-all-not-active-pvsdiskupdatedevice-for-a-disklocatorusing-pipe", 
            "text": "This example uses Get-PvsDiskUpdateDevice thatreturns a list of not Active PvsDiskUpdateDevice for the DiskLocator namedtheDiskLocator of the Site named theSite and Store named theStore that is pipedto Remove-PvsDiskUpdateDevice for removal.  Get-PvsDiskUpdateDevice -DiskLocatorNametheDiskLocator -SiteName theSite -StoreName theStore -Fields Active |Where-Object {$_.Active -eq $false} | Remove-PvsDiskUpdateDevice  DiskLocatorId can be used instead of DiskLocatorNameso that the SiteName or SiteId and StoreName or StoreId are not also needed.  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"Where-Object {$_.Active -eq $false}\"only includes PvsDiskUpdateDevice with Active equal to false.", 
            "title": "EXAMPLE 3: Remove All Not Active PvsDiskUpdateDevice for a DiskLocatorusing Pipe"
        }, 
        {
            "location": "/#remove-pvsdiskversion", 
            "text": "Remove the latest Disk version or no longer neededversion if no Devices are currently booted from that version.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to Delete the Version from.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator File to Delete the Version from.  Optional  uint Version: Specifies the version that should bedeleted. Used when deleting versions that are no longer needed because of aMerge.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  (DiskLocatorId and Version) or DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsDiskVersion"
        }, 
        {
            "location": "/#example-1-remove-the-highest-pvsdiskversion-with-name-thedisklocator", 
            "text": "This example removes the highest PvsDiskVersion forDiskLocator named theDiskLocator in the Site named theSite and Store namedtheStore.  Remove-PvsDiskVersion -Name theDiskLocator -SiteNametheSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Remove the Highest PvsDiskVersion with Name theDiskLocator"
        }, 
        {
            "location": "/#example-2-remove-the-highest-pvsdiskversion-with-name-thedisklocator-usingpipe", 
            "text": "This example uses Get-PvsDiskLocator that returnsthe PvsDiskLocator named theDiskLocator in the Site named theSite and Storenamed theStore that is piped to Remove-PvsDiskVersion for removal of thehighest version.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore | Remove-PvsDiskVersion  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Remove the highest PvsDiskVersion with Name theDiskLocator usingPipe"
        }, 
        {
            "location": "/#example-3-remove-the-version-pvsdiskversion-with-name-thedisklocator", 
            "text": "This example removes the Version PvsDiskVersion forDiskLocator named theDiskLocator in the Site named theSite and Store namedtheStore.  Remove-PvsDiskVersion -Name theDiskLocator -SiteNametheSite -StoreName theStore -Version 5  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 3: Remove the Version PvsDiskVersion with Name theDiskLocator"
        }, 
        {
            "location": "/#example-4-remove-the-version-pvsdiskversion-with-name-thedisklocator-usingpipe", 
            "text": "This example uses Get-PvsDiskVersion that returnsthe Version PvsDiskVersion for DiskLocator named theDiskLocator in the Sitenamed theSite and Store named theStore that is piped to Remove-PvsDiskVersionfor removal of the specified version.  Get-PvsDiskVersion -Name theDiskLocator -SiteNametheSite -StoreName theStore -Version 5 | Remove-PvsDiskVersion  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Remove the Version PvsDiskVersion with Name theDiskLocator usingPipe"
        }, 
        {
            "location": "/#remove-pvsfarmview", 
            "text": "Remove one or more Views from the Farm.  One of these required  Guid[] Guid or FarmViewId: GUID of the Farm View toDelete.  string[] Name or FarmViewName: Name of the Farm Viewto Delete.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  FarmViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsFarmView"
        }, 
        {
            "location": "/#example-1-remove-the-pvsfarmview-with-name-thefarmview", 
            "text": "This example removes the PvsFarmView namedtheFarmView.  Remove-PvsFarmView -Name theFarmView", 
            "title": "EXAMPLE 1: Remove the PvsFarmView with Name theFarmView"
        }, 
        {
            "location": "/#example-2-remove-the-pvsfarmview-with-name-thefarmview-using-pipe", 
            "text": "This example uses Get-PvsFarmView that returns thePvsFarmView named theFarmView that is piped to Remove-PvsFarmView for removal.  Get-PvsFarmView -Name theFarmView |Remove-PvsFarmView", 
            "title": "EXAMPLE 2: Remove the PvsFarmView with Name theFarmView using Pipe"
        }, 
        {
            "location": "/#remove-pvsserver", 
            "text": "Remove one or more Servers.  One of these required  Guid[] Guid or ServerId: GUID of the Server toDelete.  string[] Name or ServerName: Name of the Server toDelete.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsServer"
        }, 
        {
            "location": "/#example-1-remove-the-pvsserver-with-name-theserver", 
            "text": "This example removes the PvsServer named theServer.  Remove-PvsServer -Name theServer", 
            "title": "EXAMPLE 1: Remove the PvsServer with Name theServer"
        }, 
        {
            "location": "/#example-2-remove-the-pvsserver-with-name-theserver-using-pipe", 
            "text": "This example uses Get-PvsServer that returns thePvsServer named theServer that is piped to Remove-PvsServer for removal.  Get-PvsServer -Name theServer | Remove-PvsServer", 
            "title": "EXAMPLE 2: Remove the PvsServer with Name theServer using Pipe"
        }, 
        {
            "location": "/#remove-pvsserverstore", 
            "text": "Remove the connection from Servers to Stores.  One of these required  Guid[] Guid or ServerId: GUID of a Server that usesthe path to get to the Store.  string[] Name or ServerName: Name of a Server thatuses the path to get to the Store.  One of these required  Guid[] StoreId: GUID of the Store.  string[] StoreName: Name of the Store.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId or StoreId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsServerStore"
        }, 
        {
            "location": "/#example-1-remove-the-pvsserverstore-with-name-theserverthestore", 
            "text": "This example removes the PvsServerStore for theServer named theServer and Store named theStore.  Remove-PvsServerStore -Name theServer -StoreNametheStore", 
            "title": "EXAMPLE 1: Remove the PvsServerStore with Name theServer/theStore"
        }, 
        {
            "location": "/#example-2-remove-the-pvsserverstore-with-name-theserverthestore-usingpipe", 
            "text": "This example uses Get-PvsServer that returns thePvsServer named theServer that is piped to Remove-PvsServerStore with StoreNametheStore for removal.  Get-PvsServer -Name theServer |Remove-PvsServerStore -StoreName theStore", 
            "title": "EXAMPLE 2: Remove the PvsServerStore with Name theServer/theStore usingPipe"
        }, 
        {
            "location": "/#remove-pvssite", 
            "text": "Remove one or more Sites.  One of these required  Guid[] Guid or SiteId: GUID of the Site to Delete.  string[] Name or SiteName: Name of the Site toDelete.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  SiteId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsSite"
        }, 
        {
            "location": "/#example-1-remove-the-pvssite-with-name-thesite", 
            "text": "This example removes the PvsSite named theSite.  Remove-PvsSite -Name theSite", 
            "title": "EXAMPLE 1: Remove the PvsSite with Name theSite"
        }, 
        {
            "location": "/#example-2-remove-the-pvssite-with-name-thesite-using-pipe", 
            "text": "This example uses Get-PvsSite that returns thePvsSite named theSite that is piped to Remove-PvsSite for removal.  Get-PvsSite -Name theSite | Remove-PvsSite", 
            "title": "EXAMPLE 2: Remove the PvsSite with Name theSite using Pipe"
        }, 
        {
            "location": "/#remove-pvssiteview", 
            "text": "Remove one or more Views from Sites.  This required  Guid[] Guid or SiteViewId: GUID of the Site View toDelete.  or this required ; resolution  string[] Name or SiteViewName: Name of the Site Viewto Delete.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the members belowcan be used as the Object parameter or from a pileline:  SiteViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or \"low\"to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsSiteView"
        }, 
        {
            "location": "/#example-1-remove-the-pvssiteview-with-name-thesiteview", 
            "text": "This example removes the PvsSiteView namedtheSiteView in the Site named theSite.  Remove-PvsSiteView -Name theSiteView -SiteNametheSite  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Remove the PvsSiteView with Name theSiteView"
        }, 
        {
            "location": "/#example-2-remove-the-pvssiteview-with-name-thesiteview-using-pipe", 
            "text": "This example uses Get-PvsSiteView that returns thePvsSiteView named theSiteView in the Site named theSite that is piped toRemove-PvsSiteView for removal.  Get-PvsSiteView -Name theSiteView -SiteName theSite| Remove-PvsSiteView  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 2: Remove the PvsSiteView with Name theSiteView using Pipe"
        }, 
        {
            "location": "/#remove-pvsstore", 
            "text": "Remove one or more Stores.  One of these required  Guid[] Guid or StoreId: GUID of the Store to Delete.  string[] Name or StoreName: Name of the Store toDelete.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  StoreId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsStore"
        }, 
        {
            "location": "/#example-1-remove-the-pvsstore-with-name-thestore", 
            "text": "This example removes the PvsStore named theStore.  Remove-PvsStore -Name theStore", 
            "title": "EXAMPLE 1: Remove the PvsStore with Name theStore"
        }, 
        {
            "location": "/#example-2-remove-the-pvsstore-with-name-thestore-using-pipe", 
            "text": "This example uses Get-PvsStore that returns thePvsStore named theStore that is piped to Remove-PvsStore for removal.  Get-PvsStore -Name theStore | Remove-PvsStore", 
            "title": "EXAMPLE 2: Remove the PvsStore with Name theStore using Pipe"
        }, 
        {
            "location": "/#remove-pvsupdatetask", 
            "text": "Remove one or more Update Tasks from Sites.  This required  Guid[] Guid or UpdateTaskId: GUID of the Update Taskto Delete.  or this required ; resolution  string[] Name or UpdateTaskName: Name of the UpdateTask to Delete.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  UpdateTaskId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsUpdateTask"
        }, 
        {
            "location": "/#example-1-remove-the-pvsupdatetask-with-name-theupdatetask", 
            "text": "This example removes the PvsUpdateTask namedtheUpdateTask in the Site named theSite.  Remove-PvsUpdateTask -Name theUpdateTask -SiteNametheSite  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Remove the PvsUpdateTask with Name theUpdateTask"
        }, 
        {
            "location": "/#example-2-remove-the-pvsupdatetask-with-name-theupdatetask-using-pipe", 
            "text": "This example uses Get-PvsUpdateTask that returns thePvsUpdateTask named theUpdateTask in the Site named theSite that is piped toRemove-PvsUpdateTask for removal.  Get-PvsUpdateTask -Name theUpdateTask -SiteNametheSite | Remove-PvsUpdateTask  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 2: Remove the PvsUpdateTask with Name theUpdateTask using Pipe"
        }, 
        {
            "location": "/#remove-pvsvirtualhostingpool", 
            "text": "Remove one or more Virtual Hosting Pools from Sites.  This required  Guid[] Guid or VirtualHostingPoolId: GUID of theVirtual Hosting Pool to Delete.  or this required ; resolution  string[] Name or VirtualHostingPoolName: Name of theVirtual Hosting Pool to Delete.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  VirtualHostingPoolId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Remove-PvsVirtualHostingPool"
        }, 
        {
            "location": "/#example-1-remove-the-pvsvirtualhostingpool-with-name-thevirtualhostingpool", 
            "text": "This example removes the PvsVirtualHostingPool namedtheVirtualHostingPool in the Site named theSite.  Remove-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Remove the PvsVirtualHostingPool with Name theVirtualHostingPool"
        }, 
        {
            "location": "/#example-2-remove-the-pvsvirtualhostingpool-with-name-thevirtualhostingpoolusing-pipe", 
            "text": "This example uses Get-PvsVirtualHostingPool thatreturns the PvsVirtualHostingPool named theVirtualHostingPool in the Site namedtheSite that is piped to Remove-PvsVirtualHostingPool for removal.  Get-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite | Remove-PvsVirtualHostingPool  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 2: Remove the PvsVirtualHostingPool with Name theVirtualHostingPoolusing Pipe"
        }, 
        {
            "location": "/#reset-pvsdatabase", 
            "text": "Cause the database location to be reloaded.", 
            "title": "Reset-PvsDatabase"
        }, 
        {
            "location": "/#example-1-reset-pvsdatabase", 
            "text": "Reset-PvsDatabase", 
            "title": "EXAMPLE 1: Reset-PvsDatabase"
        }, 
        {
            "location": "/#reset-pvsdevicefordomain", 
            "text": "Reset a Device, all Devices in a Collection or Viewfor a Domain.  One of these required  Guid[] Guid or DeviceId: GUID of the Device to Resetfor the Domain.  string[] Name or DeviceName: Name of the Device toReset for the Domain.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toReset for the Domain.  Guid[] CollectionId: GUID of the Collection to Resetall Devices for the Domain.  Guid[] SiteViewId: GUID of the Site View to Resetall Devices for the Domain.  Guid[] FarmViewId: GUID of the Farm View to Resetall Devices for the Domain.  string[] FarmViewName: Name of the Farm View toReset all Devices for the Domain.  or one of these required ; resolutions  string[] CollectionName: Name of the Collection toReset all Devices for the Domain.  string[] SiteViewName: Name of the Site View toReset all Devices for the Domain.  Optional  string[] Domain: Domain to Reset the Device(s) for.If not included, the first Domain Controller found on the Server is used.  string[] OrganizationUnit: Organizational Unit toreset the Device(s) to. This parameter is optional. If it is not specified, theaccount remains in its existing OU. Child OU's should be delimited with forwardslashes, e.g. \"ParentOU/ChildOU\". Special characters in an OU name,such as '\"', '#', '+', ',', ';', '>', '=', must be escaped with abackslash. For example, an OU called \"commaIn,TheMiddle\" must bespecified as \"commaIn\\,TheMiddle\". The old syntax of delimiting childOU's with a comma is still supported, but deprecated. Note that in this case,the child OU comes first, e.g. \"ChildOU,ParentOU\".  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId, CollectionId, SiteViewId or FarmViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Reset-PvsDeviceForDomain"
        }, 
        {
            "location": "/#example-1-reset-pvsdevicefordomain-for-name", 
            "text": "Reset-PvsDeviceForDomain -Name theDevice", 
            "title": "EXAMPLE 1: Reset-PvsDeviceForDomain for Name"
        }, 
        {
            "location": "/#example-2-reset-pvsdevicefordomain-for-name-with-domain", 
            "text": "Reset-PvsDeviceForDomain -Name theDevice -DomaintheDomain", 
            "title": "EXAMPLE 2: Reset-PvsDeviceForDomain for Name with Domain"
        }, 
        {
            "location": "/#example-3-reset-pvsdevicefordomain-for-name-with-domain-andorganizationunit", 
            "text": "Reset-PvsDeviceForDomain -Name theDevice -DomaintheDomain -OrganizationUnit theOrganizationUnit", 
            "title": "EXAMPLE 3: Reset-PvsDeviceForDomain for Name with Domain andOrganizationUnit"
        }, 
        {
            "location": "/#example-4-reset-pvsdevicefordomain-for-pvsdevice-using-pipe", 
            "text": "The Get-PvsDevice output is piped to theReset-PvsDeviceForDomain.  Get-PvsDevice -Name theDevice -Fields Guid |Reset-PvsDeviceForDomain -Domain theDomain -OrganizationUnittheOrganizationUnit  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 4: Reset-PvsDeviceForDomain for PvsDevice Using Pipe"
        }, 
        {
            "location": "/#example-5-reset-pvsdevicefordomain-for-farmviewname", 
            "text": "Reset-PvsDeviceForDomain -FarmViewName theFarmView", 
            "title": "EXAMPLE 5: Reset-PvsDeviceForDomain for FarmViewName"
        }, 
        {
            "location": "/#example-6-reset-pvsdevicefordomain-for-farmviewname-with-domain", 
            "text": "Reset-PvsDeviceForDomain -FarmViewName theFarmView-Domain theDomain", 
            "title": "EXAMPLE 6: Reset-PvsDeviceForDomain for FarmViewName with Domain"
        }, 
        {
            "location": "/#example-7-reset-pvsdevicefordomain-for-farmviewname-with-domain-andorganizationunit", 
            "text": "Reset-PvsDeviceForDomain -FarmViewName theFarmView-Domain theDomain -OrganizationUnit theOrganizationUnit", 
            "title": "EXAMPLE 7: Reset-PvsDeviceForDomain for FarmViewName with Domain andOrganizationUnit"
        }, 
        {
            "location": "/#example-8-reset-pvsdevicefordomain-for-pvsfarmview-using-pipe", 
            "text": "The Get-PvsFarmView output is piped to theReset-PvsDeviceForDomain.  Get-PvsFarmView -Name theFarmView -Fields Guid |Reset-PvsDeviceForDomain -Domain theDomain -OrganizationUnittheOrganizationUnit  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 8: Reset-PvsDeviceForDomain for PvsFarmView Using Pipe"
        }, 
        {
            "location": "/#example-9-reset-pvsdevicefordomain-for-collectionname", 
            "text": "Reset-PvsDeviceForDomain -CollectionNametheCollection -SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 9: Reset-PvsDeviceForDomain for CollectionName"
        }, 
        {
            "location": "/#example-10-reset-pvsdevicefordomain-for-collectionname-with-domain", 
            "text": "Reset-PvsDeviceForDomain -CollectionNametheCollection -SiteName theSite -Domain theDomain  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 10: Reset-PvsDeviceForDomain for CollectionName with Domain"
        }, 
        {
            "location": "/#example-11-reset-pvsdevicefordomain-for-collectionname-with-domain-andorganizationunit", 
            "text": "Reset-PvsDeviceForDomain -CollectionNametheCollection -SiteName theSite -Domain theDomain -OrganizationUnittheOrganizationUnit  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 11: Reset-PvsDeviceForDomain for CollectionName with Domain andOrganizationUnit"
        }, 
        {
            "location": "/#example-12-reset-pvsdevicefordomain-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theReset-PvsDeviceForDomain.  Get-PvsCollection -Name theCollection -SiteNametheSite -Fields Guid | Reset-PvsDeviceForDomain -Domain theDomain-OrganizationUnit theOrganizationUnit  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 12: Reset-PvsDeviceForDomain for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#example-13-reset-pvsdevicefordomain-for-siteviewname", 
            "text": "Reset-PvsDeviceForDomain -SiteViewName theSiteView-SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 13: Reset-PvsDeviceForDomain for SiteViewName"
        }, 
        {
            "location": "/#example-14-reset-pvsdevicefordomain-for-siteviewname-with-domain", 
            "text": "Reset-PvsDeviceForDomain -SiteViewName theSiteView-SiteName theSite -Domain theDomain  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 14: Reset-PvsDeviceForDomain for SiteViewName with Domain"
        }, 
        {
            "location": "/#example-15-reset-pvsdevicefordomain-for-siteviewname-with-domain-and-organizationunit", 
            "text": "Reset-PvsDeviceForDomain -SiteViewName theSiteView-SiteName theSite -Domain theDomain -OrganizationUnit theOrganizationUnit  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 15: Reset-PvsDeviceForDomain for SiteViewName with Domain and OrganizationUnit"
        }, 
        {
            "location": "/#example-16-reset-pvsdevicefordomain-for-pvssiteview-using-pipe", 
            "text": "The Get-PvsSiteView output is piped to theReset-PvsDeviceForDomain.  Get-PvsSiteView -Name theSiteView -SiteName theSite-Fields Guid | Reset-PvsDeviceForDomain -Domain theDomain -OrganizationUnittheOrganizationUnit  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 16: Reset-PvsDeviceForDomain for PvsSiteView Using Pipe"
        }, 
        {
            "location": "/#restart-pvsstreamservice", 
            "text": "Restart the Stream Service on a Server or allServers in a Site.  One of these required  Guid[] Guid or ServerId: GUID of the Server torestart the Stream Service.  string[] Name or ServerName: Name of the Server torestart the Stream Service.  Guid[] SiteId: GUID of the Site to restart theStream Service on all Servers.  string[] SiteName: Name of the Site to restart theStream Service on all Servers.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId or SiteId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Restart-PvsStreamService"
        }, 
        {
            "location": "/#example-1-restart-pvsstreamservice-for-name", 
            "text": "Restart-PvsStreamService -Name theServer", 
            "title": "EXAMPLE 1: Restart-PvsStreamService for Name"
        }, 
        {
            "location": "/#example-2-restart-pvsstreamservice-for-pvsserver-using-pipe", 
            "text": "The Get-PvsServer output is piped to theRestart-PvsStreamService.  Get-PvsServer -Name theServer -Fields Guid |Restart-PvsStreamService  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Restart-PvsStreamService for PvsServer Using Pipe"
        }, 
        {
            "location": "/#example-3-restart-pvsstreamservice-for-sitename", 
            "text": "Restart-PvsStreamService -SiteName theSite", 
            "title": "EXAMPLE 3: Restart-PvsStreamService for SiteName"
        }, 
        {
            "location": "/#example-4-restart-pvsstreamservice-for-pvssite-using-pipe", 
            "text": "The Get-PvsSite output is piped to theRestart-PvsStreamService.  Get-PvsSite -Name theSite -Fields Guid |Restart-PvsStreamService  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 4: Restart-PvsStreamService for PvsSite Using Pipe"
        }, 
        {
            "location": "/#revoke-pvsauthgroup", 
            "text": "Remove Farm, Site or Collection Authorization for anAuthGroup. If no Site or Collection is specified, Farm Authorization is removedfor the AuthGroup.  One of these required  Guid[] Guid or AuthGroupId: GUID of the AuthGroup toremove Authorization for.  string[] Name or AuthGroupName: Name of theAuthGroup to remove Authorization for.  One of these optional  Guid[] SiteId: GUID of the Site to removeAuthorization for the AuthGroup.  string[] SiteName: Name of the Site to removeAuthorization for the AuthGroup.  Guid[] CollectionId: GUID of the Collection toremove Authorization for the AuthGroup.  or this optional ; resolution  string[] CollectionName: Name of the Collection toremove Authorization for the AuthGroup.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site to removeAuthorization for the AuthGroup.  string[] SiteName: Name of the Site to removeAuthorization for the AuthGroup.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  AuthGroupId, SiteId or CollectionId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Revoke-PvsAuthGroup"
        }, 
        {
            "location": "/#example-1-revoke-pvsauthgroup-for-pvsauthgroup-to-pvsfarm", 
            "text": "Revoke-PvsAuthGroup -Name theAuthGroup", 
            "title": "EXAMPLE 1: Revoke-PvsAuthGroup for PvsAuthGroup to PvsFarm"
        }, 
        {
            "location": "/#example-2-revoke-pvsauthgroup-for-pvsauthgroup-using-pipe", 
            "text": "The Get-PvsAuthGroup output is piped to theRevoke-PvsAuthGroup.  Get-PvsAuthGroup -Name theAuthGroup -Fields Guid |Revoke-PvsAuthGroup  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Revoke-PvsAuthGroup for PvsAuthGroup Using Pipe"
        }, 
        {
            "location": "/#example-3-revoke-pvsauthgroup-for-pvsauthgroup-to-pvssite", 
            "text": "Revoke-PvsAuthGroup -Name theAuthGroup -SiteNametheSite", 
            "title": "EXAMPLE 3: Revoke-PvsAuthGroup for PvsAuthGroup to PvsSite"
        }, 
        {
            "location": "/#example-4-revoke-pvsauthgroup-for-pvsauthgroup-using-pipe", 
            "text": "The Get-PvsAuthGroup output is piped to theRevoke-PvsAuthGroup.  Get-PvsAuthGroup -Name theAuthGroup -Fields Guid |Revoke-PvsAuthGroup -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 4: Revoke-PvsAuthGroup for PvsAuthGroup Using Pipe"
        }, 
        {
            "location": "/#example-5-revoke-pvsauthgroup-for-pvssite-using-pipe", 
            "text": "The Get-PvsSite output is piped to theRevoke-PvsAuthGroup.  Get-PvsSite -Name theSite -Fields Guid |Revoke-PvsAuthGroup -Name theAuthGroup  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 5: Revoke-PvsAuthGroup for PvsSite Using Pipe"
        }, 
        {
            "location": "/#example-6-revoke-pvsauthgroup-for-pvsauthgroup-to-pvscollection", 
            "text": "Revoke-PvsAuthGroup -Name theAuthGroup-CollectionName theCollection -SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 6: Revoke-PvsAuthGroup for PvsAuthGroup to PvsCollection"
        }, 
        {
            "location": "/#example-7-revoke-pvsauthgroup-for-pvsauthgroup-using-pipe", 
            "text": "The Get-PvsAuthGroup output is piped to theRevoke-PvsAuthGroup.  Get-PvsAuthGroup -Name theAuthGroup -Fields Guid |Revoke-PvsAuthGroup -CollectionName theCollection -SiteName theSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 7: Revoke-PvsAuthGroup for PvsAuthGroup Using Pipe"
        }, 
        {
            "location": "/#example-8-revoke-pvsauthgroup-for-pvscollection-using-pipe", 
            "text": "The Get-PvsCollection output is piped to theRevoke-PvsAuthGroup.  Get-PvsCollection -Name theCollection -SiteName theSite-Fields Guid | Revoke-PvsAuthGroup -Name theAuthGroup  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 8: Revoke-PvsAuthGroup for PvsCollection Using Pipe"
        }, 
        {
            "location": "/#set-pvsauthgroup", 
            "text": "Set AuthGroup(s) changed values from PvsAuthGroupobject(s), or set one or more field values for a PvsAuthGroup.  Required  PvsAuthGroup AuthGroup: PvsAuthGroup object(s) withchanged property value(s) to be set. The object(s) can come from a pileline.  These values are in the PvsAuthGroup object, andonly will be set if the value has changed.  string Name or AuthGroupName: Name of the ActiveDirectory or Windows Group. Max Length=450  string Description: User description. Default=\"\"Max Length=250   When AuthGroup is not passed, the parameters beloware used:  One of these required  Guid Guid or AuthGroupId: GUID of the AuthGroup toSet.  string Name or AuthGroupName: Name of the AuthGroupto Set.  Optional field values to set:  string NewName: Name of the Active Directory orWindows Group. Max Length=450  string Description: User description.Default=\"\" Max Length=250   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsAuthGroup object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsAuthGroup"
        }, 
        {
            "location": "/#example-1-set-pvsauthgroup-for-individual-fields", 
            "text": "Get the PvsAuthGroup into a $o variable. Change the$o field values and then Set the PvsAuthGroup with the result.  $o = Get-PvsAuthGroup -Name oldName -Fields Name  $o.Name = \"newName\"  Set-PvsAuthGroup $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsAuthGroup for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsauthgroup-for-a-field-using-pipe", 
            "text": "Get the PvsAuthGroup into a $o variable. Change a $ofield to the correct value and then Set the PvsAuthGroup with the result.  Get-PvsAuthGroup -Name oldName -Fields Name |foreach { $o = $_; $o.Name = \"newName\"; $o } | Set-PvsAuthGroup  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsAuthGroup for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsceipdata", 
            "text": "Set Ceip changed values from a PvsCeip object, orset one or more field values for a PvsCeip.  Required  PvsCeipData CeipData: PvsCeipData object(s) withchanged property value(s) to be set. The object(s) can come from a pileline.  These values are in the PvsCeipData object, and onlywill be set if the value has changed.  uint Enabled: 1 if CEIP is enabled, otherwise 0.Min=0, Max=1  DateTime NextUpload: Date and time next CEIP uploadis due if enabled is 1. Default=Empty  uint InProgress: 1 if an upload is currently inprogress, otherwise 0. Default=0  Guid ServerId: ID of server that is currentlyuploading, null if InProgress is 0.Default=00000000-0000-0000-0000-000000000000  uint OneTimeUpload: 1 to perform a one time upload.   When CeipData is not passed, the parameters beloware used:  Optional  string Uuid: CEIP UUID of this Farm. This isoptional since there is only one.  Optional field values to set:  uint Enabled: 1 if CEIP is enabled, otherwise 0.Min=0, Max=1  DateTime NextUpload: Date and time next CEIP uploadis due if enabled is 1. Default=Empty  uint InProgress: 1 if an upload is currently inprogress, otherwise 0. Default=0  Guid ServerId: ID of server that is currentlyuploading, null if InProgress is 0.Default=00000000-0000-0000-0000-000000000000  uint OneTimeUpload: 1 to perform a one time upload.   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsCeipData object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsCeipData"
        }, 
        {
            "location": "/#example-1-set-pvsceipdata-for-individual-fields", 
            "text": "Get the PvsCeipData into a $o variable. Change the$o field values and then Set the PvsCeipData with the result.  $o = Get-PvsCeipData -Fields Enabled, NextUpload  $o.Enabled = $true  $o.NextUpload = \"2016-01-14 15:52:00\"  Set-PvsCeipData $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsCeipData for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsceipdata-for-a-field-using-pipe", 
            "text": "Get the PvsCeipData into a $o variable for the fieldthat has the wrong value. Change the $o field to the correct value and then Setthe PvsCeipData with the result.  Get-PvsCeipData -Fields Enabled | Where-Object{$_.Enabled -ne $false} | foreach { $o = $_; $o.Enabled = $false; $o } | Set-PvsCeipData  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsCeipData for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvscisdata", 
            "text": "Set one or more field values for CIS data.  Required  PvsCisData CisData: PvsCisData object(s) withchanged property value(s) to be set. The object(s) can come from a pileline.  These values are in the PvsCisData object, and onlywill be set if the value has changed.  string UserName: Username used to obtain the tokenDefault=\"\" Max Length=255  string Path: Path where the last problem reportbundle was saved Default=\"\" Max Length=255  string Password: Password of the user required toobtain the token. This is required only by Set and Add   When CisData is not passed, the parameters below areused:  Optional  Guid Guid or CisDataId: CIS UUID of this Farm. Thisis optional since there is only a single record.  Optional field values to set:  string UserName: Username used to obtain the tokenDefault=\"\" Max Length=255  string Path: Path where the last problem reportbundle was saved Default=\"\" Max Length=255  string Password: Password of the user required toobtain the token. This is required only by Set and Add   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsCisData object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsCisData"
        }, 
        {
            "location": "/#example-1-set-pvscisdata-for-individual-fields", 
            "text": "Get the PvsCisData into a $o variable. Change the $ofield values and then Set the PvsCisData with the result.  $o = Get-PvsCisData -Fields UserName, UploadToken  $o.UserName = userName  $o.UploadToken = token  Set-PvsCisData $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsCisData for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvscisdata-for-a-field-using-pipe", 
            "text": "Get the PvsCisData into a $o variable for the fieldthat has the wrong value. Change the $o field to the correct value and then Setthe PvsCisData with the result.  Get-PvsCisData -Fields UserName | Where-Object {$_.UserName-ne newUserName} | foreach { $o = $_; $o.UserName = newUserName; $o } |Set-PvsCisData  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsCisData for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvscollection", 
            "text": "Set Collection(s) changed values from PvsCollectionobject(s), or set one or more field values for a PvsCollection.  Required  PvsCollection Collection: PvsCollection object(s)with changed property value(s) to be set. The object(s) can come from apileline.  These values are in the PvsCollection object, andonly will be set if the value has changed.  string Name or CollectionName: Name of theCollection. It is unique within the Site. Max Length=50  string Description: User description.Default=\"\" Max Length=250  Guid TemplateDeviceId: GUID of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith templateDeviceName. Default=00000000-0000-0000-0000-000000000000  string TemplateDeviceName: Name of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith TemplateDeviceId. Default=\"\"  uint LastAutoAddDeviceNumber: The Device Number ofthe last Auto Added Device. Default=0  bool Enabled: True when Devices in the Collectioncan be booted, false otherwise. Default=true  string AutoAddPrefix: The string put before theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno end digit Max Length=12  string AutoAddSuffix: The string put after theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno begin digit Max Length=12  bool AutoAddZeroFill: True when zeros be placedbefore the Device Number up to the AutoAddNumberLength for Auto Add, falseotherwise. Default=true  uint AutoAddNumberLength: The maximum length of theDevice Number for Auto Add. This length plus the AutoAddPrefix length plus theAutoAddSuffix length must be less than 16. Required that((lenautoAddPrefix+lenautoAddSuffix)+AutoAddNumberLength) < =15. Min=3, Max=9,Default=4   When Collection is not passed, the parameters beloware used:  This required  Guid Guid or CollectionId: GUID of the Collection toSet.  or this required ; resolution  string Name or CollectionName: Name of theCollection to Set.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  Optional field values to set:  string NewName: Name of the Collection. It is uniquewithin the Site. Max Length=50  string Description: User description.Default=\"\" Max Length=250  Guid TemplateDeviceId: GUID of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith templateDeviceName. Default=00000000-0000-0000-0000-000000000000  string TemplateDeviceName: Name of a Device in theCollection whose settings are used for initial values of new Devices. Not usedwith TemplateDeviceId. Default=\"\"  uint LastAutoAddDeviceNumber: The Device Number ofthe last Auto Added Device. Default=0  bool Enabled: True when Devices in the Collectioncan be booted, false otherwise. Default=true  string AutoAddPrefix: The string put before theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno end digit Max Length=12  string AutoAddSuffix: The string put after theDevice Number for Auto Add. Default=\"\" ASCII computer name charactersno begin digit Max Length=12  bool AutoAddZeroFill: True when zeros be placedbefore the Device Number up to the AutoAddNumberLength for Auto Add, falseotherwise. Default=true  uint AutoAddNumberLength: The maximum length of theDevice Number for Auto Add. This length plus the AutoAddPrefix length plus theAutoAddSuffix length must be less than 16. Required that ((lenautoAddPrefix+lenautoAddSuffix)+AutoAddNumberLength) < =15.Min=3, Max=9, Default=4   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsCollection object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsCollection"
        }, 
        {
            "location": "/#example-1-set-pvscollection-for-individual-fields", 
            "text": "Get the PvsCollection into a $o variable. Change the$o field values and then Set the PvsCollection with the result.  $o = Get-PvsCollection -Name theCollection -SiteNametheSite -Fields AutoAddSuffix, AutoAddZeroFill  $o.AutoAddSuffix = \"Ex\"  $o.AutoAddZeroFill = $true  Set-PvsCollection $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Set PvsCollection for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvscollection-for-a-field-using-pipe", 
            "text": "Get the PvsCollection into a $o variable. Change a$o field to the correct value and then Set the PvsCollection with the result.  Get-PvsCollection -CollectionName theCollection-SiteName theSite -Fields AutoAddSuffix | foreach { $o = $_; $o.AutoAddSuffix =\"Ex\"; $o } | Set-PvsCollection  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsCollection for a Field Using Pipe"
        }, 
        {
            "location": "/#example-3-get-pvscollection-and-enable", 
            "text": "Get all PvsCollection that are not Enabled and thenEnables them.  Get-PvsCollection -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsCollection  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 3: Get PvsCollection and Enable"
        }, 
        {
            "location": "/#set-pvsconnection_1", 
            "text": "Set the SoapServer connection, and if -Persist isspecified the connection settings are saved in the registry. A PvsConnectionobject can be used as the parameter.  Required  PvsConnection Connection: PvsConnection object withchanged property value(s) to be set. The object can come from a pileline.  These values are in the PvsConnection object, andonly will be set if the value has changed.  string Name or Server: Name or IP of the Server toconnect to. Default=localhost  string Port: The Port to use to connect.Default=54321  string User: User name to use for Authentication. Ifit has a value, it will be *****. Default=\"\"  string Domain: Domain name to use forAuthentication. If it has a value, it will be *****. Default=\"\"  string Password: Password to use for Authentication.If it has a value, it will be *****. Default=\"\"  string Persist: True when the connection settingsshould be, for Set, or have been, for Get, saved to the registry.  PvsConnection can be created or modified usingmethods below:  New-Object Citrix.PVS.SnapIn.PvsConnection: Createsdefault Server=localhost, Port=54321, and no authentication.  New-ObjectCitrix.PVS.SnapIn.PvsConnection(Citrix.PVS.SnapIn copyFrom): Creates withsettings of the copyFrom Citrix.PVS.SnapIn.  SetServerToLocalHostDefaultSettings:Server=localhost, Port=54321, and no authentication.  Copy(Citrix.PVS.SnapIn copyFrom): Modifies thesettings to match the copyFrom Citrix.PVS.SnapIn.  Equals(Citrix.PVS.SnapIn compareTo): Returns truewhen the settings match what is in the compareTo.   When Connection is not passed, the parameters beloware used:  Optional field values to set:  string Name or Server: Name or IP of the Server toconnect to. Default=localhost  string Port: The Port to use to connect.Default=54321  string User: User name to use for Authentication. Ifit has a value, it will be *****. Default=\"\"  string Domain: Domain name to use forAuthentication. If it has a value, it will be *****. Default=\"\"  string Password: Password to use for Authentication.If it has a value, it will be *****. Default=\"\"  string Persist: True when the connection settingsshould be, for Set, or have been, for Get, saved to the registry.   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsConnection object is returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsConnection"
        }, 
        {
            "location": "/#example-1-set-pvsconnection-for-individual-fields_1", 
            "text": "Get the PvsConnection into a $o variable. Change the$o field values and then Set the PvsConnection with the result.  $o = Get-PvsConnection -Fields Port  $o.Port = 54322  Set-PvsConnection $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsConnection for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsconnection-for-a-field-using-pipe_1", 
            "text": "Get the PvsConnection into a $o variable for thefield that has the wrong value. Change the $o field to the correct value andthen Set the PvsConnection with the result.  Get-PvsConnection -Fields Port | Where-Object{$_.Port -ne 54322} | foreach { $o = $_; $o.Port = 54322; $o } |Set-PvsConnection  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsConnection for a Field Using Pipe"
        }, 
        {
            "location": "/#example-3-set-pvsconnection-port-with-parameter_1", 
            "text": "Set the PvsConnection Port using the Port parameterinstead of a PvsConnection object.  Set-PvsConnection -Port 54322  This is the only Set command that has fieldparameters.", 
            "title": "EXAMPLE 3: Set PvsConnection Port with Parameter"
        }, 
        {
            "location": "/#set-pvsdevice", 
            "text": "Set Device(s) changed values from PvsDeviceobject(s), or set one or more field values for one or more PvsDevices.  Required  PvsDevice Device: PvsDevice object(s) with changedproperty value(s) to be set. The object(s) can come from a pileline.  These values are in the PvsDevice object, and onlywill be set if the value has changed.  string Name or DeviceName: Computer name with nospaces. ASCII computer name characters Max Length=15  string Description: User description.Default=\"\" Max Length=250  PvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.  uint BootFrom: Device to boot from. Choices are 1for vDisk, 2 for Hard Disk, and 3 for Floppy. This cannot be Set for a Devicewith Personal vDisk. Min=1, Max=3, Default=1  string ClassName: Used by Automatic Update featureto match new versions of Disks to a Device. This cannot be Set for a Devicewith Personal vDisk. Default=\"\" Max Length=41  uint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901  bool Enabled: True when it can be booted, falseotherwise. This cannot be Set for a Device with Personal vDisk. Default=true  bool LocalDiskEnabled: If there is a local disk menuchoice for the Device, this is true. This cannot be Set for a Device withPersonal vDisk. Default=false  uint Authentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. This cannotbe Set for a Device with Personal vDisk. Min=0, Max=2, Default=0  string User: Name of user to authenticate before theboot process continues. This cannot be Set for a Device with Personal vDisk.Default=\"\" ASCII Max Length=20  string Password: Password of user to authenticatebefore the boot process continues. This cannot be Set for a Device with PersonalvDisk. Default=\"\" ASCII Max Length=100  uint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0  uint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0  string DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255  string DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186  string DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000  DateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty  uint Type: 1 when it performs test of Disks, 2 whenit performs maintenance on Disks, 3 when it has a Personal vDisk, 4 when it hasa Personal vDisk and performs tests, 0 otherwise. A Device with type 0 - 3 canonly be Set to 0 - 3, and a Device with type 3 - 4 can only be Set to 3 - 4. Min=0,Max=4, Default=0  uint LocalWriteCacheDiskSize: The size in GB toformat the Device cache file disk. If the value is 0, then the disk is notformatted. Min=0, Max=2048, Default=0  bool BdmBoot: Use PXE boot when set to false, BDMboot when set to true. Default is PXE Default=false  uint BdmType: Use PXE boot when set to 0, BDM (Bios)boot when set to 1 and BDM (Uefi) boot when set to 2.  Default=0  uint BdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3use USB. Default=0  DateTime BdmUpdated: Timestamp of the last BDM bootdisk update. Default=Empty  DateTime BdmCreated: Timstamp when BDM device wascreated  Default=Empty  Guid XsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000  bool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false   When Device is not passed, the parameters below areused:  One of these required  Guid Guid or DeviceId: GUID of the Device to Set.  string Name or DeviceName: Name of the Device toSet.  PvsPhysicalAddress DeviceMac: MAC of the Device toSet.  Guid CollectionId: GUID of the Collection to set allDevices. DeviceName and DeviceMac cannot be set.  Guid SiteViewId: GUID of the Site View to set allDevices. DeviceName and DeviceMac cannot be set.  Guid FarmViewId: GUID of the Farm View to set allDevices. DeviceName and DeviceMac cannot be set.  string FarmViewName: Name of the Farm View to setall Devices. DeviceName and DeviceMac cannot be set.  or one of these required ; resolutions  string CollectionName: Name of the Collection to setall Devices. DeviceName and DeviceMac cannot be set.  string SiteViewName: Name of the Site View to setall Devices. DeviceName and DeviceMac cannot be set.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  Optional field values to set:  string NewName: Computer name with no spaces. ASCIIcomputer name characters Max Length=15  string Description: User description.Default=\"\" Max Length=250  PvsPhysicalAddress DeviceMac: Ethernet address canhave the form XX-XX-XX-XX-XX-XX. Uniquely identifies the Device.  uint BootFrom: Device to boot from. Choices are 1for vDisk, 2 for Hard Disk, and 3 for Floppy. This cannot be Set for a Devicewith Personal vDisk. Min=1, Max=3, Default=1  string ClassName: Used by Automatic Update featureto match new versions of Disks to a Device. This cannot be Set for a Devicewith Personal vDisk. Default=\"\" Max Length=41  uint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901  bool Enabled: True when it can be booted, falseotherwise. This cannot be Set for a Device with Personal vDisk. Default=true  bool LocalDiskEnabled: If there is a local disk menuchoice for the Device, this is true. This cannot be Set for a Device withPersonal vDisk. Default=false  uint Authentication: Device log in authentication.Choices are 0 for none, 1 for User Name/Password, and 2 for Extern. This cannotbe Set for a Device with Personal vDisk. Min=0, Max=2, Default=0  string User: Name of user to authenticate before theboot process continues. This cannot be Set for a Device with Personal vDisk.Default=\"\" ASCII Max Length=20  string Password: Password of user to authenticatebefore the boot process continues. This cannot be Set for a Device withPersonal vDisk. Default=\"\" ASCII Max Length=100  uint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0  uint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0  string DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255  string DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186  string DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000  DateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty  uint Type: 1 when it performs test of Disks, 2 whenit performs maintenance on Disks, 3 when it has a Personal vDisk, 4 when it hasa Personal vDisk and performs tests, 0 otherwise. A Device with type 0 - 3 canonly be Set to 0 - 3, and a Device with type 3 - 4 can only be Set to 3 - 4.Min=0, Max=4, Default=0  uint LocalWriteCacheDiskSize: The size in GB toformat the Device cache file disk. If the value is 0, then the disk is notformatted. Min=0, Max=2048, Default=0  bool BdmBoot: Use PXE boot when set to false, BDMboot when set to true. Default is PXE Default=false  uint BdmType: Use PXE boot when set to 0, BDM (Bios)boot when set to 1 and BDM (Uefi) boot when set to 2.  Default=0  uint BdmFormat: 1 use VHD for BDMboot, 2 use ISO, 3use USB. Default=0  DateTime BdmUpdated: Timestamp of the last BDM bootdisk update. Default=Empty  DateTime BdmCreated: Timstamp when BDM device wascreated  Default=Empty  Guid XsPvsProxyUuid: UUID of XenServer PVS_proxyDefault=00000000-0000-0000-0000-000000000000  bool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsDevice object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsDevice"
        }, 
        {
            "location": "/#example-1-set-pvsdevice-for-individual-fields", 
            "text": "Get the PvsDevice into a $o variable. Change the $ofield values and then Set the PvsDevice with the result.  $o = Get-PvsDevice -Name theDevice -FieldsLocalWriteCacheDiskSize  $o.LocalWriteCacheDiskSize = 1024  Set-PvsDevice $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsDevice for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsdevice-for-a-field-using-pipe", 
            "text": "Get the PvsDevice into a $o variable. Change a $ofield to the correct value and then Set the PvsDevice with the result.  Get-PvsDevice -Name theDevice -FieldsLocalWriteCacheDiskSize | foreach { $o = $_; $o.LocalWriteCacheDiskSize = 1024;$o } | Set-PvsDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsDevice for a Field Using Pipe"
        }, 
        {
            "location": "/#example-3-get-pvsdevice-and-enable", 
            "text": "Get all PvsDevice that are not Enabled and thenEnables them.  Get-PvsDevice -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 3: Get PvsDevice and Enable"
        }, 
        {
            "location": "/#set-pvsdevicebootstrap", 
            "text": "Set Device Bootstrap List(s) changed values fromPvsDeviceBootstrap object(s).  Required  PvsDeviceBootstrap[] DeviceBootstrap: Array ofPvsDeviceBootstrap objects with changed DeviceBootstrap. The object(s) can comefrom a pileline.  Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsDeviceBootstrap object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will be confirmed.$ConfirmPreference can be set to \"low\" to have confirmation withoutthe Confirm parameter.  These exist in the DeviceBootstrap array within eachPvsDeviceBootstrap.  Each array item is a PvsDeviceBootstrapList object.  They are set using the Add, Insert, Remove, Set, andReorder methods in the PvsDeviceBootstrap.  string Name or Bootstrap: Name of the bootstrapfile. Max Length=259  string MenuText: Text that is displayed in the BootMenu. If this field has no value, the bootstrap value is used. Default=\"\"ASCII Max Length=64", 
            "title": "Set-PvsDeviceBootstrap"
        }, 
        {
            "location": "/#example-1-set-pvsdevicebootstrap-for-individual-fields", 
            "text": "The Get-PvsDeviceBootstrap returns aPvsDeviceBootstrap object with a PvsDeviceBootstrapList array in it calledDeviceBootstrap.  The DeviceBootstrap is manipulated using the Add,Insert, Remove, Set and Reorder Methods.  The Set-PvsDeviceBootstrap is called with the finalresult.  $o = Get-PvsDeviceBootstrap -Name theDevice  $o.Add(\"addName\", \"addValue\")  $o.Insert(0, \"insertName\",\"insertValue\")  $o.Remove(1)  $o.Set(2, \"setValue\")  $o.Reorder(0, 1)  Set-PvsDeviceBootstrap $o", 
            "title": "EXAMPLE 1: Set PvsDeviceBootstrap for Individual Fields"
        }, 
        {
            "location": "/#set-pvsdevicepersonality", 
            "text": "Set Device Personality List(s) changed values fromPvsDevicePersonality object(s).  Required  PvsDevicePersonality[] DevicePersonality: Array ofPvsDevicePersonality objects with changed DevicePersonality. The object(s) cancome from a pileline.  Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsDevicePersonality object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  These exist in the DevicePersonality array withineach PvsDevicePersonality.  Each array item is a PvsDevicePersonalityListobject.  They are set using the Add, Insert, Remove, Set, andReorder methods in the PvsDevicePersonality.  string Name: Name of the Device personality item.Max Length=250  string Value: Value for the Device personality item.Max Length=1000", 
            "title": "Set-PvsDevicePersonality"
        }, 
        {
            "location": "/#example-1-set-pvsdevicepersonality-for-individual-fields", 
            "text": "The Get-PvsDevicePersonality returns aPvsDevicePersonality object with a PvsDevicePersonalityList array in it calledDevicePersonality.  The DevicePersonality is manipulated using the Add, Insert,Remove, Set and Reorder Methods.  The Set-PvsDevicePersonality is called with thefinal result.  $o = Get-PvsDevicePersonality -Name theDevice  $o.Add(\"addName\", \"addValue\")  $o.Insert(0, \"insertName\",\"insertValue\")  $o.Remove(1)  $o.Set(2, \"setValue\")  $o.Reorder(0, 1)  Set-PvsDevicePersonality $o", 
            "title": "EXAMPLE 1: Set PvsDevicePersonality for Individual Fields"
        }, 
        {
            "location": "/#set-pvsdisk", 
            "text": "Set Disk(s) changed values from PvsDisk object(s),or set one or more field values for a PvsDisk.  Required  PvsDisk Disk: PvsDisk object(s) with changedproperty value(s) to be set. The object(s) can come from a pileline.  These values are in the PvsDisk object, and onlywill be set if the value has changed.  string Class: Class of the Disk. Max Length=40  string ImageType: Type of this image (softwaretype). Max Length=40  UInt64 WriteCacheSize: RAM cache size (MB). Not 0when used with Cache in Device RAM, and Cache in Device RAM with Overflow onHard Disk. A value of 0 will disable the RAM use for Cache in Device RAM withOverflow on Hard Disk. Min=0, Max=131072, Default=0  bool AutoUpdateEnabled: Automatically update thisimage for matching Devices when set to true. Default false  bool ActivationDateEnabled: Use activation date toactivate image when set to true. Default false  bool AdPasswordEnabled: Enable AD passwordmanagement when set to true.  bool HaEnabled: Enable HA when set to true.  bool PrinterManagementEnabled: Invalid printers willbe deleted from the Device when set to true.  uint WriteCacheType: 0 (Private), (other values arestandard image) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache onDevice Hard Disk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9(Cache in Device RAM with Overflow on Hard Disk). Min=0, Max=9, Default=0  uint LicenseMode: 0 (None), 1 (Multiple ActivationKey), or 2 (Key Management Service). Min=0, Max=2, Default=0  DateTime ActiveDate: Date to activate the disk ifAutoUpdateEnabled and activationDateEnabled are true. Has the date. Empty whenthe AutoUpdateEnabled or activationDateEnabled are false.  string LongDescription: Description of the Disk. MaxLength=399  string SerialNumber: User defined serial number. MaxLength=36  string Date: User defined date. Max Length=40  string Author: User defined author. Max Length=40  string Title: User defined title. Max Length=40  string Company: User defined company. Max Length=40  string InternalName: User defined name. MaxLength=63  string OriginalFile: User defined original file. MaxLength=127  string HardwareTarget: User defined hardware target.Max Length=127  UInt64 MajorRelease: User defined major releasenumber. Min=0, Max=4294967295, Default=0  UInt64 MinorRelease: User defined minor releasenumber. Min=0, Max=4294967295, Default=0  UInt64 Build: User defined build number. Min=0,Max=4294967295, Default=0  bool VHDX: If VHDX is true, the format of the imageis VHDX. Otherwise it is VHD. Default=false   When Disk is not passed, the parameters below areused:  This required  Guid Guid or DiskLocatorId: GUID of the DiskLocator.  or this required ; resolution  string Name or DiskLocatorName: Name of the DiskLocator.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  One of these resolutions when needed  Guid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Optional field values to set:  string Class: Class of the Disk. Max Length=40  string ImageType: Type of this image (softwaretype). Max Length=40  UInt64 WriteCacheSize: RAM cache size (MB). Not 0when used with Cache in Device RAM, and Cache in Device RAM with Overflow onHard Disk. A value of 0 will disable the RAM use for Cache in Device RAM withOverflow on Hard Disk. Min=0, Max=131072, Default=0  bool AutoUpdateEnabled: Automatically update thisimage for matching Devices when set to true. Default false  bool ActivationDateEnabled: Use activation date toactivate image when set to true. Default false  bool AdPasswordEnabled: Enable AD passwordmanagement when set to true.  bool HaEnabled: Enable HA when set to true.  bool PrinterManagementEnabled: Invalid printers willbe deleted from the Device when set to true.  uint WriteCacheType: 0 (Private), (other values arestandard image) 1 (Cache on Server), 3 (Cache in Device RAM), 4 (Cache onDevice Hard Disk), 6 (Device RAM Disk), 7 (Cache on Server, Persistent), or 9(Cache in Device RAM with Overflow on Hard Disk). Min=0, Max=9, Default=0  uint LicenseMode: 0 (None), 1 (Multiple ActivationKey), or 2 (Key Management Service). Min=0, Max=2, Default=0  DateTime ActiveDate: Date to activate the disk ifAutoUpdateEnabled and activationDateEnabled are true. Has the date. Empty whenthe AutoUpdateEnabled or activationDateEnabled are false.  string LongDescription: Description of the Disk. MaxLength=399  string SerialNumber: User defined serial number. MaxLength=36  string Date: User defined date. Max Length=40  string Author: User defined author. Max Length=40  string Title: User defined title. Max Length=40  string Company: User defined company. Max Length=40  string InternalName: User defined name. MaxLength=63  string OriginalFile: User defined original file. MaxLength=127  string HardwareTarget: User defined hardware target.Max Length=127  UInt64 MajorRelease: User defined major releasenumber. Min=0, Max=4294967295, Default=0  UInt64 MinorRelease: User defined minor releasenumber. Min=0, Max=4294967295, Default=0  UInt64 Build: User defined build number. Min=0,Max=4294967295, Default=0  bool VHDX: If VHDX is true, the format of the imageis VHDX. Otherwise it is VHD. Default=false   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsDisk object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsDisk"
        }, 
        {
            "location": "/#example-1-set-pvsdisk-for-individual-fields", 
            "text": "Get the PvsDisk into a $o variable. Change the $ofield values and then Set the PvsDisk with the result.  $o = Get-PvsDisk -DiskLocatorId \"81ea9077-598d-459f-a443-71fabd1840bf\"-Fields PrinterManagementEnabled  $o.PrinterManagementEnabled = $false  Set-PvsDisk $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsDisk for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsdisk-for-a-field-using-pipe", 
            "text": "Get the PvsDisk into a $o variable. Change a $ofield to the correct value and then Set the PvsDisk with the result.  Get-PvsDisk -DiskLocatorId\"81ea9077-598d-459f-a443-71fabd1840bf\" -FieldsPrinterManagementEnabled | foreach { $o = $_; $o.PrinterManagementEnabled =$false; $o } | Set-PvsDisk  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsDisk for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsdisklocator", 
            "text": "Set Disk Locator(s) changed values fromPvsDiskLocator object(s), or set one or more field values for a PvsDiskLocator.  Required  PvsDiskLocator DiskLocator: PvsDiskLocator object(s)with changed property value(s) to be set. The object(s) can come from apileline.  These values are in the PvsDiskLocator object, andonly will be set if the value has changed.  string Description: User description. Default=\"\"Max Length=250  string MenuText: Text that is displayed in the BootMenu. If this field has no value, the name value is used. Default=\"\"ASCII Max Length=64  Guid ServerId: GUID of the single Server that thisDisk Locator is assigned to. It is not used with ServerName.Default=00000000-0000-0000-0000-000000000000  string ServerName: Name of the single Server thatthis Disk Locator is assigned to. It is not used with ServerId.Default=\"\"  bool Enabled: True when this disk can be booted,false otherwise. Default=true  bool RebalanceEnabled: True when this Server canautomatically rebalance Devices, false otherwise. Default=false  uint RebalanceTriggerPercent: Percent over fair loadthat triggers a dynamic Device rebalance. Min=5, Max=5000, Default=25  uint SubnetAffinity: Qualifier for subnet affinitywhen assigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2,Default=0   When DiskLocator is not passed, the parameters beloware used:  This required  Guid Guid or DiskLocatorId: GUID of the Disk Locatorto Set.  or this required ; resolution  string Name or DiskLocatorName: Name of the DiskLocator File to Set.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  One of these resolutions when needed  Guid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Optional field values to set:  string Description: User description.Default=\"\" Max Length=250  string MenuText: Text that is displayed in the BootMenu. If this field has no value, the name value is used. Default=\"\"ASCII Max Length=64  Guid ServerId: GUID of the single Server that thisDisk Locator is assigned to. It is not used with ServerName. Default=00000000-0000-0000-0000-000000000000  string ServerName: Name of the single Server thatthis Disk Locator is assigned to. It is not used with ServerId.Default=\"\"  bool Enabled: True when this disk can be booted,false otherwise. Default=true  bool RebalanceEnabled: True when this Server canautomatically rebalance Devices, false otherwise. Default=false  uint RebalanceTriggerPercent: Percent over fair loadthat triggers a dynamic Device rebalance. Min=5, Max=5000, Default=25  uint SubnetAffinity: Qualifier for subnet affinitywhen assigning a Server. 0=None, 1=Best Effort, 2=Fixed. Min=0, Max=2,Default=0   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsDiskLocator object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsDiskLocator"
        }, 
        {
            "location": "/#example-1-set-pvsdisklocator-for-individual-fields", 
            "text": "Get the PvsDiskLocator into a $o variable. Changethe $o field values and then Set the PvsDiskLocator with the result.  $o = Get-PvsDiskLocator -DiskLocatorId\"81ea9077-598d-459f-a443-71fabd1840bf\" -Fields RebalanceEnabled  $o.RebalanceEnabled = $true  Set-PvsDiskLocator $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsDiskLocator for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsdisklocator-for-a-field-using-pipe", 
            "text": "Get the PvsDiskLocator into a $o variable. Change a$o field to the correct value and then Set the PvsDiskLocator with the result.  Get-PvsDiskLocator -DiskLocatorId\"81ea9077-598d-459f-a443-71fabd1840bf\" -Fields RebalanceEnabled |foreach { $o = $_; $o.RebalanceEnabled = $true; $o } | Set-PvsDiskLocator  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsDiskLocator for a Field Using Pipe"
        }, 
        {
            "location": "/#example-3-get-pvsdisklocator-and-enable", 
            "text": "Get all PvsDiskLocator that are not Enabled and thenEnables them.  Get-PvsDiskLocator -Fields Enabled | Where-Object{$_.Enabled -eq $false} | foreach { $o = $_; $o.Enabled = $true; $o } |Set-PvsDiskLocator  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 3: Get PvsDiskLocator and Enable"
        }, 
        {
            "location": "/#set-pvsdiskupdatedevice", 
            "text": "Set Disk Update Device(s) changed values fromPvsDiskUpdateDevice object(s), or set one or more field values for one or morePvsDiskUpdateDevices.  Required  PvsDiskUpdateDevice DiskUpdateDevice:PvsDiskUpdateDevice object(s) with changed property value(s) to be set. Theobject(s) can come from a pileline.  These values are in the PvsDiskUpdateDevice object,and only will be set if the value has changed.  string Description: User description.Default=\"\" Max Length=250  uint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901  uint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0  uint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0  string DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255  string DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186  string DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only set internallyby PVS. Default=\"\" Max Length=4000  DateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty   When DiskUpdateDevice is not passed, the parametersbelow are used:  One of these required  Guid Guid or DeviceId: GUID of the Disk UpdateDevice to Set.  string Name or DeviceName: Name of Disk UpdateDevice to Set.  PvsPhysicalAddress DeviceMac: MAC of Disk UpdateDevice to Set.  Guid SiteId: GUID of the Site. Can be used alone toSet all Disk Update Devices in the Site.  string SiteName: Name of the Site. Can be used aloneto Set all Disk Update Devices in the Site.  Guid DiskLocatorId: GUID of the DiskLocator to Setthe Disk Update Device for.  or this required ; resolution  string DiskLocatorName: Name of the DiskLocator toSet the Disk Update Device for.  One of these resolutions when needed  Guid SiteId: GUID of the Site. Can be used alone toSet all Disk Update Devices in the Site.  string SiteName: Name of the Site. Can be used aloneto Set all Disk Update Devices in the Site.  One of these resolutions when needed  Guid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Optional field values to set:  string Description: User description.Default=\"\" Max Length=250  uint Port: UDP port to use with Stream Service.Min=1025, Max=65534, Default=6901  uint AdTimestamp: The time the Active Directorymachine account password was generated. Do not set this field, it is only setinternally by PVS. Default=0  uint AdSignature: The signature of the ActiveDirectory machine account password. Do not set this field, it is only setinternally by PVS. Default=0  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=0  string DomainName: Fully qualified name of thedomain that the Device belongs to. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=255  string DomainObjectSID: The value of the objectSIDAD attribute of the same name for the Device's computer account. Do not setthis field, it is only set internally by PVS. Default=\"\" MaxLength=186  string DomainControllerName: The name of the DC usedto create the host's computer account. Do not set this field, it is only setinternally by PVS. Default=\"\" Max Length=4000  DateTime DomainTimeCreated: The time that thecomputer account was created. Has the date and time including milliseconds. Donot set this field, it is only set internally by PVS. Default=Empty   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsDiskUpdateDevice object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsDiskUpdateDevice"
        }, 
        {
            "location": "/#example-1-set-pvsdiskupdatedevice-for-individual-fields", 
            "text": "Get the PvsDiskUpdateDevice into a $o variable.Change the $o field values and then Set the PvsDiskUpdateDevice with theresult.  $o = Get-PvsDiskUpdateDevice -Name theDevice -FieldsPort  $o.Port = 5901  Set-PvsDiskUpdateDevice $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsDiskUpdateDevice for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsdiskupdatedevice-for-a-field-using-pipe", 
            "text": "Get the PvsDiskUpdateDevice into a $o variable.Change a $o field to the correct value and then Set the PvsDiskUpdateDevicewith the result.  Get-PvsDiskUpdateDevice -Name theDevice -Fields Port| foreach { $o = $_; $o.Port = 5901; $o } | Set-PvsDiskUpdateDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsDiskUpdateDevice for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsdiskversion", 
            "text": "Set Disk Version(s) changed values fromPvsDiskVersion object(s), or set one or more field values for a PvsDiskVersion.  Required  PvsDiskVersion DiskVersion: PvsDiskVersion object(s)with changed property value(s) to be set. The object(s) can come from apileline.  These values are in the PvsDiskVersion object, andonly will be set if the value has changed.  string Description: User description.Default=\"\" Max Length=250  DateTime ScheduledDate: Date/Time that the DiskVersion is scheduled to become available. Has the date, hour and minute. Emptywhen the disk version is made available immediately. Default=Empty   When DiskVersion is not passed, the parameters beloware used:  This required  Guid Guid or DiskLocatorId: GUID of the Disk LocatorVersion to Set.  or this required ; resolution  string Name or DiskLocatorName: Name of the DiskLocator Version to Set.  This required  uint Version: Version to Set.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  One of these resolutions when needed  Guid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Optional field values to set:  string Description: User description.Default=\"\" Max Length=250  DateTime ScheduledDate: Date/Time that the DiskVersion is scheduled to become available. Has the date, hour and minute. Emptywhen the disk version is made available immediately. Default=Empty   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsDiskVersion object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsDiskVersion"
        }, 
        {
            "location": "/#example-1-set-pvsdiskversion-for-individual-fields", 
            "text": "Get the PvsDiskVersion into a $o variable. Changethe $o field values and then Set the PvsDiskVersion with the result.  $o = Get-PvsDiskVersion -DiskLocatorId\"81ea9077-598d-459f-a443-71fabd1840bf\" -Version 5 -FieldsScheduledDate  $o.ScheduledDate = \"2016/01/01\"  Set-PvsDiskVersion $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsDiskVersion for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsdiskversion-for-a-field-using-pipe", 
            "text": "Get the PvsDiskVersion into a $o variable. Change a$o field to the correct value and then Set the PvsDiskVersion with the result.  Get-PvsDiskVersion -DiskLocatorId\"81ea9077-598d-459f-a443-71fabd1840bf\" -Version 5 -FieldsScheduledDate | foreach { $o = $_; $o.ScheduledDate = \"2016/01/01\";$o } | Set-PvsDiskVersion  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsDiskVersion for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsfarm", 
            "text": "Set Farm changed values from a PvsFarm object, orset one or more field values for a PvsFarm.  Required  PvsFarm Farm: PvsFarm object with changed propertyvalue(s) to be set. The object can come from a pileline.  These values are in the PvsFarm object, and onlywill be set if the value has changed.  string Name or FarmName: Name of the Farm.Default=\"\" Max Length=50  string Description: User description. Default=\"\"Max Length=250  bool AutoAddEnabled: True when Auto Add is enabled,false otherwise. Default=false  bool AuditingEnabled: True when Auditing is enabled,false otherwise. Default=false  DateTime LastAuditArchiveDate: Last date of AuditTrail data that was Archived. Has the date. Default=Empty  Guid DefaultSiteId: GUID of the Site to place newDevices into automatically. Not used with defaultSiteName.Default=00000000-0000-0000-0000-000000000000  string DefaultSiteName: Name of the Site to placenew Devices into automatically. Not used with DefaultSiteId.Default=\"\"  bool OfflineDatabaseSupportEnabled: True whenOffline Database Support is enabled, false otherwise. Default=false  string LicenseServer: License server name.Default=\"\" Max Length=255  uint LicenseServerPort: License server port.Min=1025, Max=65534, Default=27000  bool AutomaticMergeEnabled: True when AutomaticMerge is enabled, false otherwise. If the number of versions becomes more thanthe MaxVersions value, a merge will occur at the end of PromoteDiskVersion.Default=true  uint MaxVersions: Maximum number a versions of aDisk that can exist before a merge will automatically occur. Min=3, Max=50,Default=5  uint MergeMode: Mode to place the version in after amerge has occurred. Values are: 0 (Production), 1 (Test) and 2 (Maintenance).Min=0, Max=2, Default=2   When Farm is not passed, the parameters below areused:  Optional  Guid Guid or FarmId: GUID of the Farm to Set. Thisis optional since there is only one Farm.  Optional field values to set:  string NewName: Name of the Farm.Default=\"\" Max Length=50  string Description: User description.Default=\"\" Max Length=250  bool AutoAddEnabled: True when Auto Add is enabled,false otherwise. Default=false  bool AuditingEnabled: True when Auditing is enabled,false otherwise. Default=false  DateTime LastAuditArchiveDate: Last date of AuditTrail data that was Archived. Has the date. Default=Empty  Guid DefaultSiteId: GUID of the Site to place newDevices into automatically. Not used with defaultSiteName. Default=00000000-0000-0000-0000-000000000000  string DefaultSiteName: Name of the Site to placenew Devices into automatically. Not used with DefaultSiteId.Default=\"\"  bool OfflineDatabaseSupportEnabled: True whenOffline Database Support is enabled, false otherwise. Default=false  string LicenseServer: License server name.Default=\"\" Max Length=255  uint LicenseServerPort: License server port.Min=1025, Max=65534, Default=27000  bool AutomaticMergeEnabled: True when AutomaticMerge is enabled, false otherwise. If the number of versions becomes more thanthe MaxVersions value, a merge will occur at the end of PromoteDiskVersion.Default=true  uint MaxVersions: Maximum number a versions of aDisk that can exist before a merge will automatically occur. Min=3, Max=50,Default=5  uint MergeMode: Mode to place the version in after amerge has occurred. Values are: 0 (Production), 1 (Test) and 2 (Maintenance).Min=0, Max=2, Default=2   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsFarm object is returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsFarm"
        }, 
        {
            "location": "/#example-1-set-pvsfarm-for-individual-fields", 
            "text": "Get the PvsFarm into a $o variable. Change the $ofield values and then Set the PvsFarm with the result.  $o = Get-PvsFarm -Fields AuditingEnabled,OfflineDatabaseSupportEnabled  $o.AuditingEnabled = $true  $o.OfflineDatabaseSupportEnabled = $true  Set-PvsFarm $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsFarm for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsfarm-for-a-field-using-pipe", 
            "text": "Get the PvsFarm into a $o variable for the fieldthat has the wrong value. Change the $o field to the correct value and then Setthe PvsFarm with the result.  Get-PvsFarm -Fields AuditingEnabled | Where-Object{$_.AuditingEnabled -ne $true} | foreach { $o = $_; $o.AuditingEnabled = $true;$o } | Set-PvsFarm  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsFarm for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsfarmview", 
            "text": "Set Farm View(s) changed values from PvsFarmViewobject(s), or set one or more field values for a PvsFarmView.  Required  PvsFarmView FarmView: PvsFarmView object(s) withchanged property value(s) to be set. The object(s) can come from a pileline.  These values are in the PvsFarmView object, and onlywill be set if the value has changed.  string Name or FarmViewName: name of the Farm View.Max Length=50  string Description: User description.Default=\"\" Max Length=250   When FarmView is not passed, the parameters beloware used:  One of these required  Guid Guid or FarmViewId: GUID of the Farm View toSet.  string Name or FarmViewName: Name of the Farm Viewto Set.  Optional field values to set:  string NewName: name of the Farm View. Max Length=50  string Description: User description.Default=\"\" Max Length=250   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsFarmView object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsFarmView"
        }, 
        {
            "location": "/#example-1-set-pvsfarmview-for-individual-fields", 
            "text": "Get the PvsFarmView into a $o variable. Change the$o field values and then Set the PvsFarmView with the result.  $o = Get-PvsFarmView -Name oldFarmView -Fields Name  $o.Name = \"newFarmView\"  Set-PvsFarmView $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsFarmView for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsfarmview-for-a-field-using-pipe", 
            "text": "Get the PvsFarmView into a $o variable. Change a $ofield to the correct value and then Set the PvsFarmView with the result.  Get-PvsFarmView -Name oldFarmView -Fields Name |foreach { $o = $_; $o.Name = \"newFarmView\"; $o } | Set-PvsFarmView  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsFarmView for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsoverrideversion", 
            "text": "Specify a Disk Version all Production Devices willboot from.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator File to Override the Production Version for.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator File to Override the Production Version for.  Optional  uint Version: Version to set as the OverrideProduction Version. If Version is not included and if there is an OverrideProduction Version, then no longer have it as the Override Version.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to have confirmationwithout the Confirm parameter.", 
            "title": "Set-PvsOverrideVersion"
        }, 
        {
            "location": "/#example-1-set-pvsoverrideversion-for-name-with-version", 
            "text": "Set-PvsOverrideVersion -Name theDiskLocator-SiteName theSite -StoreName theStore -Version 4  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Set-PvsOverrideVersion for Name with Version"
        }, 
        {
            "location": "/#example-2-set-pvsoverrideversion-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theSet-PvsOverrideVersion.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Set-PvsOverrideVersion -Version 4  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Set-PvsOverrideVersion for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-3-set-pvsoverrideversion-for-name", 
            "text": "Set-PvsOverrideVersion -Name theDiskLocator-SiteName theSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 3: Set-PvsOverrideVersion for Name"
        }, 
        {
            "location": "/#example-4-set-pvsoverrideversion-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theSet-PvsOverrideVersion.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Set-PvsOverrideVersion  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Set-PvsOverrideVersion for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#set-pvsserver", 
            "text": "Set Server(s) changed values from PvsServerobject(s), or set one or more field values for a PvsServer. Restart theServer(s) after setting.  Required  PvsServer Server: PvsServer object(s) with changedproperty value(s) to be set. The object(s) can come from a pileline.  These values are in the PvsServer object, and onlywill be set if the value has changed.  string Name or ServerName: Computer name with nospaces. ASCII computer name characters Max Length=21  string Description: User description.Default=\"\" Max Length=250  uint AdMaxPasswordAge: Number of days before apassword expires. Min=1, Max=30, Default=7  uint LicenseTimeout: Amount of seconds before alicense times out. Min=15, Max=300, Default=30  uint VDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0  uint FirstPort: Number of the first UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910  uint LastPort: Number of the last UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930  uint ThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs)  < = 1000.Min=1, Max=60, Default=8  uint BuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24  uint ServerCacheTimeout: Number of seconds to waitbefore considering another Server is down. Min=5, Max=60, Default=8  uint IoBurstSize: Number of bytes read/writes cansend in a burst of packets. Required thatIoBurstSize/(MaxTransmissionUnits-76) < =32. Min=4096, Max=61440,Default=32768  uint MaxTransmissionUnits: Ethernet maximumtransmission unit size for the protocol for use for Server and Device. Requiredthat IoBurstSize/(MaxTransmissionUnits-76) < =32. Min=502, Max=16426,Default=1506  uint MaxBootDevicesAllowed: Maximum number ofDevices allowed to boot simultaneously. Min=1, Max=1000, Default=500  uint MaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60  uint BootPauseSeconds: Number of seconds that aDevice will pause during login if its server busy. Min=1, Max=60, Default=10  bool AdMaxPasswordAgeEnabled: Age the password, whenset to true. Default=false  bool EventLoggingEnabled: Enable event logging, whenset to true. Default=false  bool NonBlockingIoEnabled: Use non-Blocking IO, whenset to true. Default=true  string[] Ip: One or more streaming ip addresses.  uint InitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000,Default=50  uint InitialTransactionConnectionPoolSize: Initialsize of database connection pool for transactional queries. Min=1, Max=1000,Default=50  uint MaxQueryConnectionPoolSize: Maximum size ofdatabase connection pool for non-transactional queries. Min=1, Max=32767,Default=1000  uint MaxTransactionConnectionPoolSize: Maximum sizeof database connection pool for transactional queries. Min=1, Max=32767,Default=1000  uint RefreshInterval: Interval, in number ofseconds, the server should wait before refreshing settings. If set to 0, unuseddatabase connections are never released. Min=0, Max=32767, Default=300  uint UnusedDbConnectionTimeout: Interval, in numberof seconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300  uint BusyDbConnectionRetryCount: Number of times afailed database connection will be retried. Min=0, Max=32767, Default=2  uint BusyDbConnectionRetryInterval: Interval, innumber of milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25  uint LocalConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are local. A value of 0 disables thefeature. Min=0, Max=128, Default=4  uint RemoteConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are remote. A value of 0 disables thefeature. Min=0, Max=128, Default=4  string RamDiskIpAddress: IP address to use fortransferring the RAM Disk. When equal to 0.0.0.0 the server IP is used with thefirst part replaced with 233. Default=0.0.0.0  uint RamDiskTimeToLive: Time to live for theinvitation packet sent to Devices. Min=1, Max=255, Default=1  bool RamDiskInvitationType: Either false for Fixed,or true for Variable. Default=false  uint RamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6 (Trace).Min=0, Max=6, Default=4  uint LogFileSizeMax: Maximum size log files canreach in Megabytes. Min=1, Max=50, Default=5  uint LogFileBackupCopiesMax: Maximum number of logfile backups. Min=1, Max=50, Default=4  float PowerRating: A strictly relative rating ofthis Server's capabilities when compared to other Servers in the Store(s) itbelongs too; can be used to help tune load balancing. Min=0.1, Max=1000,Default=1  DateTime LastCeipUploadAttempt: Time that thisserver last attempted a CEIP upload. Default=Empty  DateTime LastBugReportAttempt: Time that this serverlast attempted to upload or generate a bug report bundle. Default=Empty  string LastBugReportStatus: Status of the last bugreport on this server. Default=\"\" Max Length=250  string LastBugReportResult: Status of the last bugreport on this server. Default=\"\" Max Length=4000  string LastBugReportSummary: Summary of the last bugreport on this server. Default=\"\" Max Length=250   When Server is not passed, the parameters below areused:  One of these required  Guid Guid or ServerId: GUID of the Server to Set.  string Name or ServerName: Name of the Server toSet.  Optional field values to set:  string NewName: Computer name with no spaces. ASCIIcomputer name characters Max Length=21  string Description: User description.Default=\"\" Max Length=250  uint AdMaxPasswordAge: Number of days before apassword expires. Min=1, Max=30, Default=7  uint LicenseTimeout: Amount of seconds before alicense times out. Min=15, Max=300, Default=30  uint VDiskCreatePacing: VDisk create time pacing inmiliseconds. Min=0, Max=5, Default=0  uint FirstPort: Number of the first UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6910  uint LastPort: Number of the last UDP port for useby the Stream Service, First and Last must allow at least 5 ports. Min=1025,Max=65534, Default=6930  uint ThreadsPerPort: Number of worker threads per IOport. Required that (threadPerPort * numberPorts * numberIPs)  < = 1000.Min=1, Max=60, Default=8  uint BuffersPerThread: Number of buffers per workerthread. Min=1, Max=128, Default=24  uint ServerCacheTimeout: Number of seconds to waitbefore considering another Server is down. Min=5, Max=60, Default=8  uint IoBurstSize: Number of bytes read/writes cansend in a burst of packets. Required thatIoBurstSize/(MaxTransmissionUnits-76) < =32. Min=4096, Max=61440,Default=32768  uint MaxTransmissionUnits: Ethernet maximumtransmission unit size for the protocol for use for Server and Device. Requiredthat IoBurstSize/(MaxTransmissionUnits-76) < =32. Min=502, Max=16426,Default=1506  uint MaxBootDevicesAllowed: Maximum number ofDevices allowed to boot simultaneously. Min=1, Max=1000, Default=500  uint MaxBootSeconds: Maximum number of seconds for aDevice to boot. Min=10, Max=900, Default=60  uint BootPauseSeconds: Number of seconds that aDevice will pause during login if its server busy. Min=1, Max=60, Default=10  bool AdMaxPasswordAgeEnabled: Age the password, whenset to true. Default=false  bool EventLoggingEnabled: Enable event logging, whenset to true. Default=false  bool NonBlockingIoEnabled: Use non-Blocking IO, whenset to true. Default=true  string[] Ip: One or more streaming ip addresses.  uint InitialQueryConnectionPoolSize: Initial size ofdatabase connection pool for non-transactional queries. Min=1, Max=1000,Default=50  uint InitialTransactionConnectionPoolSize: Initialsize of database connection pool for transactional queries. Min=1, Max=1000,Default=50  uint MaxQueryConnectionPoolSize: Maximum size of databaseconnection pool for non-transactional queries. Min=1, Max=32767, Default=1000  uint MaxTransactionConnectionPoolSize: Maximum sizeof database connection pool for transactional queries. Min=1, Max=32767,Default=1000  uint RefreshInterval: Interval, in number ofseconds, the server should wait before refreshing settings. If set to 0, unuseddatabase connections are never released. Min=0, Max=32767, Default=300  uint UnusedDbConnectionTimeout: Interval, in numberof seconds, a connection should go unused before it is to be released. Min=0,Max=32767, Default=300  uint BusyDbConnectionRetryCount: Number of times afailed database connection will be retried. Min=0, Max=32767, Default=2  uint BusyDbConnectionRetryInterval: Interval, innumber of milliseconds, the server should wait before retrying to connect to adatabase. Min=0, Max=10000, Default=25  uint LocalConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are local. A value of 0 disables thefeature. Min=0, Max=128, Default=4  uint RemoteConcurrentIoLimit: Maximum concurrent IOtransactions it performs for vDisks that are remote. A value of 0 disables thefeature. Min=0, Max=128, Default=4  string RamDiskIpAddress: IP address to use fortransferring the RAM Disk. When equal to 0.0.0.0 the server IP is used with thefirst part replaced with 233. Default=0.0.0.0  uint RamDiskTimeToLive: Time to live for theinvitation packet sent to Devices. Min=1, Max=255, Default=1  bool RamDiskInvitationType: Either false for Fixed,or true for Variable. Default=false  uint RamDiskInvitationPeriod: The amount of time inseconds that invitations are sent to Devices. Min=1, Max=300, Default=10  uint LogLevel: Level to perform logging at. Valuesare: 0 (None), 1 (Fatal), 2 (Error), 3 (Warning), 4 (Info), 5 (Debug), and 6(Trace). Min=0, Max=6, Default=4  uint LogFileSizeMax: Maximum size log files canreach in Megabytes. Min=1, Max=50, Default=5  uint LogFileBackupCopiesMax: Maximum number of logfile backups. Min=1, Max=50, Default=4  float PowerRating: A strictly relative rating ofthis Server's capabilities when compared to other Servers in the Store(s) itbelongs too; can be used to help tune load balancing. Min=0.1, Max=1000,Default=1  DateTime LastCeipUploadAttempt: Time that this serverlast attempted a CEIP upload. Default=Empty  DateTime LastBugReportAttempt: Time that this serverlast attempted to upload or generate a bug report bundle. Default=Empty  string LastBugReportStatus: Status of the last bugreport on this server. Default=\"\" Max Length=250  string LastBugReportResult: Status of the last bugreport on this server. Default=\"\" Max Length=4000  string LastBugReportSummary: Summary of the last bugreport on this server. Default=\"\" Max Length=250   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsServer object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to have confirmationwithout the Confirm parameter.", 
            "title": "Set-PvsServer"
        }, 
        {
            "location": "/#example-1-set-pvsserver-for-individual-fields", 
            "text": "Get the PvsServer into a $o variable. Change the $ofield values and then Set the PvsServer with the result.  $o = Get-PvsServer -Name theServer -FieldsLicenseTimeout, ThreadsPerPort  $o.LicenseTimeout = 60  $o.ThreadsPerPort = 10  Set-PvsServer $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsServer for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsserver-for-a-field-using-pipe", 
            "text": "Get the PvsServer into a $o variable. Change a $ofield to the correct value and then Set the PvsServer with the result.  Get-PvsServer -Name theServer -Fields LicenseTimeout| foreach { $o = $_; $o.LicenseTimeout = 60; $o } | Set-PvsServer  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsServer for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsserverbiosbootstrap", 
            "text": "Oem Only: Set Server Bios Bootstrap(s) changedvalues from PvsServerBiosBootstrap object(s), or set one or more field valuesfor a PvsServerBiosBootstrap.  Required  PvsServerBiosBootstrap ServerBiosBootstrap:PvsServerBiosBootstrap object(s) with changed property value(s) to be set. Theobject(s) can come from a pileline.  These values are in the PvsServerBiosBootstrapobject, and only will be set if the value has changed.  bool Enabled: Automatically update the BIOS on thetarget device with these setting when set to true, otherwise do not use thesesettings. Default=false  bool DhcpEnabled: Use DHCP to retrieve target deviceIP when set to true, otherwise use the static domain, dnsIpAddresstrue anddnsIpAddress2 settings. Default=true  bool Lookup: Use DNS to find the Server when set totrue with the ServerName host value, otherwise use the bootservertrue_Ip,bootservertrue_Port, bootserver2_Ip, bootserver2_Port, bootserver3_Ip,bootserver3_Port, bootserver4_Ip, and bootserver4_Port settings. Default=true  bool VerboseMode: Display verbose diagnosticinformation when set to true. Default=false  bool InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false  bool PaeMode: PAE mode (use if PAE enabled inboot.ini of target device) when set to true. Default=false  bool BootFromHdOnFail: For network recovery rebootto hard drive when set to true, restore network connection when set to false.Default=false  uint RecoveryTime: When bootFromHdOnFail is 1, thisis the number of seconds to wait before reboot to hard drive. Min=10,Max=60000, Default=50  uint PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000  uint GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000  string Name or ServerName: Host to use for DNSlookup. Only used when Lookup is true. Default=IMAGESERVER1  string Bootserver1_Ip: 1st boot server IP. Only usedwhen Lookup is false.  uint Bootserver1_Port: 1st boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910  string Bootserver2_Ip: 2nd boot server IP. Only usedwhen Lookup is false. Default=0.0.0.0  uint Bootserver2_Port: 2nd boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910  string Bootserver3_Ip: 3rd boot server IP. Only usedwhen Lookup is false. Default=0.0.0.0  uint Bootserver3_Port: 3rd boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910  string Bootserver4_Ip: 4th boot server IP. Only usedwhen Lookup is false. Default=0.0.0.0  uint Bootserver4_Port: 4th boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910  string Domain: Domain of the primary and secondaryDNS servers. Only used when DhcpEnabled is false.  string DnsIpAddress1: Primary DNS server IP. Onlyused when DhcpEnabled is false.  string DnsIpAddress2: Secondary DNS server IP. Onlyused when DhcpEnabled is false.   When ServerBiosBootstrap is not passed, theparameters below are used:  One of these required  Guid Guid or ServerId: GUID of the Server to Set thedell_bios.bin BIOS bootstrap file.  string Name or ServerName: Name of the Server to Setthe dell_bios.bin BIOS bootstrap file.  Optional field values to set:  bool Enabled: Automatically update the BIOS on thetarget device with these setting when set to true, otherwise do not use thesesettings. Default=false  bool DhcpEnabled: Use DHCP to retrieve target deviceIP when set to true, otherwise use the static domain, dnsIpAddresstrue anddnsIpAddress2 settings. Default=true  bool Lookup: Use DNS to find the Server when set totrue with the ServerName host value, otherwise use the bootservertrue_Ip,bootservertrue_Port, bootserver2_Ip, bootserver2_Port, bootserver3_Ip,bootserver3_Port, bootserver4_Ip, and bootserver4_Port settings. Default=true  bool VerboseMode: Display verbose diagnosticinformation when set to true. Default=false  bool InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false  bool PaeMode: PAE mode (use if PAE enabled inboot.ini of target device) when set to true. Default=false  bool BootFromHdOnFail: For network recovery rebootto hard drive when set to true, restore network connection when set to false.Default=false  uint RecoveryTime: When bootFromHdOnFail is 1, thisis the number of seconds to wait before reboot to hard drive. Min=10,Max=60000, Default=50  uint PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000  uint GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000  string NewName: Host to use for DNS lookup. Onlyused when Lookup is true. Default=IMAGESERVER1  string Bootserver1_Ip: 1st boot server IP. Only usedwhen Lookup is false.  uint Bootserver1_Port: 1st boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910  string Bootserver2_Ip: 2nd boot server IP. Only usedwhen Lookup is false. Default=0.0.0.0  uint Bootserver2_Port: 2nd boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910  string Bootserver3_Ip: 3rd boot server IP. Only usedwhen Lookup is false. Default=0.0.0.0  uint Bootserver3_Port: 3rd boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910  string Bootserver4_Ip: 4th boot server IP. Only usedwhen Lookup is false. Default=0.0.0.0  uint Bootserver4_Port: 4th boot server port. Onlyused when Lookup is false. Min=1025, Max=65536, Default=6910  string Domain: Domain of the primary and secondaryDNS servers. Only used when DhcpEnabled is false.  string DnsIpAddress1: Primary DNS server IP. Onlyused when DhcpEnabled is false.  string DnsIpAddress2: Secondary DNS server IP. Onlyused when DhcpEnabled is false.   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsServerBiosBootstrap object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsServerBiosBootstrap"
        }, 
        {
            "location": "/#example-1-set-pvsserverbiosbootstrap-for-individual-fields", 
            "text": "Get the PvsServerBiosBootstrap into a $o variable.Change the $o field values and then Set the PvsServerBiosBootstrap with theresult.  $o = Get-PvsServerBiosBootstrap -Name theServer-Fields DhcpEnabled  $o.DhcpEnabled = $true  Set-PvsServerBiosBootstrap $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsServerBiosBootstrap for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsserverbiosbootstrap-for-a-field-using-pipe", 
            "text": "Get the PvsServerBiosBootstrap into a $o variable.Change a $o field to the correct value and then Set the PvsServerBiosBootstrapwith the result.  Get-PvsServerBiosBootstrap -Name theServer -FieldsDhcpEnabled | foreach { $o = $_; $o.DhcpEnabled = $true; $o } |Set-PvsServerBiosBootstrap  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsServerBiosBootstrap for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsserverbootstrap", 
            "text": "Set Server Bootstrap(s) changed values fromPvsServerBootstrap object(s), or set one or more field values for aPvsServerBootstarp.  Required  PvsServerBootstrap ServerBootstrap:PvsServerBootstrap object(s) with changed property value(s) to be set. Theobject(s) can come from a pileline.  These values are in the PvsServerBootstrap object,and only will be set if the value has changed.  string Bootserver1_Ip: 1st boot server IP.  string Bootserver1_Netmask: 1st boot server netmask.Default=0.0.0.0  string Bootserver1_Gateway: 1st boot server gateway.Default=0.0.0.0  uint Bootserver1_Port: 1st boot server port.Min=1025, Max=65536, Default=6910  string Bootserver2_Ip: 2nd boot server IP.Default=0.0.0.0  string Bootserver2_Netmask: 2nd boot server netmask.Default=0.0.0.0  string Bootserver2_Gateway: 2nd boot server gateway.Default=0.0.0.0  uint Bootserver2_Port: 2nd boot server port.Min=1025, Max=65536, Default=6910  string Bootserver3_Ip: 3rd boot server IP.Default=0.0.0.0  string Bootserver3_Netmask: 3rd boot server netmask.Default=0.0.0.0  string Bootserver3_Gateway: 3rd boot server gateway.Default=0.0.0.0  uint Bootserver3_Port: 3rd boot server port. Min=1025,Max=65536, Default=6910  string Bootserver4_Ip: 4th boot server IP.Default=0.0.0.0  string Bootserver4_Netmask: 4th boot server netmask.Default=0.0.0.0  string Bootserver4_Gateway: 4th boot server gateway.Default=0.0.0.0  uint Bootserver4_Port: 4th boot server port.Min=1025, Max=65536, Default=6910  bool VerboseMode: Display verbose diagnosticinformation when set to true. Default=false  bool InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false  bool PaeMode: PAE mode (use if PAE enabled inboot.ini of target device) when set to true. Default=false  bool BootFromHdOnFail: For network recovery rebootto hard drive when set to true, restore network connection when set to false.Default=false  uint RecoveryTime: When bootFromHdOnFail is 1, thisis the number of seconds to wait before reboot to hard drive. Min=10,Max=60000, Default=50  uint PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000  uint GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000   When ServerBootstrap is not passed, the parametersbelow are used:  One of these required  Guid Guid or ServerId: GUID of the Server to Set thenamed bootstrap file on.  string ServerName: Name of the Server to Set thenamed bootstrap file on.  This required  string Name: Name of the bootstrap file.  Optional field values to set:  string Bootserver1_Ip: 1st boot server IP.  string Bootserver1_Netmask: 1st boot server netmask.Default=0.0.0.0  string Bootserver1_Gateway: 1st boot server gateway.Default=0.0.0.0  uint Bootserver1_Port: 1st boot server port.Min=1025, Max=65536, Default=6910  string Bootserver2_Ip: 2nd boot server IP.Default=0.0.0.0  string Bootserver2_Netmask: 2nd boot server netmask.Default=0.0.0.0  string Bootserver2_Gateway: 2nd boot server gateway.Default=0.0.0.0  uint Bootserver2_Port: 2nd boot server port.Min=1025, Max=65536, Default=6910  string Bootserver3_Ip: 3rd boot server IP.Default=0.0.0.0  string Bootserver3_Netmask: 3rd boot server netmask.Default=0.0.0.0  string Bootserver3_Gateway: 3rd boot server gateway.Default=0.0.0.0  uint Bootserver3_Port: 3rd boot server port.Min=1025, Max=65536, Default=6910  string Bootserver4_Ip: 4th boot server IP.Default=0.0.0.0  string Bootserver4_Netmask: 4th boot server netmask.Default=0.0.0.0  string Bootserver4_Gateway: 4th boot server gateway.Default=0.0.0.0  uint Bootserver4_Port: 4th boot server port.Min=1025, Max=65536, Default=6910  bool VerboseMode: Display verbose diagnosticinformation when set to true. Default=false  bool InterruptSafeMode: Interrupt safe mode (use iftarget device hangs during boot) when set to true. Default=false  bool PaeMode: PAE mode (use if PAE enabled inboot.ini of target device) when set to true. Default=false  bool BootFromHdOnFail: For network recovery rebootto hard drive when set to true, restore network connection when set to false.Default=false  uint RecoveryTime: When bootFromHdOnFail is 1, thisis the number of seconds to wait before reboot to hard drive. Min=10,Max=60000, Default=50  uint PollingTimeout: Login polling timeout inmilliseconds. Min=1000, Max=60000, Default=5000  uint GeneralTimeout: Login general timeout inmilliseconds. Min=1000, Max=60000, Default=5000   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsServerBootstrap object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsServerBootstrap"
        }, 
        {
            "location": "/#example-1-set-pvsserverbootstrap-for-individual-fields", 
            "text": "Get the PvsServerBootstrap into a $o variable.Change the $o field values and then Set the PvsServerBootstrap with the result.  $o = Get-PvsServerBootstrap -Name theBootstrapFile-ServerName theServer -Fields VerboseMode  $o.VerboseMode = $true  Set-PvsServerBootstrap $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsServerBootstrap for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsserverbootstrap-for-a-field-using-pipe", 
            "text": "Get the PvsServerBootstrap into a $o variable.Change a $o field to the correct value and then Set the PvsServerBootstrap withthe result.  Get-PvsServerBootstrap -Name theBootstrapFile-ServerName theServer -Fields VerboseMode | foreach { $o = $_; $o.VerboseMode =$true; $o } | Set-PvsServerBootstrap  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsServerBootstrap for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsserverstore", 
            "text": "Set ServerStore(s) changed values fromPvsServerStore object(s), or set one or more field values for a PvsServerStore.  Required  PvsServerStore ServerStore: PvsServerStore object(s)with changed property value(s) to be set. The object(s) can come from apileline.  These values are in the PvsServerStore object, andonly will be set if the value has changed.  string Path: Directory path that the Server uses toaccess the Store. Default=\"\" Max Length=255  string[] CachePath: Cache path(s) that the Serveruses with the Store. If none are specified the caches will be placed in theStore cachePath. Default=None   When ServerStore is not passed, the parameters beloware used:  One of these required  Guid Guid or ServerId: GUID of a Server that usesthe path to get to the Store.  string Name or ServerName: Name of a Server thatuses the path to get to the Store.  One of these required  Guid StoreId: GUID of the Store.  string StoreName: Name of the Store.  Optional field values to set:  string Path: Directory path that the Server uses toaccess the Store. Default=\"\" Max Length=255  string[] CachePath: Cache path(s) that the Serveruses with the Store. If none are specified the caches will be placed in theStore cachePath. Default=None   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsServerStore object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsServerStore"
        }, 
        {
            "location": "/#example-1-set-pvsserverstore-for-individual-fields", 
            "text": "Get the PvsServerStore into a $o variable. Changethe $o field values and then Set the PvsServerStore with the result.  $o = Get-PvsServerStore -ServerName theServer-StoreName theStore -Fields CachePath  $o.CachePath = \"\\\\Network\\CachePath\"  Set-PvsServerStore $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsServerStore for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsserverstore-for-a-field-using-pipe", 
            "text": "Get the PvsServerStore into a $o variable. Change a$o field to the correct value and then Set the PvsServerStore with the result.  Get-PvsServerStore -ServerName theServer -StoreNametheStore -Fields CachePath | foreach { $o = $_; $o.CachePath =\"\\\\Network\\CachePath\"; $o } | Set-PvsServerStore  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsServerStore for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvssite", 
            "text": "Set Site(s) changed values from PvsSite object(s),or set one or more field values for a PvsSite.  Required  PvsSite Site: PvsSite object(s) with changedproperty value(s) to be set. The object(s) can come from a pileline.  These values are in the PvsSite object, and onlywill be set if the value has changed.  string Name or SiteName: Name of the Site. MaxLength=50  string Description: User description.Default=\"\" Max Length=250  Guid DefaultCollectionId: GUID of the Collection toplace new Devices into automatically. Not used with defaultCollectionName.Default=00000000-0000-0000-0000-000000000000  string DefaultCollectionName: Name of the Collectionto place new Devices into automatically. Not used with DefaultCollectionId.Default=\"\"  uint InventoryFilePollingInterval: The number ofseconds between polls for Disk changes in the Stores. Min=1, Max=600,Default=60  bool EnableDiskUpdate: True when Disk Updated isenabled for the Site, false otherwise. Default=false  Guid DiskUpdateServerId: GUID of the Disk UpdateServer for the Site. Not used with DiskUpdateServerName.Default=00000000-0000-0000-0000-000000000000  string DiskUpdateServerName: Name of the Disk UpdateServer for the Site. Not used with DiskUpdateServerId. Default=\"\"  string MakUser: User name used for MAK activation.Default=\"\" Max Length=64  string MakPassword: User password used for MAKactivation. Default=\"\" Max Length=64   When Site is not passed, the parameters below areused:  One of these required  Guid Guid or SiteId: GUID of the Site to Set.  string Name or SiteName: Name of the Site to Set.  Optional field values to set:  string NewName: Name of the Site. Max Length=50  string Description: User description.Default=\"\" Max Length=250  Guid DefaultCollectionId: GUID of the Collection toplace new Devices into automatically. Not used with defaultCollectionName.Default=00000000-0000-0000-0000-000000000000  string DefaultCollectionName: Name of the Collectionto place new Devices into automatically. Not used with DefaultCollectionId.Default=\"\"  uint InventoryFilePollingInterval: The number ofseconds between polls for Disk changes in the Stores. Min=1, Max=600,Default=60  bool EnableDiskUpdate: True when Disk Updated isenabled for the Site, false otherwise. Default=false  Guid DiskUpdateServerId: GUID of the Disk UpdateServer for the Site. Not used with DiskUpdateServerName.Default=00000000-0000-0000-0000-000000000000  string DiskUpdateServerName: Name of the Disk UpdateServer for the Site. Not used with DiskUpdateServerId. Default=\"\"  string MakUser: User name used for MAK activation.Default=\"\" Max Length=64  string MakPassword: User password used for MAKactivation. Default=\"\" Max Length=64   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsSite object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsSite"
        }, 
        {
            "location": "/#example-1-set-pvssite-for-individual-fields", 
            "text": "Get the PvsSite into a $o variable. Change the $ofield values and then Set the PvsSite with the result.  $o = Get-PvsSite -Name theSite -FieldsInventoryFilePollingInterval  $o.InventoryFilePollingInterval = 120  Set-PvsSite $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsSite for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvssite-for-a-field-using-pipe", 
            "text": "Get the PvsSite into a $o variable. Change a $ofield to the correct value and then Set the PvsSite with the result.  Get-PvsSite -Name theSite -FieldsInventoryFilePollingInterval | foreach { $o = $_;$o.InventoryFilePollingInterval = 120; $o } | Set-PvsSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsSite for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvssiteview", 
            "text": "Set Site View(s) changed values from PvsSiteViewobject(s), or set one or more field values for a PvsSiteView.  Required  PvsSiteView SiteView: PvsSiteView object(s) withchanged property value(s) to be set. The object(s) can come from a pileline.  These values are in the PvsSiteView object, and onlywill be set if the value has changed.  string Name or SiteViewName: Name of the Site View.Max Length=50  string Description: User description.Default=\"\" Max Length=250   When SiteView is not passed, the parameters beloware used:  This required  Guid Guid or SiteViewId: GUID of the Site View toSet.  or this required ; resolution  string Name or SiteViewName: Name of the Site Viewto Set.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  Optional field values to set:  string NewName: Name of the Site View. Max Length=50  string Description: User description.Default=\"\" Max Length=250   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsSiteView object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsSiteView"
        }, 
        {
            "location": "/#example-1-set-pvssiteview-for-individual-fields", 
            "text": "Get the PvsSiteView into a $o variable. Change the$o field values and then Set the PvsSiteView with the result.  $o = Get-PvsSiteView -Name oldSiteView -SiteNametheSite -Fields Name  $o.Name = \"newSiteView\"  Set-PvsSiteView $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Set PvsSiteView for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvssiteview-for-a-field-using-pipe", 
            "text": "Get the PvsSiteView into a $o variable. Change a $ofield to the correct value and then Set the PvsSiteView with the result.  Get-PvsSiteView -Name oldSiteView -SiteName theSite-Fields Name | foreach { $o = $_; $o.Name = \"newSiteView\"; $o } |Set-PvsSiteView  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsSiteView for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsstore", 
            "text": "Set Store(s) changed values from PvsStore object(s),or set one or more field values for a PvsStore.  Required  PvsStore Store: PvsStore object(s) with changedproperty value(s) to be set. The object(s) can come from a pileline.  These values are in the PvsStore object, and onlywill be set if the value has changed.  string Name or StoreName: Name of the Store. MaxLength=50  Guid SiteId: GUID of the Site where Administratorsof that Site can change this Store. Not used for Farm Stores. SiteName can beused instead. Default=00000000-0000-0000-0000-000000000000  string SiteName: Name of the Site whereAdministrators of that Site can change this Store. Not used for Farm Stores.SiteId can be used instead. Default=\"\"  string Description: User description.Default=\"\" Max Length=250  string Path: Default directory path that the Serversuse to access this Store. Max Length=255  string[] CachePath: Default Cache path(s) that theServers use with this Store. If none are specified the caches will be placed inthe WriteCache subdirectory of the Store path. Default=None   When Store is not passed, the parameters below areused:  One of these required  Guid Guid or StoreId: GUID of the Store to Set.  string Name or StoreName: Name of the Store to Set.  Optional field values to set:  string NewName: Name of the Store. Max Length=50  Guid SiteId: GUID of the Site where Administratorsof that Site can change this Store. Not used for Farm Stores. SiteName can beused instead. Default=00000000-0000-0000-0000-000000000000  string SiteName: Name of the Site whereAdministrators of that Site can change this Store. Not used for Farm Stores.SiteId can be used instead. Default=\"\"  string Description: User description.Default=\"\" Max Length=250  string Path: Default directory path that the Serversuse to access this Store. Max Length=255  string[] CachePath: Default Cache path(s) that theServers use with this Store. If none are specified the caches will be placed inthe WriteCache subdirectory of the Store path. Default=None   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsStore object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsStore"
        }, 
        {
            "location": "/#example-1-set-pvsstore-for-individual-fields", 
            "text": "Get the PvsStore into a $o variable. Change the $ofield values and then Set the PvsStore with the result.  $o = Get-PvsStore -Name theStore -Fields CachePath  $o.CachePath = \"\\\\Network\\CachePath\"  Set-PvsStore $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsStore for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsstore-for-a-field-using-pipe", 
            "text": "Get the PvsStore into a $o variable. Change a $ofield to the correct value and then Set the PvsStore with the result.  Get-PvsStore -Name theStore -Fields CachePath |foreach { $o = $_; $o.CachePath = \"\\\\Network\\CachePath\"; $o } |Set-PvsStore  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsStore for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsupdatetask", 
            "text": "Set Update Task(s) changed values from PvsUpdateTaskobject(s), or set one or more field values for a PvsUpdateTask.  Required  PvsUpdateTask UpdateTask: PvsUpdateTask object(s)with changed property value(s) to be set. The object(s) can come from apileline.  These values are in the PvsUpdateTask object, andonly will be set if the value has changed.  string Name or UpdateTaskName: Name of the UpdateTask. It is unique within the Site. Max Length=50  string Description: User description.Default=\"\" Max Length=250  bool Enabled: True when it will be processed, falseotherwise. Default=true  uint Hour: The hour of the day to perform the task.Min=0, Max=23, Default=0  uint Minute: The minute of the hour to perform thetask. Min=0, Max=59, Default=0  uint Recurrence: The update will reoccur on thisschedule. 0 = None, 1 = Daily, 2 = Every Weekday, 3 = Weekly, 4 = Monthly Date,5 = Monthly Type. Min=0, Max=5, Default=0  uint DayMask: Days selected values. 1 = Monday, 2 =Tuesday, 4 = Wednesday, 8 = Thursday, 16 = Friday, 32 = Saturday, 64 = Sunday,128 = Day. Default=0. This is used with Weekly and Monthly Type recurrence.Min=1, Max=255, Default=4  uint[] Date: Days of the month. Numbers from 1-31are the only valid values. This is used with Monthly Date recurrence.Default=\"\" Max Length=83  uint MonthlyOffset: When to happen monthly. 0 =None, 1 = First, 2 = Second, 3 = Third, 4 = Forth, 5 = Last. This is used withMonthly Type recurrence. Min=0, Max=5, Default=3  string EsdType: Esd to use. Valid values are SCCM orWSUS. If no value, a custom script is run on the client. Default=\"\"Max Length=50  string PreUpdateScript: Script file to run beforethe update starts. Default=\"\" Max Length=255  string PreVmScript: Script file to run before the VMis loaded. Default=\"\" Max Length=255  string PostUpdateScript: Script file to run afterthe update finishes. Default=\"\" Max Length=255  string PostVmScript: Script file to run after the VMis unloaded. Default=\"\" Max Length=255  string Domain: Domain to add the Disk UpdateDevice(s) to. If not included, the first Domain Controller found on the Serveris used. Default=\"\" Max Length=255  string OrganizationUnit: Organizational Unit to addthe Disk Update Device(s) to. This parameter is optional. If it is notspecified, the device is added to the built in Computers container. Child OU'sshould be delimited with forward slashes, e.g. \"ParentOU/ChildOU\".Special characters in an OU name, such as '\"', '#', '+', ',', ';', '>','=', must be escaped with a backslash. For example, an OU called\"commaIn,TheMiddle\" must be specified as \"commaIn\\,TheMiddle\".The old syntax of delimiting child OU's with a comma is still supported, butdeprecated. Note that in this case, the child OU comes first, e.g.\"ChildOU,ParentOU\". Default=\"\" Max Length=255  uint PostUpdateApprove: Access to place the versionin after the update has occurred. 0 = Production, 1 = Test, 2 = Maintenance.Min=0, Max=2, Default=0   When UpdateTask is not passed, the parameters beloware used:  This required  Guid Guid or UpdateTaskId: GUID of the Update Taskto Set.  or this required ; resolution  string Name or UpdateTaskName: Name of the UpdateTask to Set.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  Optional field values to set:  string NewName: Name of the Update Task. It isunique within the Site. Max Length=50  string Description: User description.Default=\"\" Max Length=250  bool Enabled: True when it will be processed, falseotherwise. Default=true  uint Hour: The hour of the day to perform the task.Min=0, Max=23, Default=0  uint Minute: The minute of the hour to perform thetask. Min=0, Max=59, Default=0  uint Recurrence: The update will reoccur on thisschedule. 0 = None, 1 = Daily, 2 = Every Weekday, 3 = Weekly, 4 = Monthly Date,5 = Monthly Type. Min=0, Max=5, Default=0  uint DayMask: Days selected values. 1 = Monday, 2 =Tuesday, 4 = Wednesday, 8 = Thursday, 16 = Friday, 32 = Saturday, 64 = Sunday,128 = Day. Default=0. This is used with Weekly and Monthly Type recurrence.Min=1, Max=255, Default=4  uint[] Date: Days of the month. Numbers from 1-31are the only valid values. This is used with Monthly Date recurrence.Default=\"\" Max Length=83  uint MonthlyOffset: When to happen monthly. 0 =None, 1 = First, 2 = Second, 3 = Third, 4 = Forth, 5 = Last. This is used withMonthly Type recurrence. Min=0, Max=5, Default=3  string EsdType: Esd to use. Valid values are SCCM orWSUS. If no value, a custom script is run on the client. Default=\"\"Max Length=50  string PreUpdateScript: Script file to run beforethe update starts. Default=\"\" Max Length=255  string PreVmScript: Script file to run before the VMis loaded. Default=\"\" Max Length=255  string PostUpdateScript: Script file to run afterthe update finishes. Default=\"\" Max Length=255  string PostVmScript: Script file to run after the VMis unloaded. Default=\"\" Max Length=255  string Domain: Domain to add the Disk UpdateDevice(s) to. If not included, the first Domain Controller found on the Serveris used. Default=\"\" Max Length=255  string OrganizationUnit: Organizational Unit to addthe Disk Update Device(s) to. This parameter is optional. If it is notspecified, the device is added to the built in Computers container. Child OU'sshould be delimited with forward slashes, e.g. \"ParentOU/ChildOU\".Special characters in an OU name, such as '\"', '#', '+', ',', ';', '>','=', must be escaped with a backslash. For example, an OU called\"commaIn,TheMiddle\" must be specified as\"commaIn\\,TheMiddle\". The old syntax of delimiting child OU's with acomma is still supported, but deprecated. Note that in this case, the child OUcomes first, e.g. \"ChildOU,ParentOU\". Default=\"\" MaxLength=255  uint PostUpdateApprove: Access to place the versionin after the update has occurred. 0 = Production, 1 = Test, 2 = Maintenance.Min=0, Max=2, Default=0   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsUpdateTask object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsUpdateTask"
        }, 
        {
            "location": "/#example-1-set-pvsupdatetask-for-individual-fields", 
            "text": "Get the PvsUpdateTask into a $o variable. Change the$o field values and then Set the PvsUpdateTask with the result.  $o = Get-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Fields Date, Recurrence  $o.Date = 1, 15  $o.Recurrence = 4  Set-PvsUpdateTask $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Set PvsUpdateTask for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsupdatetask-for-a-field-using-pipe", 
            "text": "Get the PvsUpdateTask into a $o variable. Change a$o field to the correct value and then Set the PvsUpdateTask with the result.  Get-PvsUpdateTask -Name theUpdateTask -SiteName theSite-Fields Recurrence | foreach { $o = $_; $o.Recurrence = 1; $o } |Set-PvsUpdateTask  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsUpdateTask for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsvirtualhostingpool", 
            "text": "Set Virtual Hosting Pool(s) changed values fromPvsVirtualHostingPool object(s), or set one or more field values for a PvsVirtualHostingPool.  Required  PvsVirtualHostingPool VirtualHostingPool:PvsVirtualHostingPool object(s) with changed property value(s) to be set. Theobject(s) can come from a pileline.  These values are in the PvsVirtualHostingPoolobject, and only will be set if the value has changed.  string Name or VirtualHostingPoolName: Name of theVirtual Hosting Pool. It is unique within the Site. Max Length=50  uint Type: Type of the Virtual Hosting Pool. 0 =Citrix XenServer, 1 = Microsoft SCVMM/Hyper-V, 2 = VMWare vSphere/ESX. Min=0,Max=2, Default=0  string Description: User description.Default=\"\" Max Length=250  string Server: Name or IP of the Host Server. MaxLength=255  uint Port: Port of the Host Server. Min=80,Max=65534, Default=80  string Datacenter: Datacenter of the Virtual HostingPool. Default=\"\" Max Length=250  uint UpdateLimit: Number of updates at the sametime. Min=2, Max=1000, Default=1000  uint UpdateTimeout: Timeout for updates. Min=2,Max=240, Default=60  uint ShutdownTimeout: Timeout for shutdown. Min=2,Max=30, Default=10  string UserName: Name to use when logging into theServer.  string Password: Password to use when logging intothe Server.  Guid XdHostingUnitUuid: UUID of XenDesktop HostingUnit Default=00000000-0000-0000-0000-000000000000  bool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false  bool PrepopulateEnabled: Enable prepopulate when setto true Default=false  Guid XsPvsSiteUuid: UUID of XenServerPVS_site  Default=00000000-0000-0000-0000-000000000000   When VirtualHostingPool is not passed, theparameters below are used:  This required  Guid Guid or VirtualHostingPoolId: GUID of theVirtual Hosting Pool to Set.  or this required ; resolution  string Name or VirtualHostingPoolName: Name of theVirtual Hosting Pool to Set.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  Optional field values to set:  string NewName: Name of the Virtual Hosting Pool. Itis unique within the Site. Max Length=50  uint Type: Type of the Virtual Hosting Pool. 0 =Citrix XenServer, 1 = Microsoft SCVMM/Hyper-V, 2 = VMWare vSphere/ESX. Min=0,Max=2, Default=0  string Description: User description.Default=\"\" Max Length=250  string Server: Name or IP of the Host Server. MaxLength=255  uint Port: Port of the Host Server. Min=80,Max=65534, Default=80  string Datacenter: Datacenter of the Virtual HostingPool. Default=\"\" Max Length=250  uint UpdateLimit: Number of updates at the sametime. Min=2, Max=1000, Default=1000  uint UpdateTimeout: Timeout for updates. Min=2,Max=240, Default=60  uint ShutdownTimeout: Timeout for shutdown. Min=2,Max=30, Default=10  string UserName: Name to use when logging into theServer.  string Password: Password to use when logging intothe Server.  Guid XdHostingUnitUuid: UUID of XenDesktop HostingUnit Default=00000000-0000-0000-0000-000000000000  bool XsPvsProxyEnabled: Enable XenServer PVS proxywhen set to true Default=false  bool PrepopulateEnabled: Enable prepopulate when setto true Default=false  Guid XsPvsSiteUuid: UUID of XenServerPVS_site  Default=00000000-0000-0000-0000-000000000000   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsVirtualHostingPool object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsVirtualHostingPool"
        }, 
        {
            "location": "/#example-1-set-pvsvirtualhostingpool-for-individual-fields", 
            "text": "Get the PvsVirtualHostingPool into a $o variable.Change the $o field values and then Set the PvsVirtualHostingPool with theresult.  $o = Get-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite -Fields Port  $o.Port = 180  Set-PvsVirtualHostingPool $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Set PvsVirtualHostingPool for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsvirtualhostingpool-for-a-field-using-pipe", 
            "text": "Get the PvsVirtualHostingPool into a $o variable.Change a $o field to the correct value and then Set the PvsVirtualHostingPoolwith the result.  Get-PvsVirtualHostingPool -NametheVirtualHostingPool -SiteName theSite -Fields Port | foreach { $o = $_;$o.Port = 180; $o } | Set-PvsVirtualHostingPool  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsVirtualHostingPool for a Field Using Pipe"
        }, 
        {
            "location": "/#set-pvsxdsite", 
            "text": "Set XDSite(s) changed values from PvsXDSiteobject(s), or set one or more field values for a PvsXDSite.  Required  PvsXDSite XDSite: PvsXDSite object(s) with changedproperty value(s) to be set. The object(s) can come from a pileline.  These values are in the PvsXDSite object, and onlywill be set if the value has changed.  string[] ConfigServices: XenDesktop Serveraddresses. Max Length=2000   When XDSite is not passed, the parameters below areused:  This required  Guid Guid or XdSiteId: GUID of the XenDesktop Siteto Set.  Optional field values to set:  string[] ConfigServices: XenDesktop Serveraddresses. Max Length=2000   Optional  SwitchParameter PassThru: If -PassThru is specified,the resulting PvsXDSite object(s) are returned.  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Set-PvsXDSite"
        }, 
        {
            "location": "/#example-1-set-pvsxdsite-for-individual-fields", 
            "text": "Get the PvsXDSite into a $o variable. Change the $ofield values and then Set the PvsXDSite with the result.  $o = Get-PvsXDSite -Guid\"27965b92-7034-408c-9910-cfff53f1feec\" -Fields ConfigServices  $o.ConfigServices = \"192.168.0.190\",\"192.168.0.191\"  Set-PvsXDSite $o  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 1: Set PvsXDSite for Individual Fields"
        }, 
        {
            "location": "/#example-2-set-pvsxdsite-for-a-field-using-pipe", 
            "text": "Get the PvsXDSite into a $o variable. Change a $ofield to the correct value and then Set the PvsXDSite with the result.  Get-PvsXDSite -Guid\"27965b92-7034-408c-9910-cfff53f1feec\" -Fields ConfigServices |foreach { $o = $_; $o.ConfigServices = \"192.168.0.190\",\"192.168.0.191\"; $o } | Set-PvsXDSite  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  The \"foreach { $o = $_; $o.X = Y; $o }\"sets the field X to value Y and returns the object again so it can be piped tothe Set command for update.", 
            "title": "EXAMPLE 2: Set PvsXDSite for a Field Using Pipe"
        }, 
        {
            "location": "/#start-pvsautoupdate", 
            "text": "Apply Auto Update for a Server or all Servers in aSite.  One of these required  Guid[] Guid or ServerId: GUID of the Server to applyAuto Update.  string[] Name or ServerName: Name of the Server toapply Auto Update.  Guid[] SiteId: GUID of the Site to apply Auto Updateon all Servers.  string[] SiteName: Name of the Site to apply AutoUpdate on all Servers.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId or SiteId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Start-PvsAutoUpdate"
        }, 
        {
            "location": "/#example-1-start-pvsautoupdate-for-name", 
            "text": "Start-PvsAutoUpdate -Name theServer", 
            "title": "EXAMPLE 1: Start-PvsAutoUpdate for Name"
        }, 
        {
            "location": "/#example-2-start-pvsautoupdate-for-pvsserver-using-pipe", 
            "text": "The Get-PvsServer output is piped to theStart-PvsAutoUpdate.  Get-PvsServer -Name theServer -Fields -ServerId |Start-PvsAutoUpdate  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Start-PvsAutoUpdate for PvsServer Using Pipe"
        }, 
        {
            "location": "/#example-3-start-pvsautoupdate-for-sitename", 
            "text": "Start-PvsAutoUpdate -SiteName theSite", 
            "title": "EXAMPLE 3: Start-PvsAutoUpdate for SiteName"
        }, 
        {
            "location": "/#example-4-start-pvsautoupdate-for-pvssite-using-pipe", 
            "text": "The Get-PvsSite output is piped to theStart-PvsAutoUpdate.  Get-PvsSite -SiteName theSite -Fields -SiteId |Start-PvsAutoUpdate  The -Fields parameter with only the needed fields specifiedmakes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 4: Start-PvsAutoUpdate for PvsSite Using Pipe"
        }, 
        {
            "location": "/#start-pvscreatedisk", 
            "text": "Create a Disk and the Disk Locator for it. Returnsthe PvsDiskLocator created if finished. If not returned, then callCreateDiskStatus to get the PvsDiskLocator when processing finishes.  This required  string Name: Name of the Disk file to be created.  This required  UInt64 Size: Size of the disk in Megabytes for afixed size disk. Maximum size in Megabytes for a dynamically sized disk. Min=1,VHD Max=2088960, VHDX Max=67108864  One of these required  Guid StoreId: GUID of the Store that the Disk willbe a member of.  string StoreName: Name of the Store that the Diskwill be a member of.  One of these required  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  One of these optional  Guid ServerId: GUID of the only Server for thisDisk.  string ServerName: Name of the only Server for thisDisk.  Optional  string Description: Description of the Disk thatwill be placed in the Disk Locator.  SwitchParameter CreateDiskDisabled: If-CreateDiskDisabled is specified, the Disk will be created disabled. It iscreated Enabled by default.  SwitchParameter VHDX: If -VHDX is specified, VHDXwill be used for the format of the image. VHDX has a Block size of 32 MB. VHDis the default.  SwitchParameter Dynamic: If -Dynamic is specified, adynamic VHD that will be created. The default is fixed.  uint VhdBlockSize: Block size in KB. For VHD it isonly used with Dynamic type. Tested sizes for VHD are 512, 2048, and 16384. VHDMin=512, Max=16384, Default=2048. For VHDX it is used for all types. Testedsize for VHDX is 32768. VHDX Min=1024, Max= 262144, Default=32768.  uint LogicalSectorSize: Only used with VHDX format.Logical Sector Size. Values are: 512, 4096, Default=512  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  StoreId, SiteId or ServerId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsDiskLocator: If the create is already finishedand successful, the PvsDiskLocator is returned.", 
            "title": "Start-PvsCreateDisk"
        }, 
        {
            "location": "/#example-1-start-pvscreatedisk-for-vhdx-to-pvsdisklocator", 
            "text": "This example creates a Dynamic VHDX Disk that has asize of 20 GB.  $thePvsDiskLocator = Start-PvsCreateDisk -NametheDiskName -Size 20480 -StoreName theStore -SiteName theSite -VHDX -Dynamic  while ($thePvsDiskLocator -eq$null)                           #while the create is processing  {  %percentFinished = Get-PvsCreateDiskStatus -NametheDiskName -StoreName theStore  # get percent finished orDiskLocator when done  if (%percentFinished.GetType().Name ==\"PvsDiskLocator\")  {  $thePvsDiskLocator = %percentFinished  }  else  {  %percentFinished.ToString() + \"%finished\"                 #display percent finished  Start-Sleep -seconds10                                    #wait 10 seconds more  }  }  \"Successful\"", 
            "title": "EXAMPLE 1: Start-PvsCreateDisk for VHDX to PvsDiskLocator"
        }, 
        {
            "location": "/#example-2-start-pvscreatedisk-for-vhd-to-pvsdisklocator", 
            "text": "TThis example creates a Fixed VHD Disk that has asize of 20 GB.  $thePvsDiskLocator = Start-PvsCreateDisk -NametheDiskName -Size 20480 -StoreName theStore -SiteName theSite  while ($thePvsDiskLocator -eq$null)                           #while the create is processing  {  %percentFinished = Get-PvsCreateDiskStatus -NametheDiskName -StoreName theStore  # get percent finished orDiskLocator when done  if (%percentFinished.GetType().Name ==\"PvsDiskLocator\")  {  $thePvsDiskLocator = %percentFinished  }  else  {  %percentFinished.ToString() + \"%finished\"                 #display percent finished  Start-Sleep -seconds10                                    #wait 10 seconds more  }  }  \"Successful\"", 
            "title": "EXAMPLE 2: Start-PvsCreateDisk for VHD to PvsDiskLocator"
        }, 
        {
            "location": "/#start-pvsdeviceboot", 
            "text": "Boot a Device, Collection or View. Returns a PvsTaskof the Task being run. With the PvsTask, call Get-PvsTaskStatus to get thepercent complete, Get-PvsTask to get the results, and Stop-PvsTask to stop itearly. The PvsTask Results has the DeviceName/value of the devices thatsucceeded in the first name/value pair of each record of the XML.  One of these required  Guid[] Guid or DeviceId: GUID of the Device to Boot.  string[] Name or DeviceName: Name of the Device toBoot.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toBoot.  Guid CollectionId: GUID of the Collection to Bootall Devices.  Guid SiteViewId: GUID of the Site View to Boot allDevices.  Guid FarmViewId: GUID of the Farm View to Boot allDevices.  string FarmViewName: Name of the Farm View to Bootall Devices.  or one of these required ; resolutions  string CollectionName: Name of the Collection toBoot all Devices.  string SiteViewName: Name of the Site View to Bootall Devices.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceName, CollectionId, SiteViewId or FarmViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsTask: If successful, the PvsTask object for theprocess started is returned.", 
            "title": "Start-PvsDeviceBoot"
        }, 
        {
            "location": "/#example-1-start-pvsdeviceboot-for-devicename-to-pvstask", 
            "text": "$thePvsTask = Start-PvsDeviceBoot -DeviceNametheDevice              #start the task  while ($thePvsTask.State -eq0)                                #while the task is processing  {  %percentFinished = Get-PvsTaskStatus -Object$thePvsTask   # get percent finished  %percentFinished.ToString() + \"%finished\"                 #display percent finished  Start-Sleep -seconds10                                    #wait 10 seconds more  $thePvsTask = Get-PvsTask -Object$thePvsTask              #get the current PvsTask object  }  if ($thePvsTask.State -eq2)                                   #check to see if completed  {  \"Successful\"  }  else  {  \"Cancelled\"  }", 
            "title": "EXAMPLE 1: Start-PvsDeviceBoot for DeviceName to PvsTask"
        }, 
        {
            "location": "/#example-2-start-pvsdeviceboot-for-devicemac", 
            "text": "Start-PvsDeviceBoot -DeviceMac\"00-11-22-33-44-55\"", 
            "title": "EXAMPLE 2: Start-PvsDeviceBoot for DeviceMac"
        }, 
        {
            "location": "/#example-3-start-pvsdeviceboot-for-farmviewname", 
            "text": "Start-PvsDeviceBoot -FarmViewName theFarmView", 
            "title": "EXAMPLE 3: Start-PvsDeviceBoot for FarmViewName"
        }, 
        {
            "location": "/#example-4-start-pvsdeviceboot-for-collectionname", 
            "text": "Start-PvsDeviceBoot -CollectionName theCollection-SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 4: Start-PvsDeviceBoot for CollectionName"
        }, 
        {
            "location": "/#example-5-start-pvsdeviceboot-for-siteviewname", 
            "text": "Start-PvsDeviceBoot -SiteViewName theSiteView-SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 5: Start-PvsDeviceBoot for SiteViewName"
        }, 
        {
            "location": "/#start-pvsdevicedisktempversionmode", 
            "text": "Set a Temporary Disk Version for the specifiedDevice and optional DiskLocator. The Temporary Disk Version uses the productionversion that all production Devices boot from. Once set, the Device boots thisTemporary Disk Version instead of any currently assigned vDisk. Not supportedfor non-production and Personal vDisk Devices. Cannot be done when the theDevice already has a Temporary Disk Version, when the DiskLocator is usingserver side persistent cache mode or the active production version is inprivate mode.  One of these required  Guid[] Guid or DeviceId: GUID of the Device to startto use a temporary disk version.  string[] Name or DeviceName: Name of the Device tostart to use a temporary disk version.  PvsPhysicalAddress[] DeviceMac: MAC of the Device tostart to use a temporary disk version.  This optional  Guid[] DiskLocatorId: GUID of the Disk Locator touse a temporary version of. If not specified, the only Disk Locator assigned tothe Device is used.  or this optional ; resolution  string[] DiskLocatorName: Name of the Disk Locatorto use a temporary version of. If not specified, the only Disk Locator assignedto the Device is used.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId or DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Start-PvsDeviceDiskTempVersionMode"
        }, 
        {
            "location": "/#example-1-start-pvsdevicedisktempversionmode-for-devicename-withdisklocatorname", 
            "text": "Start-PvsDeviceDiskTempVersionMode -Name theDevice-DiskLocatorName theDiskLocator -StoreName theStore", 
            "title": "EXAMPLE 1: Start-PvsDeviceDiskTempVersionMode for DeviceName withDiskLocatorName"
        }, 
        {
            "location": "/#start-pvsdevicereboot", 
            "text": "Reboot a Device, Collection or View. Returns aPvsTask of the Task being run. With the PvsTask, call Get-PvsTaskStatus to getthe percent complete, Get-PvsTask to get the results, and Stop-PvsTask to stopit early. The PvsTask Results has the DeviceName/value of the devices thatsucceeded in the first name/value pair of each record of the XML.  One of these required  Guid[] Guid or DeviceId: GUID of the Device toReboot.  string[] Name or DeviceName: Name of the Device toReboot.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toReboot.  Guid CollectionId: GUID of the Collection to Rebootall Devices.  Guid SiteViewId: GUID of the Site View to Reboot allDevices.  Guid FarmViewId: GUID of the Farm View to Reboot allDevices.  string FarmViewName: Name of the Farm View to Rebootall Devices.  Guid DiskLocatorId: GUID of the DiskLocator toReboot all Devices.  or one of these required ; resolutions  string CollectionName: Name of the Collection toReboot all Devices.  string SiteViewName: Name of the Site View to Rebootall Devices.  string DiskLocatorName: Name of the DiskLocator toReboot all Devices.  Optional  string Message: Message to display before rebootingthe Device(s). Default=The target device is being shutdown remotely by theConsole.  uint Delay: Number of seconds to delay beforerebooting the Device(s). Default=10  uint Version: Version of the Disk to Reboot allDevices for. This is used with DiskLocatorId or DiskLocatorName.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  One of these resolutions when needed  Guid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceName, CollectionId, SiteViewId, FarmViewId orDiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.  PvsTask: If successful, the PvsTask object for theprocess started is returned.", 
            "title": "Start-PvsDeviceReboot"
        }, 
        {
            "location": "/#example-1-start-pvsdevicereboot-for-devicename-to-pvstask", 
            "text": "$thePvsTask = Start-PvsDeviceReboot -DeviceNametheDevice            #start the task  while ($thePvsTask.State -eq0)                                #while the task is processing  {  %percentFinished = Get-PvsTaskStatus -Object$thePvsTask   # get percent finished  %percentFinished.ToString() + \"%finished\"                 #display percent finished  Start-Sleep -seconds10                                    #wait 10 seconds more  $thePvsTask = Get-PvsTask -Object$thePvsTask              #get the current PvsTask object  }  if ($thePvsTask.State -eq2)                                   #check to see if completed  {  \"Successful\"  }  else  {  \"Cancelled\"  }", 
            "title": "EXAMPLE 1: Start-PvsDeviceReboot for DeviceName to PvsTask"
        }, 
        {
            "location": "/#example-2-start-pvsdevicereboot-for-devicemac", 
            "text": "Start-PvsDeviceReboot -DeviceMac\"00-11-22-33-44-55\"", 
            "title": "EXAMPLE 2: Start-PvsDeviceReboot for DeviceMac"
        }, 
        {
            "location": "/#example-3-start-pvsdevicereboot-for-farmviewname", 
            "text": "Start-PvsDeviceReboot -FarmViewName theFarmView", 
            "title": "EXAMPLE 3: Start-PvsDeviceReboot for FarmViewName"
        }, 
        {
            "location": "/#example-4-start-pvsdevicereboot-for-collectionname", 
            "text": "Start-PvsDeviceReboot -CollectionName theCollection-SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 4: Start-PvsDeviceReboot for CollectionName"
        }, 
        {
            "location": "/#example-5-start-pvsdevicereboot-for-siteviewname", 
            "text": "Start-PvsDeviceReboot -SiteViewName theSiteView-SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 5: Start-PvsDeviceReboot for SiteViewName"
        }, 
        {
            "location": "/#start-pvsdeviceshutdown", 
            "text": "Shutdown a Device, Collection or View. Returns aPvsTask of the Task being run. With the PvsTask, call Get-PvsTaskStatus to getthe percent complete, Get-PvsTask to get the results, and Stop-PvsTask to stopit early. The PvsTask Results has the DeviceName/value of the devices thatsucceeded in the first name/value pair of each record of the XML.  One of these required  Guid[] Guid or DeviceId: GUID of the Device toShutdown.  string[] Name or DeviceName: Name of the Device toShutdown.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toShutdown.  Guid CollectionId: GUID of the Collection toShutdown all Devices.  Guid SiteViewId: GUID of the Site View to Shutdownall Devices.  Guid FarmViewId: GUID of the Farm View to Shutdownall Devices.  string FarmViewName: Name of the Farm View toShutdown all Devices.  Guid DiskLocatorId: GUID of the DiskLocator toShutdown all Devices.  or one of these required ; resolutions  string CollectionName: Name of the Collection toShutdown all Devices.  string SiteViewName: Name of the Site View toShutdown all Devices.  string DiskLocatorName: Name of the DiskLocator toShutdown all Devices.  Optional  string Message: Message to display before shuttingdown the Device(s). Default=The target device is being shutdown remotely by theConsole.  uint Delay: Number of seconds to delay beforeshutting down the Device(s). Default=10  uint Version: Version of the Disk to Shutdown allDevices for. This is used with DiskLocatorId or DiskLocatorName.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  One of these resolutions when needed  Guid StoreId: GUID of the Store that is needed whena DiskLocatorName is used.  string StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceName, CollectionId, SiteViewId, FarmViewId orDiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.  PvsTask: If successful, the PvsTask object for theprocess started is returned.", 
            "title": "Start-PvsDeviceShutdown"
        }, 
        {
            "location": "/#example-1-start-pvsdeviceshutdown-for-devicename-to-pvstask", 
            "text": "$thePvsTask = Start-PvsDeviceShutdown -DeviceNametheDevice          # startthe task  while ($thePvsTask.State -eq0)                                #while the task is processing  {  %percentFinished = Get-PvsTaskStatus -Object$thePvsTask   # get percent finished  %percentFinished.ToString() + \"%finished\"                 #display percent finished  Start-Sleep -seconds10                                    #wait 10 seconds more  $thePvsTask = Get-PvsTask -Object$thePvsTask              #get the current PvsTask object  }  if ($thePvsTask.State -eq2)                                   #check to see if completed  {  \"Successful\"  }  else  {  \"Cancelled\"  }", 
            "title": "EXAMPLE 1: Start-PvsDeviceShutdown for DeviceName to PvsTask"
        }, 
        {
            "location": "/#example-2-start-pvsdeviceshutdown-for-devicemac", 
            "text": "Start-PvsDeviceShutdown -DeviceMac\"00-11-22-33-44-55\"", 
            "title": "EXAMPLE 2: Start-PvsDeviceShutdown for DeviceMac"
        }, 
        {
            "location": "/#example-3-start-pvsdeviceshutdown-for-farmviewname", 
            "text": "Start-PvsDeviceShutdown -FarmViewName theFarmView", 
            "title": "EXAMPLE 3: Start-PvsDeviceShutdown for FarmViewName"
        }, 
        {
            "location": "/#example-4-start-pvsdeviceshutdown-for-collectionname", 
            "text": "Start-PvsDeviceShutdown -CollectionName theCollection-SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 4: Start-PvsDeviceShutdown for CollectionName"
        }, 
        {
            "location": "/#example-5-start-pvsdeviceshutdown-for-siteviewname", 
            "text": "Start-PvsDeviceShutdown -SiteViewName theSiteView-SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 5: Start-PvsDeviceShutdown for SiteViewName"
        }, 
        {
            "location": "/#start-pvsdeviceupdatebdm", 
            "text": "Update the BDM partition for a Device, Collection orView. Returns a PvsTask of the Task being run. With the PvsTask, callGet-PvsTaskStatus to get the percent complete, Get-PvsTask to get the results,and Stop-PvsTask to stop it early. The PvsTask Results has the DeviceName/valueof the devices that succeeded in the first name/value pair of each record ofthe XML.  One of these required  Guid[] Guid or DeviceId: GUID of the Device toUpdate.  string[] Name or DeviceName: Name of the Device toUpdate.  Guid CollectionId: GUID of the Collection to Updateall BDM Devices.  Guid SiteViewId: GUID of the Site View to Update allBDM Devices.  Guid FarmViewId: GUID of the Farm View to Update allBDM Devices.  string FarmViewName: Name of the Farm View to Updateall BDM Devices.  or one of these required ; resolutions  string CollectionName: Name of the Collection toUpdate all BDM Devices.  string SiteViewName: Name of the Site View to Updateall BDMDevices.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceName, CollectionId, SiteViewId or FarmViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsTask: If successful, the PvsTask object for theprocess started is returned.", 
            "title": "Start-PvsDeviceUpdateBdm"
        }, 
        {
            "location": "/#example-1-start-pvsdeviceupdatebdm-for-devicename-to-pvstask", 
            "text": "$thePvsTask = Start-PvsDeviceUpdateBdm -DeviceNametheDevice              #start the task  while ($thePvsTask.State -eq0)                                #while the task is processing  {  %percentFinished = Get-PvsTaskStatus -Object$thePvsTask   # get percent finished  %percentFinished.ToString() + \"%finished\"                 #display percent finished  Start-Sleep -seconds10                                    #wait 10 seconds more  $thePvsTask = Get-PvsTask -Object$thePvsTask              #get the current PvsTask object  }  if ($thePvsTask.State -eq2)                                   #check to see if completed  {  \"Successful\"  }  else  {  \"Cancelled\"  }", 
            "title": "EXAMPLE 1: Start-PvsDeviceUpdateBdm for DeviceName to PvsTask"
        }, 
        {
            "location": "/#example-2-start-pvsdeviceupdatebdm-for-farmviewname", 
            "text": "Start-PvsDeviceUpdateBdm -FarmViewName theFarmView", 
            "title": "EXAMPLE 2: Start-PvsDeviceUpdateBdm for FarmViewName"
        }, 
        {
            "location": "/#example-3-start-pvsdeviceupdatebdm-for-collectionname", 
            "text": "Start-PvsDeviceUpdateBdm -CollectionNametheCollection -SiteName theSite  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 3: Start-PvsDeviceUpdateBdm for CollectionName"
        }, 
        {
            "location": "/#example-4-start-pvsdeviceupdatebdm-for-siteviewname", 
            "text": "Start-PvsDeviceUpdateBdm -SiteViewName theSiteView-SiteName theSite  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 4: Start-PvsDeviceUpdateBdm for SiteViewName"
        }, 
        {
            "location": "/#start-pvsdisplaymessage", 
            "text": "Display a message on a Device, Collection or View.Returns a PvsTask of the Task being run. With the PvsTask, callGet-PvsTaskStatus to get the percent complete, Get-PvsTask to get the results,and Stop-PvsTask to stop it early. The PvsTask Results has the DeviceName/valueof the devices that succeeded in the first name/value pair of each record ofthe XML.  This required  string Message: Message to display on the Device(s).  One of these required  Guid[] DeviceId: GUID of the Device to Display aMessage.  string[] DeviceName: Name of the Device to Display aMessage.  PvsPhysicalAddress[] DeviceMac: MAC of the Device toDisplay a Message.  Guid CollectionId: GUID of the Collection to Displaya Message on all Devices.  Guid SiteViewId: GUID of the Site View to Display aMessage all Devices.  Guid FarmViewId: GUID of the Farm View to Display aMessage on all Devices.  string FarmViewName: Name of the Farm View toDisplay a Message on all Devices.  or one of these required ; resolutions  string CollectionName: Name of the Collection toDisplay a Message on all Devices.  string SiteViewName: Name of the Site View toDisplay a Message on all Devices.  One of these resolutions when needed  Guid SiteId: GUID of the Site.  string SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceName, CollectionId, SiteViewId or FarmViewId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsTask: If successful, the PvsTask object for theprocess started is returned.", 
            "title": "Start-PvsDisplayMessage"
        }, 
        {
            "location": "/#example-1-start-pvsdisplaymessage-for-devicename-to-pvstask", 
            "text": "$thePvsTask = Start-PvsDisplayMessage -DeviceNametheDevice -Message \"message\" # start the task  while ($thePvsTask.State -eq0)                                #while the task is processing  {  %percentFinished = Get-PvsTaskStatus -Object$thePvsTask   # get percent finished  %percentFinished.ToString() + \"%finished\"                 #display percent finished  Start-Sleep -seconds10                                    #wait 10 seconds more  $thePvsTask = Get-PvsTask -Object$thePvsTask              #get the current PvsTask object  }  if ($thePvsTask.State -eq2)                                   #check to see if completed  {  \"Successful\"  }  else  {  \"Cancelled\"  }", 
            "title": "EXAMPLE 1: Start-PvsDisplayMessage for DeviceName to PvsTask"
        }, 
        {
            "location": "/#example-2-start-pvsdisplaymessage-for-devicemac", 
            "text": "Start-PvsDisplayMessage -DeviceMac \"00-11-22-33-44-55\"-Message \"message\"", 
            "title": "EXAMPLE 2: Start-PvsDisplayMessage for DeviceMac"
        }, 
        {
            "location": "/#example-3-start-pvsdisplaymessage-for-farmviewname", 
            "text": "Start-PvsDisplayMessage -FarmViewName theFarmView-Message \"message\"", 
            "title": "EXAMPLE 3: Start-PvsDisplayMessage for FarmViewName"
        }, 
        {
            "location": "/#example-4-start-pvsdisplaymessage-for-collectionname", 
            "text": "Start-PvsDisplayMessage -CollectionName theCollection-SiteName theSite -Message \"message\"  CollectionId can be used instead of CollectionNameso that the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 4: Start-PvsDisplayMessage for CollectionName"
        }, 
        {
            "location": "/#example-5-start-pvsdisplaymessage-for-siteviewname", 
            "text": "Start-PvsDisplayMessage -SiteViewName theSiteView -SiteNametheSite -Message \"message\"  SiteViewId can be used instead of SiteViewName sothat the SiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 5: Start-PvsDisplayMessage for SiteViewName"
        }, 
        {
            "location": "/#start-pvsreportbug", 
            "text": "Report a bug at individual server level or at sitelevel. Problem report can be uploaded to Citrix Systems or can be saved locallyin a path accessible from all servers in the farm.  One of these required  Guid Guid or SiteId: GUID of the Site.  Guid ServerId: GUID of the Server.  or one of these required ; resolutions  string Name or SiteName: Name of the Site.  string ServerName: Name of the Server.  This required  string Summary: Short summary describing theproblem.  This optional  string SrNumber: Service Request number of thereported problem.  This optional  string Description: Description of the reported problem.  This optional  string Path: Path where problem report bundle issaved.  This optional  DateTime DateTime: DateTime around which thereported problem occured.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  SiteId or ServerId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.  PvsTask: If successful, the PvsTask object for theprocess started is returned.", 
            "title": "Start-PvsReportBug"
        }, 
        {
            "location": "/#example-1-start-pvsreportbug-for-sitename-to-pvstask", 
            "text": "$thePvsTask = Start-PvsReportBug -SiteName theSite-bugReportSummary test bugreport            #start the task  while ($thePvsTask.State -eq0)                                                                   #while the task is processing  {  %percentFinished = Get-PvsTaskStatus -Object$thePvsTask                                      #get percent finished  %percentFinished.ToString() + \"%finished\"                                                  #display percent finished  Start-Sleep -seconds10                                                                       #wait 10 seconds more  $thePvsTask = Get-PvsTask -Object$thePvsTask                                                 #get the current PvsTask object  }  if ($thePvsTask.State -eq 2)                                                                      #check to see if completed  {  \"Successful\"  }  else  {  \"Cancelled\"  }", 
            "title": "EXAMPLE 1: Start-PvsReportBug for SiteName to PvsTask"
        }, 
        {
            "location": "/#start-pvsstreamservice", 
            "text": "Start the Stream Service on a Server or all Serversin a Site.  One of these required  Guid[] Guid or ServerId: GUID of the Server to startthe Stream Service.  string[] Name or ServerName: Name of the Server tostart the Stream Service.  Guid[] SiteId: GUID of the Site to start the StreamService on all Servers.  string[] SiteName: Name of the Site to start theStream Service on all Servers.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId or SiteId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Start-PvsStreamService"
        }, 
        {
            "location": "/#example-1-start-pvsstreamservice-for-name", 
            "text": "Start-PvsStreamService -Name theServer", 
            "title": "EXAMPLE 1: Start-PvsStreamService for Name"
        }, 
        {
            "location": "/#example-2-start-pvsstreamservice-for-pvsserver-using-pipe", 
            "text": "The Get-PvsServer output is piped to theStart-PvsStreamService.  Get-PvsServer -Name theServer -Fields Guid |Start-PvsStreamService  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Start-PvsStreamService for PvsServer Using Pipe"
        }, 
        {
            "location": "/#example-3-start-pvsstreamservice-for-sitename", 
            "text": "Start-PvsStreamService -SiteName theSite", 
            "title": "EXAMPLE 3: Start-PvsStreamService for SiteName"
        }, 
        {
            "location": "/#example-4-start-pvsstreamservice-for-pvssite-using-pipe", 
            "text": "The Get-PvsSite output is piped to theStart-PvsStreamService.  Get-PvsSite -Name theSite -Fields Guid |Start-PvsStreamService  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 4: Start-PvsStreamService for PvsSite Using Pipe"
        }, 
        {
            "location": "/#start-pvsupdatetask", 
            "text": "Starts an Update Task.  This required  Guid[] Guid or UpdateTaskId: GUID of the Update Taskto Start.  or this required ; resolution  string[] Name or UpdateTaskName: Name of the UpdateTask to Start.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  UpdateTaskId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Start-PvsUpdateTask"
        }, 
        {
            "location": "/#example-1-start-pvsupdatetask-for-name", 
            "text": "Start-PvsUpdateTask -Name theUpdateTask -SiteNametheSite  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 1: Start-PvsUpdateTask for Name"
        }, 
        {
            "location": "/#example-2-start-pvsupdatetask-for-pvsupdatetask-using-pipe", 
            "text": "The Get-PvsUpdateTask output is piped to theStart-PvsUpdateTask.  Get-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Fields Guid | Start-PvsUpdateTask  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 2: Start-PvsUpdateTask for PvsUpdateTask Using Pipe"
        }, 
        {
            "location": "/#stop-pvscreatedisk", 
            "text": "Cancel an active CreateDisk.  This required  string[] Name: Name of the Disk file that is beingcreated.  One of these required  Guid[] StoreId: GUID of the Store that the Disk willbe a member of.  string[] StoreName: Name of the Store that the Diskwill be a member of.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  StoreId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Stop-PvsCreateDisk"
        }, 
        {
            "location": "/#example-1-stop-pvscreatedisk-for-name", 
            "text": "Stop-PvsCreateDisk -Name theDiskFile -StoreNametheStore", 
            "title": "EXAMPLE 1: Stop-PvsCreateDisk for Name"
        }, 
        {
            "location": "/#example-2-stop-pvscreatedisk-for-pvsstore-using-pipe", 
            "text": "The Get-PvsStore output is piped to theStop-PvsCreateDisk.  Get-PvsStore -Name theStore -Fields Guid |Stop-PvsCreateDisk -Name theDiskFile  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Stop-PvsCreateDisk for PvsStore Using Pipe"
        }, 
        {
            "location": "/#stop-pvsdevicedisktempversionmode", 
            "text": "Unset the Temporary Disk Version for the specifiedDevice. The Device must not currently be booted. Once removed, the Device againuses any currently assigned vDisk when booted.  One of these required  Guid[] Guid or DeviceId: GUID of the Device to nolonger use a temporary disk version for.  string[] Name or DeviceName: Name of the Device tono longer use a temporary disk version for.  PvsPhysicalAddress[] DeviceMac: MAC of the Device tono longer use a temporary disk version for.  Guid[] DiskLocatorId: GUID of the DiskLocator to nolonger use temporary disk versions for.  Guid[] SiteId: GUID of the Site for resolution ofthe DiskLocatorName.  string[] SiteName: Name of the Site for resolutionof the DiskLocatorName.  or this required ; resolution  string[] DiskLocatorName: Name of the DiskLocator tono longer use temporary disk versions for.  This optional ; resolution  string[] Version: Version of the DiskLocator to nolonger use temporary disk versions for.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site for resolution ofthe DiskLocatorName.  string[] SiteName: Name of the Site for resolutionof the DiskLocatorName.  One of these resolutions when needed  Guid[] DiskLocatorId: GUID of the DiskLocator to nolonger use temporary disk versions for.  string[] DiskLocatorName: Name of the DiskLocator tono longer use temporary disk versions for.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DeviceId, DiskLocatorId or SiteId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Stop-PvsDeviceDiskTempVersionMode"
        }, 
        {
            "location": "/#example-1-stop-pvsdevicedisktempversionmode-for-device", 
            "text": "Stop-PvsDeviceDiskTempVersionMode -Name theDevice", 
            "title": "EXAMPLE 1: Stop-PvsDeviceDiskTempVersionMode for Device"
        }, 
        {
            "location": "/#example-2-stop-pvsdevicedisktempversionmode-for-disklocator", 
            "text": "Stop-PvsDeviceDiskTempVersionMode -DiskLocatorNametheDiskLocator -SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Stop-PvsDeviceDiskTempVersionMode for DiskLocator"
        }, 
        {
            "location": "/#example-3-stop-pvsdevicedisktempversionmode-with-disklocator", 
            "text": "Stop-PvsDeviceDiskTempVersionMode -DiskLocatorNametheDiskLocator -Version 4 -SiteName theSite -StoreName theStore  DiskLocatorId can be used instead of DiskLocatorNameso that the StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 3: Stop-PvsDeviceDiskTempVersionMode with DiskLocator"
        }, 
        {
            "location": "/#stop-pvsstreamservice", 
            "text": "Stop the Stream Service on a Server or all Serversin a Site.  One of these required  Guid[] Guid or ServerId: GUID of the Server to stopthe Stream Service.  string[] Name or ServerName: Name of the Server tostop the Stream Service.  Guid[] SiteId: GUID of the Site to stop the StreamService on all Servers.  string[] SiteName: Name of the Site to stop theStream Service on all Servers.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId or SiteId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Stop-PvsStreamService"
        }, 
        {
            "location": "/#example-1-stop-pvsstreamservice-for-name", 
            "text": "Stop-PvsStreamService -Name theServer", 
            "title": "EXAMPLE 1: Stop-PvsStreamService for Name"
        }, 
        {
            "location": "/#example-2-stop-pvsstreamservice-for-pvsserver-using-pipe", 
            "text": "The Get-PvsServer output is piped to theStop-PvsStreamService.  Get-PvsServer -Name theServer -Fields Guid |Stop-PvsStreamService  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Stop-PvsStreamService for PvsServer Using Pipe"
        }, 
        {
            "location": "/#example-3-stop-pvsstreamservice-for-sitename", 
            "text": "Stop-PvsStreamService -SiteName theSite", 
            "title": "EXAMPLE 3: Stop-PvsStreamService for SiteName"
        }, 
        {
            "location": "/#example-4-stop-pvsstreamservice-for-pvssite-using-pipe", 
            "text": "The Get-PvsSite output is piped to theStop-PvsStreamService.  Get-PvsSite -Name theSite -Fields Guid |Stop-PvsStreamService  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 4: Stop-PvsStreamService for PvsSite Using Pipe"
        }, 
        {
            "location": "/#stop-pvstask", 
            "text": "Cancel a running Task.  This required  uint TaskId: Id of the Task to Cancel.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  TaskId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Stop-PvsTask"
        }, 
        {
            "location": "/#example-1-stop-pvstask-for-taskid", 
            "text": "Stop-PvsTask -TaskId 101", 
            "title": "EXAMPLE 1: Stop-PvsTask for TaskId"
        }, 
        {
            "location": "/#stop-pvsupdatetask", 
            "text": "Cancel an active Update Task for an Update Device.  This required  Guid[] Guid or UpdateTaskId: GUID of the Update Taskto Cancel.  or this required ; resolution  string[] Name or UpdateTaskName: Name of the UpdateTask to Cancel.  One of these required  Guid[] DeviceId: GUID of a specific Update Device toCancel an Update Task for.  string[] DeviceName: Name of a specific UpdateDevice to Cancel an Update Task for.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  UpdateTaskId or DeviceId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Stop-PvsUpdateTask"
        }, 
        {
            "location": "/#example-1-stop-pvsupdatetask-for-name", 
            "text": "Stop-PvsUpdateTask -Name theUpdateTask -DeviceNametheDevice", 
            "title": "EXAMPLE 1: Stop-PvsUpdateTask for Name"
        }, 
        {
            "location": "/#example-2-stop-pvsupdatetask-for-pvsupdatetask-using-pipe", 
            "text": "The Get-PvsUpdateTask output is piped to theStop-PvsUpdateTask.  Get-PvsUpdateTask -Name theUpdateTask -SiteNametheSite -Fields Guid | Stop-PvsUpdateTask -DeviceName theDevice  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId is not also needed.", 
            "title": "EXAMPLE 2: Stop-PvsUpdateTask for PvsUpdateTask Using Pipe"
        }, 
        {
            "location": "/#example-3-stop-pvsupdatetask-for-pvsdiskupdatedevice-using-pipe", 
            "text": "The Get-PvsDiskUpdateDevice output is piped to theStop-PvsUpdateTask.  Get-PvsDiskUpdateDevice -Name theDevice -Fields Guid| Stop-PvsUpdateTask -Name theUpdateTask  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 3: Stop-PvsUpdateTask for PvsDiskUpdateDevice Using Pipe"
        }, 
        {
            "location": "/#test-pvsdirectory", 
            "text": "Validate a Directory on the Server specified.  One of these required  Guid[] Guid or ServerId: GUID of the Server tovalidate a Directory on.  string[] Name or ServerName: Name of the Server tovalidate a Directory on.  This required  string[] Path: Path of the Directory to validate.  This optional  SwitchParameter ReadOnly: If -ReadOnly is specified,the directory should be validated for a managed read-only store.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  ServerId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"low\". If -Confirm is specified, the operation will beconfirmed. $ConfirmPreference can be set to \"low\" to haveconfirmation without the Confirm parameter.", 
            "title": "Test-PvsDirectory"
        }, 
        {
            "location": "/#example-1-test-pvsdirectory-for-name", 
            "text": "Test-PvsDirectory -Name theServer -Path\"C:\\directory\\subdirectory\"", 
            "title": "EXAMPLE 1: Test-PvsDirectory for Name"
        }, 
        {
            "location": "/#example-2-test-pvsdirectory-for-pvsserver-using-pipe", 
            "text": "The Get-PvsServer output is piped to theTest-PvsDirectory.  Get-PvsServer -Name theServer -Fields Guid |Test-PvsDirectory -Path \"C:\\directory\\subdirectory\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 2: Test-PvsDirectory for PvsServer Using Pipe"
        }, 
        {
            "location": "/#example-3-test-pvsdirectory-for-name-with-readonly", 
            "text": "Test-PvsDirectory -Name theServer -Path\"C:\\directory\\subdirectory\" -ReadOnly", 
            "title": "EXAMPLE 3: Test-PvsDirectory for Name with ReadOnly"
        }, 
        {
            "location": "/#example-4-test-pvsdirectory-for-pvsserver-using-pipe", 
            "text": "The Get-PvsServer output is piped to the Test-PvsDirectory.  Get-PvsServer -Name theServer -Fields Guid |Test-PvsDirectory -Path \"C:\\directory\\subdirectory\" -ReadOnly  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.", 
            "title": "EXAMPLE 4: Test-PvsDirectory for PvsServer Using Pipe"
        }, 
        {
            "location": "/#unlock-pvsalldisk", 
            "text": "Remove all locks for a Disk.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to remove all locks for the Disk.  or this required ; resolution  string[] Name or DiskLocatorName: Name of DiskLocator to remove all locks for the Disk.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Unlock-PvsAllDisk"
        }, 
        {
            "location": "/#example-1-unlock-pvsalldisk-for-name", 
            "text": "Unlock-PvsAllDisk -Name theDiskLocator -SiteNametheSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Unlock-PvsAllDisk for Name"
        }, 
        {
            "location": "/#example-2-unlock-pvsalldisk-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theUnlock-PvsAllDisk.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Unlock-PvsAllDisk  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Unlock-PvsAllDisk for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#unlock-pvsdisk", 
            "text": "Remove lock for the Disk.  This required  Guid[] Guid or DiskLocatorId: GUID of the DiskLocator to remove a lock for the Disk.  or this required ; resolution  string[] Name or DiskLocatorName: Name of the DiskLocator to remove a lock for the Disk.  Optional  Guid[] OwnerId: GUID of the Owner of the Disk Lock.  One of these resolutions when needed  Guid[] SiteId: GUID of the Site.  string[] SiteName: Name of the Site.  One of these resolutions when needed  Guid[] StoreId: GUID of the Store that is neededwhen a DiskLocatorName is used.  string[] StoreName: Name of the Store that is neededwhen a DiskLocatorName is used.  Instead of a parameter that matches one of themembers listed  PvsObject[] Object: PvsObjects with the membersbelow can be used as the Object parameter or from a pileline:  DiskLocatorId  Optional  SwitchParameter Confirm: The impact of thisoperation is \"medium\". If -Confirm is specified, the operation willbe confirmed. $ConfirmPreference can be set to \"medium\" or\"low\" to have confirmation without the Confirm parameter.", 
            "title": "Unlock-PvsDisk"
        }, 
        {
            "location": "/#example-1-unlock-pvsdisk-for-name", 
            "text": "Unlock-PvsDisk -Name theDiskLocator -SiteNametheSite -StoreName theStore  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 1: Unlock-PvsDisk for Name"
        }, 
        {
            "location": "/#example-2-unlock-pvsdisk-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to the Unlock-PvsDisk.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Unlock-PvsDisk  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 2: Unlock-PvsDisk for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#example-3-unlock-pvsdisk-for-name-with-ownerid", 
            "text": "Unlock-PvsDisk -Name theDiskLocator -SiteNametheSite -StoreName theStore -OwnerId = \"e6c9884e-067c-4924-a581-312c699b4bb6\"  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 3: Unlock-PvsDisk for Name with OwnerId"
        }, 
        {
            "location": "/#example-4-unlock-pvsdisk-for-pvsdisklocator-using-pipe", 
            "text": "The Get-PvsDiskLocator output is piped to theUnlock-PvsDisk.  Get-PvsDiskLocator -Name theDiskLocator -SiteNametheSite -StoreName theStore -Fields Guid | Unlock-PvsDisk -OwnerId =\"e6c9884e-067c-4924-a581-312c699b4bb6\"  The -Fields parameter with only the needed fieldsspecified makes the Get work faster because only those fields are retrieved.  Guid can be used instead of Name so that theSiteName or SiteId and StoreName or StoreId are not also needed.", 
            "title": "EXAMPLE 4: Unlock-PvsDisk for PvsDiskLocator Using Pipe"
        }, 
        {
            "location": "/#update-pvsinventory", 
            "text": "Force the Inventory service to refresh its InventoryTable.", 
            "title": "Update-PvsInventory"
        }, 
        {
            "location": "/#example-1-update-pvsinventory", 
            "text": "Update-PvsInventory", 
            "title": "EXAMPLE 1: Update-PvsInventory"
        }
    ]
}